task_name,task_generator,dreamcoder_program_dsl_0,dreamcoder_program_dsl_0_tokens,ground_truth_strokes,n_strokes,dreamcoder_program_dsl_0_verbosity_0,dreamcoder_program_dsl_0_verbosity_1,low_level_parts,mid_level_parts,high_level_parts,low_level_part_types,mid_level_part_types,high_level_part_types,low_level_part_params,mid_level_part_params,high_level_part_params,low_level_parts_with_params,mid_level_parts_with_params,high_level_parts_with_params,low_level_part_types_with_params,mid_level_part_types_with_params,high_level_part_types_with_params,s3_stimuli
dials_context_programs_context_large_abstractions_000,dials_context_programs_train,(C (C (C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 5 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['C', 'C', 'C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '5', 'M', '1', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '*', '-', '5', '1', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '*', '+', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '*', '2', '0.5', '0.25', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '-', '0', '*', '+', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '*', '2', '0.5', '0.25', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5 ,  2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [ 8.5 , -2.25]]), array([[ 8.5 , -2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [-8.5 ,  2.25]]), array([[8.5  , 1.125],
       [9.5  , 1.125]]), array([[ 8.5  , -1.125],
       [ 9.5  , -1.125]]), array([[ 9.5  , -1.125],
       [ 9.5  ,  1.125]]), array([[ 8.5  , -1.125],
       [ 8.5  ,  1.125]]), array([[-9.5  ,  1.125],
       [-8.5  ,  1.125]]), array([[-9.5  , -1.125],
       [-8.5  , -1.125]]), array([[-8.5  , -1.125],
       [-8.5  ,  1.125]]), array([[-9.5  , -1.125],
       [-9.5  ,  1.125]]), array([[-4.50000000e+00,  0.00000000e+00],
       [-4.51168972e+00,  1.07485220e-01],
       [-4.54621229e+00,  2.09944551e-01],
       [-4.60195347e+00,  3.02587108e-01],
       [-4.67630686e+00,  3.81081028e-01],
       [-4.76579578e+00,  4.41756022e-01],
       [-4.86623583e+00,  4.81774996e-01],
       [-4.97293055e+00,  4.99266707e-01],
       [-5.08089100e+00,  4.93413261e-01],
       [-5.18506908e+00,  4.64488360e-01],
       [-5.28059353e+00,  4.13844499e-01],
       [-5.36299775e+00,  3.43849729e-01],
       [-5.42842859e+00,  2.57776929e-01],
       [-5.47382659e+00,  1.59650765e-01],
       [-5.49706898e+00,  5.40595092e-02],
       [-5.49706898e+00, -5.40595092e-02],
       [-5.47382659e+00, -1.59650765e-01],
       [-5.42842859e+00, -2.57776929e-01],
       [-5.36299775e+00, -3.43849729e-01],
       [-5.28059353e+00, -4.13844499e-01],
       [-5.18506908e+00, -4.64488360e-01],
       [-5.08089100e+00, -4.93413261e-01],
       [-4.97293055e+00, -4.99266707e-01],
       [-4.86623583e+00, -4.81774996e-01],
       [-4.76579578e+00, -4.41756022e-01],
       [-4.67630686e+00, -3.81081028e-01],
       [-4.60195347e+00, -3.02587108e-01],
       [-4.54621229e+00, -2.09944551e-01],
       [-4.51168972e+00, -1.07485220e-01],
       [-4.50000000e+00, -1.22464680e-16]]), array([[-5.75, -0.75],
       [-4.25, -0.75],
       [-4.25,  0.75],
       [-5.75,  0.75],
       [-5.75, -0.75]]), array([[-5.,  0.],
       [-5.,  1.]]), array([[-2.00000000e+00,  0.00000000e+00],
       [-2.01168972e+00,  1.07485220e-01],
       [-2.04621229e+00,  2.09944551e-01],
       [-2.10195347e+00,  3.02587108e-01],
       [-2.17630686e+00,  3.81081028e-01],
       [-2.26579578e+00,  4.41756022e-01],
       [-2.36623583e+00,  4.81774996e-01],
       [-2.47293055e+00,  4.99266707e-01],
       [-2.58089100e+00,  4.93413261e-01],
       [-2.68506908e+00,  4.64488360e-01],
       [-2.78059353e+00,  4.13844499e-01],
       [-2.86299775e+00,  3.43849729e-01],
       [-2.92842859e+00,  2.57776929e-01],
       [-2.97382659e+00,  1.59650765e-01],
       [-2.99706898e+00,  5.40595092e-02],
       [-2.99706898e+00, -5.40595092e-02],
       [-2.97382659e+00, -1.59650765e-01],
       [-2.92842859e+00, -2.57776929e-01],
       [-2.86299775e+00, -3.43849729e-01],
       [-2.78059353e+00, -4.13844499e-01],
       [-2.68506908e+00, -4.64488360e-01],
       [-2.58089100e+00, -4.93413261e-01],
       [-2.47293055e+00, -4.99266707e-01],
       [-2.36623583e+00, -4.81774996e-01],
       [-2.26579578e+00, -4.41756022e-01],
       [-2.17630686e+00, -3.81081028e-01],
       [-2.10195347e+00, -3.02587108e-01],
       [-2.04621229e+00, -2.09944551e-01],
       [-2.01168972e+00, -1.07485220e-01],
       [-2.00000000e+00, -1.22464680e-16]]), array([[-3.25, -0.75],
       [-1.75, -0.75],
       [-1.75,  0.75],
       [-3.25,  0.75],
       [-3.25, -0.75]]), array([[-2.5,  0. ],
       [-2.5,  1. ]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[-0.75, -0.75],
       [ 0.75, -0.75],
       [ 0.75,  0.75],
       [-0.75,  0.75],
       [-0.75, -0.75]]), array([[0., 0.],
       [0., 1.]]), array([[ 3.00000000e+00,  0.00000000e+00],
       [ 2.98831028e+00,  1.07485220e-01],
       [ 2.95378771e+00,  2.09944551e-01],
       [ 2.89804653e+00,  3.02587108e-01],
       [ 2.82369314e+00,  3.81081028e-01],
       [ 2.73420422e+00,  4.41756022e-01],
       [ 2.63376417e+00,  4.81774996e-01],
       [ 2.52706945e+00,  4.99266707e-01],
       [ 2.41910900e+00,  4.93413261e-01],
       [ 2.31493092e+00,  4.64488360e-01],
       [ 2.21940647e+00,  4.13844499e-01],
       [ 2.13700225e+00,  3.43849729e-01],
       [ 2.07157141e+00,  2.57776929e-01],
       [ 2.02617341e+00,  1.59650765e-01],
       [ 2.00293102e+00,  5.40595092e-02],
       [ 2.00293102e+00, -5.40595092e-02],
       [ 2.02617341e+00, -1.59650765e-01],
       [ 2.07157141e+00, -2.57776929e-01],
       [ 2.13700225e+00, -3.43849729e-01],
       [ 2.21940647e+00, -4.13844499e-01],
       [ 2.31493092e+00, -4.64488360e-01],
       [ 2.41910900e+00, -4.93413261e-01],
       [ 2.52706945e+00, -4.99266707e-01],
       [ 2.63376417e+00, -4.81774996e-01],
       [ 2.73420422e+00, -4.41756022e-01],
       [ 2.82369314e+00, -3.81081028e-01],
       [ 2.89804653e+00, -3.02587108e-01],
       [ 2.95378771e+00, -2.09944551e-01],
       [ 2.98831028e+00, -1.07485220e-01],
       [ 3.00000000e+00, -1.22464680e-16]]), array([[ 1.75, -0.75],
       [ 3.25, -0.75],
       [ 3.25,  0.75],
       [ 1.75,  0.75],
       [ 1.75, -0.75]]), array([[2.5, 0. ],
       [2.5, 1. ]]), array([[ 5.50000000e+00,  0.00000000e+00],
       [ 5.48831028e+00,  1.07485220e-01],
       [ 5.45378771e+00,  2.09944551e-01],
       [ 5.39804653e+00,  3.02587108e-01],
       [ 5.32369314e+00,  3.81081028e-01],
       [ 5.23420422e+00,  4.41756022e-01],
       [ 5.13376417e+00,  4.81774996e-01],
       [ 5.02706945e+00,  4.99266707e-01],
       [ 4.91910900e+00,  4.93413261e-01],
       [ 4.81493092e+00,  4.64488360e-01],
       [ 4.71940647e+00,  4.13844499e-01],
       [ 4.63700225e+00,  3.43849729e-01],
       [ 4.57157141e+00,  2.57776929e-01],
       [ 4.52617341e+00,  1.59650765e-01],
       [ 4.50293102e+00,  5.40595092e-02],
       [ 4.50293102e+00, -5.40595092e-02],
       [ 4.52617341e+00, -1.59650765e-01],
       [ 4.57157141e+00, -2.57776929e-01],
       [ 4.63700225e+00, -3.43849729e-01],
       [ 4.71940647e+00, -4.13844499e-01],
       [ 4.81493092e+00, -4.64488360e-01],
       [ 4.91910900e+00, -4.93413261e-01],
       [ 5.02706945e+00, -4.99266707e-01],
       [ 5.13376417e+00, -4.81774996e-01],
       [ 5.23420422e+00, -4.41756022e-01],
       [ 5.32369314e+00, -3.81081028e-01],
       [ 5.39804653e+00, -3.02587108e-01],
       [ 5.45378771e+00, -2.09944551e-01],
       [ 5.48831028e+00, -1.07485220e-01],
       [ 5.50000000e+00, -1.22464680e-16]]), array([[ 4.25, -0.75],
       [ 5.75, -0.75],
       [ 5.75,  0.75],
       [ 4.25,  0.75],
       [ 4.25, -0.75]]), array([[5., 0.],
       [5., 1.]]), array([[4.75, 2.25],
       [4.75, 5.25]]), array([[3.75, 5.25],
       [5.75, 5.25]]), array([[3.75      , 5.25      ],
       [3.73831028, 5.35748522],
       [3.70378771, 5.45994455],
       [3.64804653, 5.55258711],
       [3.57369314, 5.63108103],
       [3.48420422, 5.69175602],
       [3.38376417, 5.731775  ],
       [3.27706945, 5.74926671],
       [3.169109  , 5.74341326],
       [3.06493092, 5.71448836],
       [2.96940647, 5.6638445 ],
       [2.88700225, 5.59384973],
       [2.82157141, 5.50777693],
       [2.77617341, 5.40965077],
       [2.75293102, 5.30405951],
       [2.75293102, 5.19594049],
       [2.77617341, 5.09034923],
       [2.82157141, 4.99222307],
       [2.88700225, 4.90615027],
       [2.96940647, 4.8361555 ],
       [3.06493092, 4.78551164],
       [3.169109  , 4.75658674],
       [3.27706945, 4.75073329],
       [3.38376417, 4.768225  ],
       [3.48420422, 4.80824398],
       [3.57369314, 4.86891897],
       [3.64804653, 4.94741289],
       [3.70378771, 5.04005545],
       [3.73831028, 5.14251478],
       [3.75      , 5.25      ]]), array([[6.75      , 5.25      ],
       [6.73831028, 5.35748522],
       [6.70378771, 5.45994455],
       [6.64804653, 5.55258711],
       [6.57369314, 5.63108103],
       [6.48420422, 5.69175602],
       [6.38376417, 5.731775  ],
       [6.27706945, 5.74926671],
       [6.169109  , 5.74341326],
       [6.06493092, 5.71448836],
       [5.96940647, 5.6638445 ],
       [5.88700225, 5.59384973],
       [5.82157141, 5.50777693],
       [5.77617341, 5.40965077],
       [5.75293102, 5.30405951],
       [5.75293102, 5.19594049],
       [5.77617341, 5.09034923],
       [5.82157141, 4.99222307],
       [5.88700225, 4.90615027],
       [5.96940647, 4.8361555 ],
       [6.06493092, 4.78551164],
       [6.169109  , 4.75658674],
       [6.27706945, 4.75073329],
       [6.38376417, 4.768225  ],
       [6.48420422, 4.80824398],
       [6.57369314, 4.86891897],
       [6.64804653, 4.94741289],
       [6.70378771, 5.04005545],
       [6.73831028, 5.14251478],
       [6.75      , 5.25      ]]), array([[-4.75,  2.25],
       [-4.75,  5.25]]), array([[-5.75,  5.25],
       [-3.75,  5.25]]), array([[-5.75      ,  5.25      ],
       [-5.76168972,  5.35748522],
       [-5.79621229,  5.45994455],
       [-5.85195347,  5.55258711],
       [-5.92630686,  5.63108103],
       [-6.01579578,  5.69175602],
       [-6.11623583,  5.731775  ],
       [-6.22293055,  5.74926671],
       [-6.330891  ,  5.74341326],
       [-6.43506908,  5.71448836],
       [-6.53059353,  5.6638445 ],
       [-6.61299775,  5.59384973],
       [-6.67842859,  5.50777693],
       [-6.72382659,  5.40965077],
       [-6.74706898,  5.30405951],
       [-6.74706898,  5.19594049],
       [-6.72382659,  5.09034923],
       [-6.67842859,  4.99222307],
       [-6.61299775,  4.90615027],
       [-6.53059353,  4.8361555 ],
       [-6.43506908,  4.78551164],
       [-6.330891  ,  4.75658674],
       [-6.22293055,  4.75073329],
       [-6.11623583,  4.768225  ],
       [-6.01579578,  4.80824398],
       [-5.92630686,  4.86891897],
       [-5.85195347,  4.94741289],
       [-5.79621229,  5.04005545],
       [-5.76168972,  5.14251478],
       [-5.75      ,  5.25      ]]), array([[-2.75      ,  5.25      ],
       [-2.76168972,  5.35748522],
       [-2.79621229,  5.45994455],
       [-2.85195347,  5.55258711],
       [-2.92630686,  5.63108103],
       [-3.01579578,  5.69175602],
       [-3.11623583,  5.731775  ],
       [-3.22293055,  5.74926671],
       [-3.330891  ,  5.74341326],
       [-3.43506908,  5.71448836],
       [-3.53059353,  5.6638445 ],
       [-3.61299775,  5.59384973],
       [-3.67842859,  5.50777693],
       [-3.72382659,  5.40965077],
       [-3.74706898,  5.30405951],
       [-3.74706898,  5.19594049],
       [-3.72382659,  5.09034923],
       [-3.67842859,  4.99222307],
       [-3.61299775,  4.90615027],
       [-3.53059353,  4.8361555 ],
       [-3.43506908,  4.78551164],
       [-3.330891  ,  4.75658674],
       [-3.22293055,  4.75073329],
       [-3.11623583,  4.768225  ],
       [-3.01579578,  4.80824398],
       [-2.92630686,  4.86891897],
       [-2.85195347,  4.94741289],
       [-2.79621229,  5.04005545],
       [-2.76168972,  5.14251478],
       [-2.75      ,  5.25      ]])]]",35,(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 5 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (transform_matrix_scale_angle_x_y 1 0 (+ 2 0.5) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (* (- 5 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', 'antenna_lines', 'antenna_finial']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']","['0.0', '1.0', '1.5']","['1', '5.0', '1.0', '1.5', '(/ pi 2)', '1.0', '1.0']",[],"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', '0.0', '1.0', '1.5']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', 'antenna_lines', 'antenna_finial', '1', '5.0', '1.0', '1.5', '(/ pi 2)', '1.0', '1.0']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '1', '5.0', '1.0', '1.5', '(/ pi 2)', '1.0', '1.0']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-000.png
dials_context_programs_context_large_abstractions_001,dials_context_programs_train,(C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 5 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),"['C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '5', 'M', '1', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '*', '-', '5', '1', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5']","[[array([[-8.5 ,  6.25],
       [ 8.5 ,  6.25]]), array([[-8.5 , -6.25],
       [ 8.5 , -6.25]]), array([[ 8.5 , -6.25],
       [ 8.5 ,  6.25]]), array([[-8.5 , -6.25],
       [-8.5 ,  6.25]]), array([[8.5  , 3.125],
       [9.5  , 3.125]]), array([[ 8.5  , -3.125],
       [ 9.5  , -3.125]]), array([[ 9.5  , -3.125],
       [ 9.5  ,  3.125]]), array([[ 8.5  , -3.125],
       [ 8.5  ,  3.125]]), array([[-9.5  ,  3.125],
       [-8.5  ,  3.125]]), array([[-9.5  , -3.125],
       [-8.5  , -3.125]]), array([[-8.5  , -3.125],
       [-8.5  ,  3.125]]), array([[-9.5  , -3.125],
       [-9.5  ,  3.125]]), array([[-4.50000000e+00,  0.00000000e+00],
       [-4.51168972e+00,  1.07485220e-01],
       [-4.54621229e+00,  2.09944551e-01],
       [-4.60195347e+00,  3.02587108e-01],
       [-4.67630686e+00,  3.81081028e-01],
       [-4.76579578e+00,  4.41756022e-01],
       [-4.86623583e+00,  4.81774996e-01],
       [-4.97293055e+00,  4.99266707e-01],
       [-5.08089100e+00,  4.93413261e-01],
       [-5.18506908e+00,  4.64488360e-01],
       [-5.28059353e+00,  4.13844499e-01],
       [-5.36299775e+00,  3.43849729e-01],
       [-5.42842859e+00,  2.57776929e-01],
       [-5.47382659e+00,  1.59650765e-01],
       [-5.49706898e+00,  5.40595092e-02],
       [-5.49706898e+00, -5.40595092e-02],
       [-5.47382659e+00, -1.59650765e-01],
       [-5.42842859e+00, -2.57776929e-01],
       [-5.36299775e+00, -3.43849729e-01],
       [-5.28059353e+00, -4.13844499e-01],
       [-5.18506908e+00, -4.64488360e-01],
       [-5.08089100e+00, -4.93413261e-01],
       [-4.97293055e+00, -4.99266707e-01],
       [-4.86623583e+00, -4.81774996e-01],
       [-4.76579578e+00, -4.41756022e-01],
       [-4.67630686e+00, -3.81081028e-01],
       [-4.60195347e+00, -3.02587108e-01],
       [-4.54621229e+00, -2.09944551e-01],
       [-4.51168972e+00, -1.07485220e-01],
       [-4.50000000e+00, -1.22464680e-16]]), array([[-5.75, -0.75],
       [-4.25, -0.75],
       [-4.25,  0.75],
       [-5.75,  0.75],
       [-5.75, -0.75]]), array([[-5.,  0.],
       [-5.,  1.]]), array([[-2.00000000e+00,  0.00000000e+00],
       [-2.01168972e+00,  1.07485220e-01],
       [-2.04621229e+00,  2.09944551e-01],
       [-2.10195347e+00,  3.02587108e-01],
       [-2.17630686e+00,  3.81081028e-01],
       [-2.26579578e+00,  4.41756022e-01],
       [-2.36623583e+00,  4.81774996e-01],
       [-2.47293055e+00,  4.99266707e-01],
       [-2.58089100e+00,  4.93413261e-01],
       [-2.68506908e+00,  4.64488360e-01],
       [-2.78059353e+00,  4.13844499e-01],
       [-2.86299775e+00,  3.43849729e-01],
       [-2.92842859e+00,  2.57776929e-01],
       [-2.97382659e+00,  1.59650765e-01],
       [-2.99706898e+00,  5.40595092e-02],
       [-2.99706898e+00, -5.40595092e-02],
       [-2.97382659e+00, -1.59650765e-01],
       [-2.92842859e+00, -2.57776929e-01],
       [-2.86299775e+00, -3.43849729e-01],
       [-2.78059353e+00, -4.13844499e-01],
       [-2.68506908e+00, -4.64488360e-01],
       [-2.58089100e+00, -4.93413261e-01],
       [-2.47293055e+00, -4.99266707e-01],
       [-2.36623583e+00, -4.81774996e-01],
       [-2.26579578e+00, -4.41756022e-01],
       [-2.17630686e+00, -3.81081028e-01],
       [-2.10195347e+00, -3.02587108e-01],
       [-2.04621229e+00, -2.09944551e-01],
       [-2.01168972e+00, -1.07485220e-01],
       [-2.00000000e+00, -1.22464680e-16]]), array([[-3.25, -0.75],
       [-1.75, -0.75],
       [-1.75,  0.75],
       [-3.25,  0.75],
       [-3.25, -0.75]]), array([[-2.5,  0. ],
       [-2.5,  1. ]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[-0.75, -0.75],
       [ 0.75, -0.75],
       [ 0.75,  0.75],
       [-0.75,  0.75],
       [-0.75, -0.75]]), array([[0., 0.],
       [0., 1.]]), array([[ 3.00000000e+00,  0.00000000e+00],
       [ 2.98831028e+00,  1.07485220e-01],
       [ 2.95378771e+00,  2.09944551e-01],
       [ 2.89804653e+00,  3.02587108e-01],
       [ 2.82369314e+00,  3.81081028e-01],
       [ 2.73420422e+00,  4.41756022e-01],
       [ 2.63376417e+00,  4.81774996e-01],
       [ 2.52706945e+00,  4.99266707e-01],
       [ 2.41910900e+00,  4.93413261e-01],
       [ 2.31493092e+00,  4.64488360e-01],
       [ 2.21940647e+00,  4.13844499e-01],
       [ 2.13700225e+00,  3.43849729e-01],
       [ 2.07157141e+00,  2.57776929e-01],
       [ 2.02617341e+00,  1.59650765e-01],
       [ 2.00293102e+00,  5.40595092e-02],
       [ 2.00293102e+00, -5.40595092e-02],
       [ 2.02617341e+00, -1.59650765e-01],
       [ 2.07157141e+00, -2.57776929e-01],
       [ 2.13700225e+00, -3.43849729e-01],
       [ 2.21940647e+00, -4.13844499e-01],
       [ 2.31493092e+00, -4.64488360e-01],
       [ 2.41910900e+00, -4.93413261e-01],
       [ 2.52706945e+00, -4.99266707e-01],
       [ 2.63376417e+00, -4.81774996e-01],
       [ 2.73420422e+00, -4.41756022e-01],
       [ 2.82369314e+00, -3.81081028e-01],
       [ 2.89804653e+00, -3.02587108e-01],
       [ 2.95378771e+00, -2.09944551e-01],
       [ 2.98831028e+00, -1.07485220e-01],
       [ 3.00000000e+00, -1.22464680e-16]]), array([[ 1.75, -0.75],
       [ 3.25, -0.75],
       [ 3.25,  0.75],
       [ 1.75,  0.75],
       [ 1.75, -0.75]]), array([[2.5, 0. ],
       [2.5, 1. ]]), array([[ 5.50000000e+00,  0.00000000e+00],
       [ 5.48831028e+00,  1.07485220e-01],
       [ 5.45378771e+00,  2.09944551e-01],
       [ 5.39804653e+00,  3.02587108e-01],
       [ 5.32369314e+00,  3.81081028e-01],
       [ 5.23420422e+00,  4.41756022e-01],
       [ 5.13376417e+00,  4.81774996e-01],
       [ 5.02706945e+00,  4.99266707e-01],
       [ 4.91910900e+00,  4.93413261e-01],
       [ 4.81493092e+00,  4.64488360e-01],
       [ 4.71940647e+00,  4.13844499e-01],
       [ 4.63700225e+00,  3.43849729e-01],
       [ 4.57157141e+00,  2.57776929e-01],
       [ 4.52617341e+00,  1.59650765e-01],
       [ 4.50293102e+00,  5.40595092e-02],
       [ 4.50293102e+00, -5.40595092e-02],
       [ 4.52617341e+00, -1.59650765e-01],
       [ 4.57157141e+00, -2.57776929e-01],
       [ 4.63700225e+00, -3.43849729e-01],
       [ 4.71940647e+00, -4.13844499e-01],
       [ 4.81493092e+00, -4.64488360e-01],
       [ 4.91910900e+00, -4.93413261e-01],
       [ 5.02706945e+00, -4.99266707e-01],
       [ 5.13376417e+00, -4.81774996e-01],
       [ 5.23420422e+00, -4.41756022e-01],
       [ 5.32369314e+00, -3.81081028e-01],
       [ 5.39804653e+00, -3.02587108e-01],
       [ 5.45378771e+00, -2.09944551e-01],
       [ 5.48831028e+00, -1.07485220e-01],
       [ 5.50000000e+00, -1.22464680e-16]]), array([[ 4.25, -0.75],
       [ 5.75, -0.75],
       [ 5.75,  0.75],
       [ 4.25,  0.75],
       [ 4.25, -0.75]]), array([[5., 0.],
       [5., 1.]])]]",27,(connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 5 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),(connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (transform_matrix_scale_angle_x_y 1 0 (+ 2 0.5) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (* (- 5 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand']","['all_base_strokes', 'row_of_dials']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))']","['0.0', '1.0', '1.5']","['1', '5.0', '1.0', '1.5', '(/ pi 2)']",[],"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', '0.0', '1.0', '1.5']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', '1', '5.0', '1.0', '1.5', '(/ pi 2)']","['all_base_strokes', 'row_of_dials']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '1', '5.0', '1.0', '1.5', '(/ pi 2)']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-001.png
dials_context_programs_context_large_abstractions_002,dials_context_programs_train,(C (C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 5 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['C', 'C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '5', 'M', '1', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '*', '-', '5', '1', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '0', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5 ,  6.25],
       [ 8.5 ,  6.25]]), array([[-8.5 , -6.25],
       [ 8.5 , -6.25]]), array([[ 8.5 , -6.25],
       [ 8.5 ,  6.25]]), array([[-8.5 , -6.25],
       [-8.5 ,  6.25]]), array([[8.5  , 3.125],
       [9.5  , 3.125]]), array([[ 8.5  , -3.125],
       [ 9.5  , -3.125]]), array([[ 9.5  , -3.125],
       [ 9.5  ,  3.125]]), array([[ 8.5  , -3.125],
       [ 8.5  ,  3.125]]), array([[-9.5  ,  3.125],
       [-8.5  ,  3.125]]), array([[-9.5  , -3.125],
       [-8.5  , -3.125]]), array([[-8.5  , -3.125],
       [-8.5  ,  3.125]]), array([[-9.5  , -3.125],
       [-9.5  ,  3.125]]), array([[-4.50000000e+00,  0.00000000e+00],
       [-4.51168972e+00,  1.07485220e-01],
       [-4.54621229e+00,  2.09944551e-01],
       [-4.60195347e+00,  3.02587108e-01],
       [-4.67630686e+00,  3.81081028e-01],
       [-4.76579578e+00,  4.41756022e-01],
       [-4.86623583e+00,  4.81774996e-01],
       [-4.97293055e+00,  4.99266707e-01],
       [-5.08089100e+00,  4.93413261e-01],
       [-5.18506908e+00,  4.64488360e-01],
       [-5.28059353e+00,  4.13844499e-01],
       [-5.36299775e+00,  3.43849729e-01],
       [-5.42842859e+00,  2.57776929e-01],
       [-5.47382659e+00,  1.59650765e-01],
       [-5.49706898e+00,  5.40595092e-02],
       [-5.49706898e+00, -5.40595092e-02],
       [-5.47382659e+00, -1.59650765e-01],
       [-5.42842859e+00, -2.57776929e-01],
       [-5.36299775e+00, -3.43849729e-01],
       [-5.28059353e+00, -4.13844499e-01],
       [-5.18506908e+00, -4.64488360e-01],
       [-5.08089100e+00, -4.93413261e-01],
       [-4.97293055e+00, -4.99266707e-01],
       [-4.86623583e+00, -4.81774996e-01],
       [-4.76579578e+00, -4.41756022e-01],
       [-4.67630686e+00, -3.81081028e-01],
       [-4.60195347e+00, -3.02587108e-01],
       [-4.54621229e+00, -2.09944551e-01],
       [-4.51168972e+00, -1.07485220e-01],
       [-4.50000000e+00, -1.22464680e-16]]), array([[-5.75, -0.75],
       [-4.25, -0.75],
       [-4.25,  0.75],
       [-5.75,  0.75],
       [-5.75, -0.75]]), array([[-5.,  0.],
       [-5.,  1.]]), array([[-2.00000000e+00,  0.00000000e+00],
       [-2.01168972e+00,  1.07485220e-01],
       [-2.04621229e+00,  2.09944551e-01],
       [-2.10195347e+00,  3.02587108e-01],
       [-2.17630686e+00,  3.81081028e-01],
       [-2.26579578e+00,  4.41756022e-01],
       [-2.36623583e+00,  4.81774996e-01],
       [-2.47293055e+00,  4.99266707e-01],
       [-2.58089100e+00,  4.93413261e-01],
       [-2.68506908e+00,  4.64488360e-01],
       [-2.78059353e+00,  4.13844499e-01],
       [-2.86299775e+00,  3.43849729e-01],
       [-2.92842859e+00,  2.57776929e-01],
       [-2.97382659e+00,  1.59650765e-01],
       [-2.99706898e+00,  5.40595092e-02],
       [-2.99706898e+00, -5.40595092e-02],
       [-2.97382659e+00, -1.59650765e-01],
       [-2.92842859e+00, -2.57776929e-01],
       [-2.86299775e+00, -3.43849729e-01],
       [-2.78059353e+00, -4.13844499e-01],
       [-2.68506908e+00, -4.64488360e-01],
       [-2.58089100e+00, -4.93413261e-01],
       [-2.47293055e+00, -4.99266707e-01],
       [-2.36623583e+00, -4.81774996e-01],
       [-2.26579578e+00, -4.41756022e-01],
       [-2.17630686e+00, -3.81081028e-01],
       [-2.10195347e+00, -3.02587108e-01],
       [-2.04621229e+00, -2.09944551e-01],
       [-2.01168972e+00, -1.07485220e-01],
       [-2.00000000e+00, -1.22464680e-16]]), array([[-3.25, -0.75],
       [-1.75, -0.75],
       [-1.75,  0.75],
       [-3.25,  0.75],
       [-3.25, -0.75]]), array([[-2.5,  0. ],
       [-2.5,  1. ]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[-0.75, -0.75],
       [ 0.75, -0.75],
       [ 0.75,  0.75],
       [-0.75,  0.75],
       [-0.75, -0.75]]), array([[0., 0.],
       [0., 1.]]), array([[ 3.00000000e+00,  0.00000000e+00],
       [ 2.98831028e+00,  1.07485220e-01],
       [ 2.95378771e+00,  2.09944551e-01],
       [ 2.89804653e+00,  3.02587108e-01],
       [ 2.82369314e+00,  3.81081028e-01],
       [ 2.73420422e+00,  4.41756022e-01],
       [ 2.63376417e+00,  4.81774996e-01],
       [ 2.52706945e+00,  4.99266707e-01],
       [ 2.41910900e+00,  4.93413261e-01],
       [ 2.31493092e+00,  4.64488360e-01],
       [ 2.21940647e+00,  4.13844499e-01],
       [ 2.13700225e+00,  3.43849729e-01],
       [ 2.07157141e+00,  2.57776929e-01],
       [ 2.02617341e+00,  1.59650765e-01],
       [ 2.00293102e+00,  5.40595092e-02],
       [ 2.00293102e+00, -5.40595092e-02],
       [ 2.02617341e+00, -1.59650765e-01],
       [ 2.07157141e+00, -2.57776929e-01],
       [ 2.13700225e+00, -3.43849729e-01],
       [ 2.21940647e+00, -4.13844499e-01],
       [ 2.31493092e+00, -4.64488360e-01],
       [ 2.41910900e+00, -4.93413261e-01],
       [ 2.52706945e+00, -4.99266707e-01],
       [ 2.63376417e+00, -4.81774996e-01],
       [ 2.73420422e+00, -4.41756022e-01],
       [ 2.82369314e+00, -3.81081028e-01],
       [ 2.89804653e+00, -3.02587108e-01],
       [ 2.95378771e+00, -2.09944551e-01],
       [ 2.98831028e+00, -1.07485220e-01],
       [ 3.00000000e+00, -1.22464680e-16]]), array([[ 1.75, -0.75],
       [ 3.25, -0.75],
       [ 3.25,  0.75],
       [ 1.75,  0.75],
       [ 1.75, -0.75]]), array([[2.5, 0. ],
       [2.5, 1. ]]), array([[ 5.50000000e+00,  0.00000000e+00],
       [ 5.48831028e+00,  1.07485220e-01],
       [ 5.45378771e+00,  2.09944551e-01],
       [ 5.39804653e+00,  3.02587108e-01],
       [ 5.32369314e+00,  3.81081028e-01],
       [ 5.23420422e+00,  4.41756022e-01],
       [ 5.13376417e+00,  4.81774996e-01],
       [ 5.02706945e+00,  4.99266707e-01],
       [ 4.91910900e+00,  4.93413261e-01],
       [ 4.81493092e+00,  4.64488360e-01],
       [ 4.71940647e+00,  4.13844499e-01],
       [ 4.63700225e+00,  3.43849729e-01],
       [ 4.57157141e+00,  2.57776929e-01],
       [ 4.52617341e+00,  1.59650765e-01],
       [ 4.50293102e+00,  5.40595092e-02],
       [ 4.50293102e+00, -5.40595092e-02],
       [ 4.52617341e+00, -1.59650765e-01],
       [ 4.57157141e+00, -2.57776929e-01],
       [ 4.63700225e+00, -3.43849729e-01],
       [ 4.71940647e+00, -4.13844499e-01],
       [ 4.81493092e+00, -4.64488360e-01],
       [ 4.91910900e+00, -4.93413261e-01],
       [ 5.02706945e+00, -4.99266707e-01],
       [ 5.13376417e+00, -4.81774996e-01],
       [ 5.23420422e+00, -4.41756022e-01],
       [ 5.32369314e+00, -3.81081028e-01],
       [ 5.39804653e+00, -3.02587108e-01],
       [ 5.45378771e+00, -2.09944551e-01],
       [ 5.48831028e+00, -1.07485220e-01],
       [ 5.50000000e+00, -1.22464680e-16]]), array([[ 4.25, -0.75],
       [ 5.75, -0.75],
       [ 5.75,  0.75],
       [ 4.25,  0.75],
       [ 4.25, -0.75]]), array([[5., 0.],
       [5., 1.]]), array([[0.0000000e+00, 6.2500000e+00],
       [1.8369702e-16, 9.2500000e+00]]), array([[-1.  ,  9.25],
       [ 1.  ,  9.25]]), array([[-1.        ,  9.25      ],
       [-1.01168972,  9.35748522],
       [-1.04621229,  9.45994455],
       [-1.10195347,  9.55258711],
       [-1.17630686,  9.63108103],
       [-1.26579578,  9.69175602],
       [-1.36623583,  9.731775  ],
       [-1.47293055,  9.74926671],
       [-1.580891  ,  9.74341326],
       [-1.68506908,  9.71448836],
       [-1.78059353,  9.6638445 ],
       [-1.86299775,  9.59384973],
       [-1.92842859,  9.50777693],
       [-1.97382659,  9.40965077],
       [-1.99706898,  9.30405951],
       [-1.99706898,  9.19594049],
       [-1.97382659,  9.09034923],
       [-1.92842859,  8.99222307],
       [-1.86299775,  8.90615027],
       [-1.78059353,  8.8361555 ],
       [-1.68506908,  8.78551164],
       [-1.580891  ,  8.75658674],
       [-1.47293055,  8.75073329],
       [-1.36623583,  8.768225  ],
       [-1.26579578,  8.80824398],
       [-1.17630686,  8.86891897],
       [-1.10195347,  8.94741289],
       [-1.04621229,  9.04005545],
       [-1.01168972,  9.14251478],
       [-1.        ,  9.25      ]]), array([[2.        , 9.25      ],
       [1.98831028, 9.35748522],
       [1.95378771, 9.45994455],
       [1.89804653, 9.55258711],
       [1.82369314, 9.63108103],
       [1.73420422, 9.69175602],
       [1.63376417, 9.731775  ],
       [1.52706945, 9.74926671],
       [1.419109  , 9.74341326],
       [1.31493092, 9.71448836],
       [1.21940647, 9.6638445 ],
       [1.13700225, 9.59384973],
       [1.07157141, 9.50777693],
       [1.02617341, 9.40965077],
       [1.00293102, 9.30405951],
       [1.00293102, 9.19594049],
       [1.02617341, 9.09034923],
       [1.07157141, 8.99222307],
       [1.13700225, 8.90615027],
       [1.21940647, 8.8361555 ],
       [1.31493092, 8.78551164],
       [1.419109  , 8.75658674],
       [1.52706945, 8.75073329],
       [1.63376417, 8.768225  ],
       [1.73420422, 8.80824398],
       [1.82369314, 8.86891897],
       [1.89804653, 8.94741289],
       [1.95378771, 9.04005545],
       [1.98831028, 9.14251478],
       [2.        , 9.25      ]])]]",31,(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 5 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),(connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (transform_matrix_scale_angle_x_y 1 0 (+ 2 0.5) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (* (- 5 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial']","['all_base_strokes', 'row_of_dials', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']","['0.0', '1.0', '1.5']","['1', '5.0', '1.0', '1.5', '(/ pi 2)', '1.0']",[],"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', '0.0', '1.0', '1.5']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', '1', '5.0', '1.0', '1.5', '(/ pi 2)', '1.0']","['all_base_strokes', 'row_of_dials', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '1', '5.0', '1.0', '1.5', '(/ pi 2)', '1.0']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-002.png
dials_context_programs_context_large_abstractions_003,dials_context_programs_train,(C (C (C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 5 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['C', 'C', 'C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '5', 'M', '1', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '*', '-', '5', '1', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '*', '+', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '*', '2', '0.5', '0.25', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '-', '0', '*', '+', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '*', '2', '0.5', '0.25', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5 ,  6.25],
       [ 8.5 ,  6.25]]), array([[-8.5 , -6.25],
       [ 8.5 , -6.25]]), array([[ 8.5 , -6.25],
       [ 8.5 ,  6.25]]), array([[-8.5 , -6.25],
       [-8.5 ,  6.25]]), array([[8.5  , 3.125],
       [9.5  , 3.125]]), array([[ 8.5  , -3.125],
       [ 9.5  , -3.125]]), array([[ 9.5  , -3.125],
       [ 9.5  ,  3.125]]), array([[ 8.5  , -3.125],
       [ 8.5  ,  3.125]]), array([[-9.5  ,  3.125],
       [-8.5  ,  3.125]]), array([[-9.5  , -3.125],
       [-8.5  , -3.125]]), array([[-8.5  , -3.125],
       [-8.5  ,  3.125]]), array([[-9.5  , -3.125],
       [-9.5  ,  3.125]]), array([[-4.50000000e+00,  0.00000000e+00],
       [-4.51168972e+00,  1.07485220e-01],
       [-4.54621229e+00,  2.09944551e-01],
       [-4.60195347e+00,  3.02587108e-01],
       [-4.67630686e+00,  3.81081028e-01],
       [-4.76579578e+00,  4.41756022e-01],
       [-4.86623583e+00,  4.81774996e-01],
       [-4.97293055e+00,  4.99266707e-01],
       [-5.08089100e+00,  4.93413261e-01],
       [-5.18506908e+00,  4.64488360e-01],
       [-5.28059353e+00,  4.13844499e-01],
       [-5.36299775e+00,  3.43849729e-01],
       [-5.42842859e+00,  2.57776929e-01],
       [-5.47382659e+00,  1.59650765e-01],
       [-5.49706898e+00,  5.40595092e-02],
       [-5.49706898e+00, -5.40595092e-02],
       [-5.47382659e+00, -1.59650765e-01],
       [-5.42842859e+00, -2.57776929e-01],
       [-5.36299775e+00, -3.43849729e-01],
       [-5.28059353e+00, -4.13844499e-01],
       [-5.18506908e+00, -4.64488360e-01],
       [-5.08089100e+00, -4.93413261e-01],
       [-4.97293055e+00, -4.99266707e-01],
       [-4.86623583e+00, -4.81774996e-01],
       [-4.76579578e+00, -4.41756022e-01],
       [-4.67630686e+00, -3.81081028e-01],
       [-4.60195347e+00, -3.02587108e-01],
       [-4.54621229e+00, -2.09944551e-01],
       [-4.51168972e+00, -1.07485220e-01],
       [-4.50000000e+00, -1.22464680e-16]]), array([[-5.75, -0.75],
       [-4.25, -0.75],
       [-4.25,  0.75],
       [-5.75,  0.75],
       [-5.75, -0.75]]), array([[-5.,  0.],
       [-5.,  1.]]), array([[-2.00000000e+00,  0.00000000e+00],
       [-2.01168972e+00,  1.07485220e-01],
       [-2.04621229e+00,  2.09944551e-01],
       [-2.10195347e+00,  3.02587108e-01],
       [-2.17630686e+00,  3.81081028e-01],
       [-2.26579578e+00,  4.41756022e-01],
       [-2.36623583e+00,  4.81774996e-01],
       [-2.47293055e+00,  4.99266707e-01],
       [-2.58089100e+00,  4.93413261e-01],
       [-2.68506908e+00,  4.64488360e-01],
       [-2.78059353e+00,  4.13844499e-01],
       [-2.86299775e+00,  3.43849729e-01],
       [-2.92842859e+00,  2.57776929e-01],
       [-2.97382659e+00,  1.59650765e-01],
       [-2.99706898e+00,  5.40595092e-02],
       [-2.99706898e+00, -5.40595092e-02],
       [-2.97382659e+00, -1.59650765e-01],
       [-2.92842859e+00, -2.57776929e-01],
       [-2.86299775e+00, -3.43849729e-01],
       [-2.78059353e+00, -4.13844499e-01],
       [-2.68506908e+00, -4.64488360e-01],
       [-2.58089100e+00, -4.93413261e-01],
       [-2.47293055e+00, -4.99266707e-01],
       [-2.36623583e+00, -4.81774996e-01],
       [-2.26579578e+00, -4.41756022e-01],
       [-2.17630686e+00, -3.81081028e-01],
       [-2.10195347e+00, -3.02587108e-01],
       [-2.04621229e+00, -2.09944551e-01],
       [-2.01168972e+00, -1.07485220e-01],
       [-2.00000000e+00, -1.22464680e-16]]), array([[-3.25, -0.75],
       [-1.75, -0.75],
       [-1.75,  0.75],
       [-3.25,  0.75],
       [-3.25, -0.75]]), array([[-2.5,  0. ],
       [-2.5,  1. ]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[-0.75, -0.75],
       [ 0.75, -0.75],
       [ 0.75,  0.75],
       [-0.75,  0.75],
       [-0.75, -0.75]]), array([[0., 0.],
       [0., 1.]]), array([[ 3.00000000e+00,  0.00000000e+00],
       [ 2.98831028e+00,  1.07485220e-01],
       [ 2.95378771e+00,  2.09944551e-01],
       [ 2.89804653e+00,  3.02587108e-01],
       [ 2.82369314e+00,  3.81081028e-01],
       [ 2.73420422e+00,  4.41756022e-01],
       [ 2.63376417e+00,  4.81774996e-01],
       [ 2.52706945e+00,  4.99266707e-01],
       [ 2.41910900e+00,  4.93413261e-01],
       [ 2.31493092e+00,  4.64488360e-01],
       [ 2.21940647e+00,  4.13844499e-01],
       [ 2.13700225e+00,  3.43849729e-01],
       [ 2.07157141e+00,  2.57776929e-01],
       [ 2.02617341e+00,  1.59650765e-01],
       [ 2.00293102e+00,  5.40595092e-02],
       [ 2.00293102e+00, -5.40595092e-02],
       [ 2.02617341e+00, -1.59650765e-01],
       [ 2.07157141e+00, -2.57776929e-01],
       [ 2.13700225e+00, -3.43849729e-01],
       [ 2.21940647e+00, -4.13844499e-01],
       [ 2.31493092e+00, -4.64488360e-01],
       [ 2.41910900e+00, -4.93413261e-01],
       [ 2.52706945e+00, -4.99266707e-01],
       [ 2.63376417e+00, -4.81774996e-01],
       [ 2.73420422e+00, -4.41756022e-01],
       [ 2.82369314e+00, -3.81081028e-01],
       [ 2.89804653e+00, -3.02587108e-01],
       [ 2.95378771e+00, -2.09944551e-01],
       [ 2.98831028e+00, -1.07485220e-01],
       [ 3.00000000e+00, -1.22464680e-16]]), array([[ 1.75, -0.75],
       [ 3.25, -0.75],
       [ 3.25,  0.75],
       [ 1.75,  0.75],
       [ 1.75, -0.75]]), array([[2.5, 0. ],
       [2.5, 1. ]]), array([[ 5.50000000e+00,  0.00000000e+00],
       [ 5.48831028e+00,  1.07485220e-01],
       [ 5.45378771e+00,  2.09944551e-01],
       [ 5.39804653e+00,  3.02587108e-01],
       [ 5.32369314e+00,  3.81081028e-01],
       [ 5.23420422e+00,  4.41756022e-01],
       [ 5.13376417e+00,  4.81774996e-01],
       [ 5.02706945e+00,  4.99266707e-01],
       [ 4.91910900e+00,  4.93413261e-01],
       [ 4.81493092e+00,  4.64488360e-01],
       [ 4.71940647e+00,  4.13844499e-01],
       [ 4.63700225e+00,  3.43849729e-01],
       [ 4.57157141e+00,  2.57776929e-01],
       [ 4.52617341e+00,  1.59650765e-01],
       [ 4.50293102e+00,  5.40595092e-02],
       [ 4.50293102e+00, -5.40595092e-02],
       [ 4.52617341e+00, -1.59650765e-01],
       [ 4.57157141e+00, -2.57776929e-01],
       [ 4.63700225e+00, -3.43849729e-01],
       [ 4.71940647e+00, -4.13844499e-01],
       [ 4.81493092e+00, -4.64488360e-01],
       [ 4.91910900e+00, -4.93413261e-01],
       [ 5.02706945e+00, -4.99266707e-01],
       [ 5.13376417e+00, -4.81774996e-01],
       [ 5.23420422e+00, -4.41756022e-01],
       [ 5.32369314e+00, -3.81081028e-01],
       [ 5.39804653e+00, -3.02587108e-01],
       [ 5.45378771e+00, -2.09944551e-01],
       [ 5.48831028e+00, -1.07485220e-01],
       [ 5.50000000e+00, -1.22464680e-16]]), array([[ 4.25, -0.75],
       [ 5.75, -0.75],
       [ 5.75,  0.75],
       [ 4.25,  0.75],
       [ 4.25, -0.75]]), array([[5., 0.],
       [5., 1.]]), array([[4.75, 6.25],
       [4.75, 9.25]]), array([[3.75, 9.25],
       [5.75, 9.25]]), array([[3.75      , 9.25      ],
       [3.73831028, 9.35748522],
       [3.70378771, 9.45994455],
       [3.64804653, 9.55258711],
       [3.57369314, 9.63108103],
       [3.48420422, 9.69175602],
       [3.38376417, 9.731775  ],
       [3.27706945, 9.74926671],
       [3.169109  , 9.74341326],
       [3.06493092, 9.71448836],
       [2.96940647, 9.6638445 ],
       [2.88700225, 9.59384973],
       [2.82157141, 9.50777693],
       [2.77617341, 9.40965077],
       [2.75293102, 9.30405951],
       [2.75293102, 9.19594049],
       [2.77617341, 9.09034923],
       [2.82157141, 8.99222307],
       [2.88700225, 8.90615027],
       [2.96940647, 8.8361555 ],
       [3.06493092, 8.78551164],
       [3.169109  , 8.75658674],
       [3.27706945, 8.75073329],
       [3.38376417, 8.768225  ],
       [3.48420422, 8.80824398],
       [3.57369314, 8.86891897],
       [3.64804653, 8.94741289],
       [3.70378771, 9.04005545],
       [3.73831028, 9.14251478],
       [3.75      , 9.25      ]]), array([[6.75      , 9.25      ],
       [6.73831028, 9.35748522],
       [6.70378771, 9.45994455],
       [6.64804653, 9.55258711],
       [6.57369314, 9.63108103],
       [6.48420422, 9.69175602],
       [6.38376417, 9.731775  ],
       [6.27706945, 9.74926671],
       [6.169109  , 9.74341326],
       [6.06493092, 9.71448836],
       [5.96940647, 9.6638445 ],
       [5.88700225, 9.59384973],
       [5.82157141, 9.50777693],
       [5.77617341, 9.40965077],
       [5.75293102, 9.30405951],
       [5.75293102, 9.19594049],
       [5.77617341, 9.09034923],
       [5.82157141, 8.99222307],
       [5.88700225, 8.90615027],
       [5.96940647, 8.8361555 ],
       [6.06493092, 8.78551164],
       [6.169109  , 8.75658674],
       [6.27706945, 8.75073329],
       [6.38376417, 8.768225  ],
       [6.48420422, 8.80824398],
       [6.57369314, 8.86891897],
       [6.64804653, 8.94741289],
       [6.70378771, 9.04005545],
       [6.73831028, 9.14251478],
       [6.75      , 9.25      ]]), array([[-4.75,  6.25],
       [-4.75,  9.25]]), array([[-5.75,  9.25],
       [-3.75,  9.25]]), array([[-5.75      ,  9.25      ],
       [-5.76168972,  9.35748522],
       [-5.79621229,  9.45994455],
       [-5.85195347,  9.55258711],
       [-5.92630686,  9.63108103],
       [-6.01579578,  9.69175602],
       [-6.11623583,  9.731775  ],
       [-6.22293055,  9.74926671],
       [-6.330891  ,  9.74341326],
       [-6.43506908,  9.71448836],
       [-6.53059353,  9.6638445 ],
       [-6.61299775,  9.59384973],
       [-6.67842859,  9.50777693],
       [-6.72382659,  9.40965077],
       [-6.74706898,  9.30405951],
       [-6.74706898,  9.19594049],
       [-6.72382659,  9.09034923],
       [-6.67842859,  8.99222307],
       [-6.61299775,  8.90615027],
       [-6.53059353,  8.8361555 ],
       [-6.43506908,  8.78551164],
       [-6.330891  ,  8.75658674],
       [-6.22293055,  8.75073329],
       [-6.11623583,  8.768225  ],
       [-6.01579578,  8.80824398],
       [-5.92630686,  8.86891897],
       [-5.85195347,  8.94741289],
       [-5.79621229,  9.04005545],
       [-5.76168972,  9.14251478],
       [-5.75      ,  9.25      ]]), array([[-2.75      ,  9.25      ],
       [-2.76168972,  9.35748522],
       [-2.79621229,  9.45994455],
       [-2.85195347,  9.55258711],
       [-2.92630686,  9.63108103],
       [-3.01579578,  9.69175602],
       [-3.11623583,  9.731775  ],
       [-3.22293055,  9.74926671],
       [-3.330891  ,  9.74341326],
       [-3.43506908,  9.71448836],
       [-3.53059353,  9.6638445 ],
       [-3.61299775,  9.59384973],
       [-3.67842859,  9.50777693],
       [-3.72382659,  9.40965077],
       [-3.74706898,  9.30405951],
       [-3.74706898,  9.19594049],
       [-3.72382659,  9.09034923],
       [-3.67842859,  8.99222307],
       [-3.61299775,  8.90615027],
       [-3.53059353,  8.8361555 ],
       [-3.43506908,  8.78551164],
       [-3.330891  ,  8.75658674],
       [-3.22293055,  8.75073329],
       [-3.11623583,  8.768225  ],
       [-3.01579578,  8.80824398],
       [-2.92630686,  8.86891897],
       [-2.85195347,  8.94741289],
       [-2.79621229,  9.04005545],
       [-2.76168972,  9.14251478],
       [-2.75      ,  9.25      ]])]]",35,(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 5 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (transform_matrix_scale_angle_x_y 1 0 (+ 2 0.5) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (* (- 5 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', 'antenna_lines', 'antenna_finial']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']","['0.0', '1.0', '1.5']","['1', '5.0', '1.0', '1.5', '(/ pi 2)', '1.0', '1.0']",[],"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', '0.0', '1.0', '1.5']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', 'antenna_lines', 'antenna_finial', '1', '5.0', '1.0', '1.5', '(/ pi 2)', '1.0', '1.0']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '1', '5.0', '1.0', '1.5', '(/ pi 2)', '1.0', '1.0']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-003.png
dials_context_programs_context_large_abstractions_004,dials_context_programs_train,(C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),"['C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '2', 'M', '1', '0', '-', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '+', '0', '*', '0.5', '*', '2', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5']","[[array([[-8.5 ,  2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [ 8.5 , -2.25]]), array([[ 8.5 , -2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [-8.5 ,  2.25]]), array([[8.5  , 1.125],
       [9.5  , 1.125]]), array([[ 8.5  , -1.125],
       [ 9.5  , -1.125]]), array([[ 9.5  , -1.125],
       [ 9.5  ,  1.125]]), array([[ 8.5  , -1.125],
       [ 8.5  ,  1.125]]), array([[-9.5  ,  1.125],
       [-8.5  ,  1.125]]), array([[-9.5  , -1.125],
       [-8.5  , -1.125]]), array([[-8.5  , -1.125],
       [-8.5  ,  1.125]]), array([[-9.5  , -1.125],
       [-9.5  ,  1.125]]), array([[ 3.00000000e+00,  0.00000000e+00],
       [ 2.98831028e+00,  1.07485220e-01],
       [ 2.95378771e+00,  2.09944551e-01],
       [ 2.89804653e+00,  3.02587108e-01],
       [ 2.82369314e+00,  3.81081028e-01],
       [ 2.73420422e+00,  4.41756022e-01],
       [ 2.63376417e+00,  4.81774996e-01],
       [ 2.52706945e+00,  4.99266707e-01],
       [ 2.41910900e+00,  4.93413261e-01],
       [ 2.31493092e+00,  4.64488360e-01],
       [ 2.21940647e+00,  4.13844499e-01],
       [ 2.13700225e+00,  3.43849729e-01],
       [ 2.07157141e+00,  2.57776929e-01],
       [ 2.02617341e+00,  1.59650765e-01],
       [ 2.00293102e+00,  5.40595092e-02],
       [ 2.00293102e+00, -5.40595092e-02],
       [ 2.02617341e+00, -1.59650765e-01],
       [ 2.07157141e+00, -2.57776929e-01],
       [ 2.13700225e+00, -3.43849729e-01],
       [ 2.21940647e+00, -4.13844499e-01],
       [ 2.31493092e+00, -4.64488360e-01],
       [ 2.41910900e+00, -4.93413261e-01],
       [ 2.52706945e+00, -4.99266707e-01],
       [ 2.63376417e+00, -4.81774996e-01],
       [ 2.73420422e+00, -4.41756022e-01],
       [ 2.82369314e+00, -3.81081028e-01],
       [ 2.89804653e+00, -3.02587108e-01],
       [ 2.95378771e+00, -2.09944551e-01],
       [ 2.98831028e+00, -1.07485220e-01],
       [ 3.00000000e+00, -1.22464680e-16]]), array([[ 1.75, -0.75],
       [ 3.25, -0.75],
       [ 3.25,  0.75],
       [ 1.75,  0.75],
       [ 1.75, -0.75]]), array([[2.5, 0. ],
       [2.5, 1. ]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[-0.75, -0.75],
       [ 0.75, -0.75],
       [ 0.75,  0.75],
       [-0.75,  0.75],
       [-0.75, -0.75]]), array([[0., 0.],
       [0., 1.]])]]",18,(connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (transform_matrix 1 0 (- 0 (+ 2 0.5)) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),(connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 2 0.5)) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand']","['all_base_strokes', 'row_of_dials']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5)))']","['0.0', '1.0', '1.5']","['1', '2.0', '1.0', '1.5', '(/ pi 2)']",[],"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', '0.0', '1.0', '1.5']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', '1', '2.0', '1.0', '1.5', '(/ pi 2)']","['all_base_strokes', 'row_of_dials']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '1', '2.0', '1.0', '1.5', '(/ pi 2)']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5)))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-004.png
dials_context_programs_context_large_abstractions_005,dials_context_programs_train,(C (C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['C', 'C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '2', 'M', '1', '0', '-', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '+', '0', '*', '0.5', '*', '2', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '0', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5 ,  2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [ 8.5 , -2.25]]), array([[ 8.5 , -2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [-8.5 ,  2.25]]), array([[8.5  , 1.125],
       [9.5  , 1.125]]), array([[ 8.5  , -1.125],
       [ 9.5  , -1.125]]), array([[ 9.5  , -1.125],
       [ 9.5  ,  1.125]]), array([[ 8.5  , -1.125],
       [ 8.5  ,  1.125]]), array([[-9.5  ,  1.125],
       [-8.5  ,  1.125]]), array([[-9.5  , -1.125],
       [-8.5  , -1.125]]), array([[-8.5  , -1.125],
       [-8.5  ,  1.125]]), array([[-9.5  , -1.125],
       [-9.5  ,  1.125]]), array([[ 3.00000000e+00,  0.00000000e+00],
       [ 2.98831028e+00,  1.07485220e-01],
       [ 2.95378771e+00,  2.09944551e-01],
       [ 2.89804653e+00,  3.02587108e-01],
       [ 2.82369314e+00,  3.81081028e-01],
       [ 2.73420422e+00,  4.41756022e-01],
       [ 2.63376417e+00,  4.81774996e-01],
       [ 2.52706945e+00,  4.99266707e-01],
       [ 2.41910900e+00,  4.93413261e-01],
       [ 2.31493092e+00,  4.64488360e-01],
       [ 2.21940647e+00,  4.13844499e-01],
       [ 2.13700225e+00,  3.43849729e-01],
       [ 2.07157141e+00,  2.57776929e-01],
       [ 2.02617341e+00,  1.59650765e-01],
       [ 2.00293102e+00,  5.40595092e-02],
       [ 2.00293102e+00, -5.40595092e-02],
       [ 2.02617341e+00, -1.59650765e-01],
       [ 2.07157141e+00, -2.57776929e-01],
       [ 2.13700225e+00, -3.43849729e-01],
       [ 2.21940647e+00, -4.13844499e-01],
       [ 2.31493092e+00, -4.64488360e-01],
       [ 2.41910900e+00, -4.93413261e-01],
       [ 2.52706945e+00, -4.99266707e-01],
       [ 2.63376417e+00, -4.81774996e-01],
       [ 2.73420422e+00, -4.41756022e-01],
       [ 2.82369314e+00, -3.81081028e-01],
       [ 2.89804653e+00, -3.02587108e-01],
       [ 2.95378771e+00, -2.09944551e-01],
       [ 2.98831028e+00, -1.07485220e-01],
       [ 3.00000000e+00, -1.22464680e-16]]), array([[ 1.75, -0.75],
       [ 3.25, -0.75],
       [ 3.25,  0.75],
       [ 1.75,  0.75],
       [ 1.75, -0.75]]), array([[2.5, 0. ],
       [2.5, 1. ]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[-0.75, -0.75],
       [ 0.75, -0.75],
       [ 0.75,  0.75],
       [-0.75,  0.75],
       [-0.75, -0.75]]), array([[0., 0.],
       [0., 1.]]), array([[0.0000000e+00, 2.2500000e+00],
       [1.8369702e-16, 5.2500000e+00]]), array([[-1.  ,  5.25],
       [ 1.  ,  5.25]]), array([[-1.        ,  5.25      ],
       [-1.01168972,  5.35748522],
       [-1.04621229,  5.45994455],
       [-1.10195347,  5.55258711],
       [-1.17630686,  5.63108103],
       [-1.26579578,  5.69175602],
       [-1.36623583,  5.731775  ],
       [-1.47293055,  5.74926671],
       [-1.580891  ,  5.74341326],
       [-1.68506908,  5.71448836],
       [-1.78059353,  5.6638445 ],
       [-1.86299775,  5.59384973],
       [-1.92842859,  5.50777693],
       [-1.97382659,  5.40965077],
       [-1.99706898,  5.30405951],
       [-1.99706898,  5.19594049],
       [-1.97382659,  5.09034923],
       [-1.92842859,  4.99222307],
       [-1.86299775,  4.90615027],
       [-1.78059353,  4.8361555 ],
       [-1.68506908,  4.78551164],
       [-1.580891  ,  4.75658674],
       [-1.47293055,  4.75073329],
       [-1.36623583,  4.768225  ],
       [-1.26579578,  4.80824398],
       [-1.17630686,  4.86891897],
       [-1.10195347,  4.94741289],
       [-1.04621229,  5.04005545],
       [-1.01168972,  5.14251478],
       [-1.        ,  5.25      ]]), array([[2.        , 5.25      ],
       [1.98831028, 5.35748522],
       [1.95378771, 5.45994455],
       [1.89804653, 5.55258711],
       [1.82369314, 5.63108103],
       [1.73420422, 5.69175602],
       [1.63376417, 5.731775  ],
       [1.52706945, 5.74926671],
       [1.419109  , 5.74341326],
       [1.31493092, 5.71448836],
       [1.21940647, 5.6638445 ],
       [1.13700225, 5.59384973],
       [1.07157141, 5.50777693],
       [1.02617341, 5.40965077],
       [1.00293102, 5.30405951],
       [1.00293102, 5.19594049],
       [1.02617341, 5.09034923],
       [1.07157141, 4.99222307],
       [1.13700225, 4.90615027],
       [1.21940647, 4.8361555 ],
       [1.31493092, 4.78551164],
       [1.419109  , 4.75658674],
       [1.52706945, 4.75073329],
       [1.63376417, 4.768225  ],
       [1.73420422, 4.80824398],
       [1.82369314, 4.86891897],
       [1.89804653, 4.94741289],
       [1.95378771, 5.04005545],
       [1.98831028, 5.14251478],
       [2.        , 5.25      ]])]]",22,(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (transform_matrix 1 0 (- 0 (+ 2 0.5)) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),(connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 2 0.5)) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial']","['all_base_strokes', 'row_of_dials', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']","['0.0', '1.0', '1.5']","['1', '2.0', '1.0', '1.5', '(/ pi 2)', '1.0']",[],"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', '0.0', '1.0', '1.5']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', '1', '2.0', '1.0', '1.5', '(/ pi 2)', '1.0']","['all_base_strokes', 'row_of_dials', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '1', '2.0', '1.0', '1.5', '(/ pi 2)', '1.0']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-005.png
dials_context_programs_context_large_abstractions_006,dials_context_programs_train,(C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),"['C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '2', 'M', '1', '0', '-', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '+', '0', '*', '0.5', '*', '2', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5']","[[array([[-8.5 ,  6.25],
       [ 8.5 ,  6.25]]), array([[-8.5 , -6.25],
       [ 8.5 , -6.25]]), array([[ 8.5 , -6.25],
       [ 8.5 ,  6.25]]), array([[-8.5 , -6.25],
       [-8.5 ,  6.25]]), array([[8.5  , 3.125],
       [9.5  , 3.125]]), array([[ 8.5  , -3.125],
       [ 9.5  , -3.125]]), array([[ 9.5  , -3.125],
       [ 9.5  ,  3.125]]), array([[ 8.5  , -3.125],
       [ 8.5  ,  3.125]]), array([[-9.5  ,  3.125],
       [-8.5  ,  3.125]]), array([[-9.5  , -3.125],
       [-8.5  , -3.125]]), array([[-8.5  , -3.125],
       [-8.5  ,  3.125]]), array([[-9.5  , -3.125],
       [-9.5  ,  3.125]]), array([[ 3.00000000e+00,  0.00000000e+00],
       [ 2.98831028e+00,  1.07485220e-01],
       [ 2.95378771e+00,  2.09944551e-01],
       [ 2.89804653e+00,  3.02587108e-01],
       [ 2.82369314e+00,  3.81081028e-01],
       [ 2.73420422e+00,  4.41756022e-01],
       [ 2.63376417e+00,  4.81774996e-01],
       [ 2.52706945e+00,  4.99266707e-01],
       [ 2.41910900e+00,  4.93413261e-01],
       [ 2.31493092e+00,  4.64488360e-01],
       [ 2.21940647e+00,  4.13844499e-01],
       [ 2.13700225e+00,  3.43849729e-01],
       [ 2.07157141e+00,  2.57776929e-01],
       [ 2.02617341e+00,  1.59650765e-01],
       [ 2.00293102e+00,  5.40595092e-02],
       [ 2.00293102e+00, -5.40595092e-02],
       [ 2.02617341e+00, -1.59650765e-01],
       [ 2.07157141e+00, -2.57776929e-01],
       [ 2.13700225e+00, -3.43849729e-01],
       [ 2.21940647e+00, -4.13844499e-01],
       [ 2.31493092e+00, -4.64488360e-01],
       [ 2.41910900e+00, -4.93413261e-01],
       [ 2.52706945e+00, -4.99266707e-01],
       [ 2.63376417e+00, -4.81774996e-01],
       [ 2.73420422e+00, -4.41756022e-01],
       [ 2.82369314e+00, -3.81081028e-01],
       [ 2.89804653e+00, -3.02587108e-01],
       [ 2.95378771e+00, -2.09944551e-01],
       [ 2.98831028e+00, -1.07485220e-01],
       [ 3.00000000e+00, -1.22464680e-16]]), array([[ 1.75, -0.75],
       [ 3.25, -0.75],
       [ 3.25,  0.75],
       [ 1.75,  0.75],
       [ 1.75, -0.75]]), array([[2.5, 0. ],
       [2.5, 1. ]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[-0.75, -0.75],
       [ 0.75, -0.75],
       [ 0.75,  0.75],
       [-0.75,  0.75],
       [-0.75, -0.75]]), array([[0., 0.],
       [0., 1.]])]]",18,(connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (transform_matrix 1 0 (- 0 (+ 2 0.5)) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),(connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 2 0.5)) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand']","['all_base_strokes', 'row_of_dials']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5)))']","['0.0', '1.0', '1.5']","['1', '2.0', '1.0', '1.5', '(/ pi 2)']",[],"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', '0.0', '1.0', '1.5']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', '1', '2.0', '1.0', '1.5', '(/ pi 2)']","['all_base_strokes', 'row_of_dials']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '1', '2.0', '1.0', '1.5', '(/ pi 2)']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5)))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-006.png
dials_context_programs_context_large_abstractions_007,dials_context_programs_train,(C (C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['C', 'C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '2', 'M', '1', '0', '-', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '+', '0', '*', '0.5', '*', '2', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '0', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5 ,  6.25],
       [ 8.5 ,  6.25]]), array([[-8.5 , -6.25],
       [ 8.5 , -6.25]]), array([[ 8.5 , -6.25],
       [ 8.5 ,  6.25]]), array([[-8.5 , -6.25],
       [-8.5 ,  6.25]]), array([[8.5  , 3.125],
       [9.5  , 3.125]]), array([[ 8.5  , -3.125],
       [ 9.5  , -3.125]]), array([[ 9.5  , -3.125],
       [ 9.5  ,  3.125]]), array([[ 8.5  , -3.125],
       [ 8.5  ,  3.125]]), array([[-9.5  ,  3.125],
       [-8.5  ,  3.125]]), array([[-9.5  , -3.125],
       [-8.5  , -3.125]]), array([[-8.5  , -3.125],
       [-8.5  ,  3.125]]), array([[-9.5  , -3.125],
       [-9.5  ,  3.125]]), array([[ 3.00000000e+00,  0.00000000e+00],
       [ 2.98831028e+00,  1.07485220e-01],
       [ 2.95378771e+00,  2.09944551e-01],
       [ 2.89804653e+00,  3.02587108e-01],
       [ 2.82369314e+00,  3.81081028e-01],
       [ 2.73420422e+00,  4.41756022e-01],
       [ 2.63376417e+00,  4.81774996e-01],
       [ 2.52706945e+00,  4.99266707e-01],
       [ 2.41910900e+00,  4.93413261e-01],
       [ 2.31493092e+00,  4.64488360e-01],
       [ 2.21940647e+00,  4.13844499e-01],
       [ 2.13700225e+00,  3.43849729e-01],
       [ 2.07157141e+00,  2.57776929e-01],
       [ 2.02617341e+00,  1.59650765e-01],
       [ 2.00293102e+00,  5.40595092e-02],
       [ 2.00293102e+00, -5.40595092e-02],
       [ 2.02617341e+00, -1.59650765e-01],
       [ 2.07157141e+00, -2.57776929e-01],
       [ 2.13700225e+00, -3.43849729e-01],
       [ 2.21940647e+00, -4.13844499e-01],
       [ 2.31493092e+00, -4.64488360e-01],
       [ 2.41910900e+00, -4.93413261e-01],
       [ 2.52706945e+00, -4.99266707e-01],
       [ 2.63376417e+00, -4.81774996e-01],
       [ 2.73420422e+00, -4.41756022e-01],
       [ 2.82369314e+00, -3.81081028e-01],
       [ 2.89804653e+00, -3.02587108e-01],
       [ 2.95378771e+00, -2.09944551e-01],
       [ 2.98831028e+00, -1.07485220e-01],
       [ 3.00000000e+00, -1.22464680e-16]]), array([[ 1.75, -0.75],
       [ 3.25, -0.75],
       [ 3.25,  0.75],
       [ 1.75,  0.75],
       [ 1.75, -0.75]]), array([[2.5, 0. ],
       [2.5, 1. ]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[-0.75, -0.75],
       [ 0.75, -0.75],
       [ 0.75,  0.75],
       [-0.75,  0.75],
       [-0.75, -0.75]]), array([[0., 0.],
       [0., 1.]]), array([[0.0000000e+00, 6.2500000e+00],
       [1.8369702e-16, 9.2500000e+00]]), array([[-1.  ,  9.25],
       [ 1.  ,  9.25]]), array([[-1.        ,  9.25      ],
       [-1.01168972,  9.35748522],
       [-1.04621229,  9.45994455],
       [-1.10195347,  9.55258711],
       [-1.17630686,  9.63108103],
       [-1.26579578,  9.69175602],
       [-1.36623583,  9.731775  ],
       [-1.47293055,  9.74926671],
       [-1.580891  ,  9.74341326],
       [-1.68506908,  9.71448836],
       [-1.78059353,  9.6638445 ],
       [-1.86299775,  9.59384973],
       [-1.92842859,  9.50777693],
       [-1.97382659,  9.40965077],
       [-1.99706898,  9.30405951],
       [-1.99706898,  9.19594049],
       [-1.97382659,  9.09034923],
       [-1.92842859,  8.99222307],
       [-1.86299775,  8.90615027],
       [-1.78059353,  8.8361555 ],
       [-1.68506908,  8.78551164],
       [-1.580891  ,  8.75658674],
       [-1.47293055,  8.75073329],
       [-1.36623583,  8.768225  ],
       [-1.26579578,  8.80824398],
       [-1.17630686,  8.86891897],
       [-1.10195347,  8.94741289],
       [-1.04621229,  9.04005545],
       [-1.01168972,  9.14251478],
       [-1.        ,  9.25      ]]), array([[2.        , 9.25      ],
       [1.98831028, 9.35748522],
       [1.95378771, 9.45994455],
       [1.89804653, 9.55258711],
       [1.82369314, 9.63108103],
       [1.73420422, 9.69175602],
       [1.63376417, 9.731775  ],
       [1.52706945, 9.74926671],
       [1.419109  , 9.74341326],
       [1.31493092, 9.71448836],
       [1.21940647, 9.6638445 ],
       [1.13700225, 9.59384973],
       [1.07157141, 9.50777693],
       [1.02617341, 9.40965077],
       [1.00293102, 9.30405951],
       [1.00293102, 9.19594049],
       [1.02617341, 9.09034923],
       [1.07157141, 8.99222307],
       [1.13700225, 8.90615027],
       [1.21940647, 8.8361555 ],
       [1.31493092, 8.78551164],
       [1.419109  , 8.75658674],
       [1.52706945, 8.75073329],
       [1.63376417, 8.768225  ],
       [1.73420422, 8.80824398],
       [1.82369314, 8.86891897],
       [1.89804653, 8.94741289],
       [1.95378771, 9.04005545],
       [1.98831028, 9.14251478],
       [2.        , 9.25      ]])]]",22,(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (transform_matrix 1 0 (- 0 (+ 2 0.5)) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),(connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 2 0.5)) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial']","['all_base_strokes', 'row_of_dials', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']","['0.0', '1.0', '1.5']","['1', '2.0', '1.0', '1.5', '(/ pi 2)', '1.0']",[],"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', '0.0', '1.0', '1.5']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', '1', '2.0', '1.0', '1.5', '(/ pi 2)', '1.0']","['all_base_strokes', 'row_of_dials', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '1', '2.0', '1.0', '1.5', '(/ pi 2)', '1.0']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-007.png
dials_context_programs_context_large_abstractions_008,dials_context_programs_train,(C (C (C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['C', 'C', 'C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '2', 'M', '1', '0', '-', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '+', '0', '*', '0.5', '*', '2', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '*', '+', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '*', '2', '0.5', '0.25', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '-', '0', '*', '+', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '*', '2', '0.5', '0.25', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5 ,  6.25],
       [ 8.5 ,  6.25]]), array([[-8.5 , -6.25],
       [ 8.5 , -6.25]]), array([[ 8.5 , -6.25],
       [ 8.5 ,  6.25]]), array([[-8.5 , -6.25],
       [-8.5 ,  6.25]]), array([[8.5  , 3.125],
       [9.5  , 3.125]]), array([[ 8.5  , -3.125],
       [ 9.5  , -3.125]]), array([[ 9.5  , -3.125],
       [ 9.5  ,  3.125]]), array([[ 8.5  , -3.125],
       [ 8.5  ,  3.125]]), array([[-9.5  ,  3.125],
       [-8.5  ,  3.125]]), array([[-9.5  , -3.125],
       [-8.5  , -3.125]]), array([[-8.5  , -3.125],
       [-8.5  ,  3.125]]), array([[-9.5  , -3.125],
       [-9.5  ,  3.125]]), array([[ 3.00000000e+00,  0.00000000e+00],
       [ 2.98831028e+00,  1.07485220e-01],
       [ 2.95378771e+00,  2.09944551e-01],
       [ 2.89804653e+00,  3.02587108e-01],
       [ 2.82369314e+00,  3.81081028e-01],
       [ 2.73420422e+00,  4.41756022e-01],
       [ 2.63376417e+00,  4.81774996e-01],
       [ 2.52706945e+00,  4.99266707e-01],
       [ 2.41910900e+00,  4.93413261e-01],
       [ 2.31493092e+00,  4.64488360e-01],
       [ 2.21940647e+00,  4.13844499e-01],
       [ 2.13700225e+00,  3.43849729e-01],
       [ 2.07157141e+00,  2.57776929e-01],
       [ 2.02617341e+00,  1.59650765e-01],
       [ 2.00293102e+00,  5.40595092e-02],
       [ 2.00293102e+00, -5.40595092e-02],
       [ 2.02617341e+00, -1.59650765e-01],
       [ 2.07157141e+00, -2.57776929e-01],
       [ 2.13700225e+00, -3.43849729e-01],
       [ 2.21940647e+00, -4.13844499e-01],
       [ 2.31493092e+00, -4.64488360e-01],
       [ 2.41910900e+00, -4.93413261e-01],
       [ 2.52706945e+00, -4.99266707e-01],
       [ 2.63376417e+00, -4.81774996e-01],
       [ 2.73420422e+00, -4.41756022e-01],
       [ 2.82369314e+00, -3.81081028e-01],
       [ 2.89804653e+00, -3.02587108e-01],
       [ 2.95378771e+00, -2.09944551e-01],
       [ 2.98831028e+00, -1.07485220e-01],
       [ 3.00000000e+00, -1.22464680e-16]]), array([[ 1.75, -0.75],
       [ 3.25, -0.75],
       [ 3.25,  0.75],
       [ 1.75,  0.75],
       [ 1.75, -0.75]]), array([[2.5, 0. ],
       [2.5, 1. ]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[-0.75, -0.75],
       [ 0.75, -0.75],
       [ 0.75,  0.75],
       [-0.75,  0.75],
       [-0.75, -0.75]]), array([[0., 0.],
       [0., 1.]]), array([[4.75, 6.25],
       [4.75, 9.25]]), array([[3.75, 9.25],
       [5.75, 9.25]]), array([[3.75      , 9.25      ],
       [3.73831028, 9.35748522],
       [3.70378771, 9.45994455],
       [3.64804653, 9.55258711],
       [3.57369314, 9.63108103],
       [3.48420422, 9.69175602],
       [3.38376417, 9.731775  ],
       [3.27706945, 9.74926671],
       [3.169109  , 9.74341326],
       [3.06493092, 9.71448836],
       [2.96940647, 9.6638445 ],
       [2.88700225, 9.59384973],
       [2.82157141, 9.50777693],
       [2.77617341, 9.40965077],
       [2.75293102, 9.30405951],
       [2.75293102, 9.19594049],
       [2.77617341, 9.09034923],
       [2.82157141, 8.99222307],
       [2.88700225, 8.90615027],
       [2.96940647, 8.8361555 ],
       [3.06493092, 8.78551164],
       [3.169109  , 8.75658674],
       [3.27706945, 8.75073329],
       [3.38376417, 8.768225  ],
       [3.48420422, 8.80824398],
       [3.57369314, 8.86891897],
       [3.64804653, 8.94741289],
       [3.70378771, 9.04005545],
       [3.73831028, 9.14251478],
       [3.75      , 9.25      ]]), array([[6.75      , 9.25      ],
       [6.73831028, 9.35748522],
       [6.70378771, 9.45994455],
       [6.64804653, 9.55258711],
       [6.57369314, 9.63108103],
       [6.48420422, 9.69175602],
       [6.38376417, 9.731775  ],
       [6.27706945, 9.74926671],
       [6.169109  , 9.74341326],
       [6.06493092, 9.71448836],
       [5.96940647, 9.6638445 ],
       [5.88700225, 9.59384973],
       [5.82157141, 9.50777693],
       [5.77617341, 9.40965077],
       [5.75293102, 9.30405951],
       [5.75293102, 9.19594049],
       [5.77617341, 9.09034923],
       [5.82157141, 8.99222307],
       [5.88700225, 8.90615027],
       [5.96940647, 8.8361555 ],
       [6.06493092, 8.78551164],
       [6.169109  , 8.75658674],
       [6.27706945, 8.75073329],
       [6.38376417, 8.768225  ],
       [6.48420422, 8.80824398],
       [6.57369314, 8.86891897],
       [6.64804653, 8.94741289],
       [6.70378771, 9.04005545],
       [6.73831028, 9.14251478],
       [6.75      , 9.25      ]]), array([[-4.75,  6.25],
       [-4.75,  9.25]]), array([[-5.75,  9.25],
       [-3.75,  9.25]]), array([[-5.75      ,  9.25      ],
       [-5.76168972,  9.35748522],
       [-5.79621229,  9.45994455],
       [-5.85195347,  9.55258711],
       [-5.92630686,  9.63108103],
       [-6.01579578,  9.69175602],
       [-6.11623583,  9.731775  ],
       [-6.22293055,  9.74926671],
       [-6.330891  ,  9.74341326],
       [-6.43506908,  9.71448836],
       [-6.53059353,  9.6638445 ],
       [-6.61299775,  9.59384973],
       [-6.67842859,  9.50777693],
       [-6.72382659,  9.40965077],
       [-6.74706898,  9.30405951],
       [-6.74706898,  9.19594049],
       [-6.72382659,  9.09034923],
       [-6.67842859,  8.99222307],
       [-6.61299775,  8.90615027],
       [-6.53059353,  8.8361555 ],
       [-6.43506908,  8.78551164],
       [-6.330891  ,  8.75658674],
       [-6.22293055,  8.75073329],
       [-6.11623583,  8.768225  ],
       [-6.01579578,  8.80824398],
       [-5.92630686,  8.86891897],
       [-5.85195347,  8.94741289],
       [-5.79621229,  9.04005545],
       [-5.76168972,  9.14251478],
       [-5.75      ,  9.25      ]]), array([[-2.75      ,  9.25      ],
       [-2.76168972,  9.35748522],
       [-2.79621229,  9.45994455],
       [-2.85195347,  9.55258711],
       [-2.92630686,  9.63108103],
       [-3.01579578,  9.69175602],
       [-3.11623583,  9.731775  ],
       [-3.22293055,  9.74926671],
       [-3.330891  ,  9.74341326],
       [-3.43506908,  9.71448836],
       [-3.53059353,  9.6638445 ],
       [-3.61299775,  9.59384973],
       [-3.67842859,  9.50777693],
       [-3.72382659,  9.40965077],
       [-3.74706898,  9.30405951],
       [-3.74706898,  9.19594049],
       [-3.72382659,  9.09034923],
       [-3.67842859,  8.99222307],
       [-3.61299775,  8.90615027],
       [-3.53059353,  8.8361555 ],
       [-3.43506908,  8.78551164],
       [-3.330891  ,  8.75658674],
       [-3.22293055,  8.75073329],
       [-3.11623583,  8.768225  ],
       [-3.01579578,  8.80824398],
       [-2.92630686,  8.86891897],
       [-2.85195347,  8.94741289],
       [-2.79621229,  9.04005545],
       [-2.76168972,  9.14251478],
       [-2.75      ,  9.25      ]])]]",26,(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (transform_matrix 1 0 (- 0 (+ 2 0.5)) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 2 0.5)) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', 'antenna_lines', 'antenna_finial']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']","['0.0', '1.0', '1.5']","['1', '2.0', '1.0', '1.5', '(/ pi 2)', '1.0', '1.0']",[],"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', '0.0', '1.0', '1.5']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', 'antenna_lines', 'antenna_finial', '1', '2.0', '1.0', '1.5', '(/ pi 2)', '1.0', '1.0']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '1', '2.0', '1.0', '1.5', '(/ pi 2)', '1.0', '1.0']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-008.png
dials_context_programs_context_large_abstractions_009,dials_context_programs_train,(C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 3 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),"['C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '3', 'M', '1', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '*', '-', '3', '1', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5']","[[array([[-8.5 ,  2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [ 8.5 , -2.25]]), array([[ 8.5 , -2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [-8.5 ,  2.25]]), array([[8.5  , 1.125],
       [9.5  , 1.125]]), array([[ 8.5  , -1.125],
       [ 9.5  , -1.125]]), array([[ 9.5  , -1.125],
       [ 9.5  ,  1.125]]), array([[ 8.5  , -1.125],
       [ 8.5  ,  1.125]]), array([[-9.5  ,  1.125],
       [-8.5  ,  1.125]]), array([[-9.5  , -1.125],
       [-8.5  , -1.125]]), array([[-8.5  , -1.125],
       [-8.5  ,  1.125]]), array([[-9.5  , -1.125],
       [-9.5  ,  1.125]]), array([[-2.00000000e+00,  0.00000000e+00],
       [-2.01168972e+00,  1.07485220e-01],
       [-2.04621229e+00,  2.09944551e-01],
       [-2.10195347e+00,  3.02587108e-01],
       [-2.17630686e+00,  3.81081028e-01],
       [-2.26579578e+00,  4.41756022e-01],
       [-2.36623583e+00,  4.81774996e-01],
       [-2.47293055e+00,  4.99266707e-01],
       [-2.58089100e+00,  4.93413261e-01],
       [-2.68506908e+00,  4.64488360e-01],
       [-2.78059353e+00,  4.13844499e-01],
       [-2.86299775e+00,  3.43849729e-01],
       [-2.92842859e+00,  2.57776929e-01],
       [-2.97382659e+00,  1.59650765e-01],
       [-2.99706898e+00,  5.40595092e-02],
       [-2.99706898e+00, -5.40595092e-02],
       [-2.97382659e+00, -1.59650765e-01],
       [-2.92842859e+00, -2.57776929e-01],
       [-2.86299775e+00, -3.43849729e-01],
       [-2.78059353e+00, -4.13844499e-01],
       [-2.68506908e+00, -4.64488360e-01],
       [-2.58089100e+00, -4.93413261e-01],
       [-2.47293055e+00, -4.99266707e-01],
       [-2.36623583e+00, -4.81774996e-01],
       [-2.26579578e+00, -4.41756022e-01],
       [-2.17630686e+00, -3.81081028e-01],
       [-2.10195347e+00, -3.02587108e-01],
       [-2.04621229e+00, -2.09944551e-01],
       [-2.01168972e+00, -1.07485220e-01],
       [-2.00000000e+00, -1.22464680e-16]]), array([[-3.25, -0.75],
       [-1.75, -0.75],
       [-1.75,  0.75],
       [-3.25,  0.75],
       [-3.25, -0.75]]), array([[-2.5,  0. ],
       [-2.5,  1. ]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[-0.75, -0.75],
       [ 0.75, -0.75],
       [ 0.75,  0.75],
       [-0.75,  0.75],
       [-0.75, -0.75]]), array([[0., 0.],
       [0., 1.]]), array([[ 3.00000000e+00,  0.00000000e+00],
       [ 2.98831028e+00,  1.07485220e-01],
       [ 2.95378771e+00,  2.09944551e-01],
       [ 2.89804653e+00,  3.02587108e-01],
       [ 2.82369314e+00,  3.81081028e-01],
       [ 2.73420422e+00,  4.41756022e-01],
       [ 2.63376417e+00,  4.81774996e-01],
       [ 2.52706945e+00,  4.99266707e-01],
       [ 2.41910900e+00,  4.93413261e-01],
       [ 2.31493092e+00,  4.64488360e-01],
       [ 2.21940647e+00,  4.13844499e-01],
       [ 2.13700225e+00,  3.43849729e-01],
       [ 2.07157141e+00,  2.57776929e-01],
       [ 2.02617341e+00,  1.59650765e-01],
       [ 2.00293102e+00,  5.40595092e-02],
       [ 2.00293102e+00, -5.40595092e-02],
       [ 2.02617341e+00, -1.59650765e-01],
       [ 2.07157141e+00, -2.57776929e-01],
       [ 2.13700225e+00, -3.43849729e-01],
       [ 2.21940647e+00, -4.13844499e-01],
       [ 2.31493092e+00, -4.64488360e-01],
       [ 2.41910900e+00, -4.93413261e-01],
       [ 2.52706945e+00, -4.99266707e-01],
       [ 2.63376417e+00, -4.81774996e-01],
       [ 2.73420422e+00, -4.41756022e-01],
       [ 2.82369314e+00, -3.81081028e-01],
       [ 2.89804653e+00, -3.02587108e-01],
       [ 2.95378771e+00, -2.09944551e-01],
       [ 2.98831028e+00, -1.07485220e-01],
       [ 3.00000000e+00, -1.22464680e-16]]), array([[ 1.75, -0.75],
       [ 3.25, -0.75],
       [ 3.25,  0.75],
       [ 1.75,  0.75],
       [ 1.75, -0.75]]), array([[2.5, 0. ],
       [2.5, 1. ]])]]",21,(connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 3 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),(connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (transform_matrix_scale_angle_x_y 1 0 (+ 2 0.5) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (* (- 3 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand']","['all_base_strokes', 'row_of_dials']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))']","['0.0', '1.0', '1.5']","['1', '3.0', '1.0', '1.5', '(/ pi 2)']",[],"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', '0.0', '1.0', '1.5']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', '1', '3.0', '1.0', '1.5', '(/ pi 2)']","['all_base_strokes', 'row_of_dials']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '1', '3.0', '1.0', '1.5', '(/ pi 2)']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-009.png
dials_context_programs_context_large_abstractions_010,dials_context_programs_train,(C (C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 3 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['C', 'C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '3', 'M', '1', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '*', '-', '3', '1', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '0', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5 ,  2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [ 8.5 , -2.25]]), array([[ 8.5 , -2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [-8.5 ,  2.25]]), array([[8.5  , 1.125],
       [9.5  , 1.125]]), array([[ 8.5  , -1.125],
       [ 9.5  , -1.125]]), array([[ 9.5  , -1.125],
       [ 9.5  ,  1.125]]), array([[ 8.5  , -1.125],
       [ 8.5  ,  1.125]]), array([[-9.5  ,  1.125],
       [-8.5  ,  1.125]]), array([[-9.5  , -1.125],
       [-8.5  , -1.125]]), array([[-8.5  , -1.125],
       [-8.5  ,  1.125]]), array([[-9.5  , -1.125],
       [-9.5  ,  1.125]]), array([[-2.00000000e+00,  0.00000000e+00],
       [-2.01168972e+00,  1.07485220e-01],
       [-2.04621229e+00,  2.09944551e-01],
       [-2.10195347e+00,  3.02587108e-01],
       [-2.17630686e+00,  3.81081028e-01],
       [-2.26579578e+00,  4.41756022e-01],
       [-2.36623583e+00,  4.81774996e-01],
       [-2.47293055e+00,  4.99266707e-01],
       [-2.58089100e+00,  4.93413261e-01],
       [-2.68506908e+00,  4.64488360e-01],
       [-2.78059353e+00,  4.13844499e-01],
       [-2.86299775e+00,  3.43849729e-01],
       [-2.92842859e+00,  2.57776929e-01],
       [-2.97382659e+00,  1.59650765e-01],
       [-2.99706898e+00,  5.40595092e-02],
       [-2.99706898e+00, -5.40595092e-02],
       [-2.97382659e+00, -1.59650765e-01],
       [-2.92842859e+00, -2.57776929e-01],
       [-2.86299775e+00, -3.43849729e-01],
       [-2.78059353e+00, -4.13844499e-01],
       [-2.68506908e+00, -4.64488360e-01],
       [-2.58089100e+00, -4.93413261e-01],
       [-2.47293055e+00, -4.99266707e-01],
       [-2.36623583e+00, -4.81774996e-01],
       [-2.26579578e+00, -4.41756022e-01],
       [-2.17630686e+00, -3.81081028e-01],
       [-2.10195347e+00, -3.02587108e-01],
       [-2.04621229e+00, -2.09944551e-01],
       [-2.01168972e+00, -1.07485220e-01],
       [-2.00000000e+00, -1.22464680e-16]]), array([[-3.25, -0.75],
       [-1.75, -0.75],
       [-1.75,  0.75],
       [-3.25,  0.75],
       [-3.25, -0.75]]), array([[-2.5,  0. ],
       [-2.5,  1. ]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[-0.75, -0.75],
       [ 0.75, -0.75],
       [ 0.75,  0.75],
       [-0.75,  0.75],
       [-0.75, -0.75]]), array([[0., 0.],
       [0., 1.]]), array([[ 3.00000000e+00,  0.00000000e+00],
       [ 2.98831028e+00,  1.07485220e-01],
       [ 2.95378771e+00,  2.09944551e-01],
       [ 2.89804653e+00,  3.02587108e-01],
       [ 2.82369314e+00,  3.81081028e-01],
       [ 2.73420422e+00,  4.41756022e-01],
       [ 2.63376417e+00,  4.81774996e-01],
       [ 2.52706945e+00,  4.99266707e-01],
       [ 2.41910900e+00,  4.93413261e-01],
       [ 2.31493092e+00,  4.64488360e-01],
       [ 2.21940647e+00,  4.13844499e-01],
       [ 2.13700225e+00,  3.43849729e-01],
       [ 2.07157141e+00,  2.57776929e-01],
       [ 2.02617341e+00,  1.59650765e-01],
       [ 2.00293102e+00,  5.40595092e-02],
       [ 2.00293102e+00, -5.40595092e-02],
       [ 2.02617341e+00, -1.59650765e-01],
       [ 2.07157141e+00, -2.57776929e-01],
       [ 2.13700225e+00, -3.43849729e-01],
       [ 2.21940647e+00, -4.13844499e-01],
       [ 2.31493092e+00, -4.64488360e-01],
       [ 2.41910900e+00, -4.93413261e-01],
       [ 2.52706945e+00, -4.99266707e-01],
       [ 2.63376417e+00, -4.81774996e-01],
       [ 2.73420422e+00, -4.41756022e-01],
       [ 2.82369314e+00, -3.81081028e-01],
       [ 2.89804653e+00, -3.02587108e-01],
       [ 2.95378771e+00, -2.09944551e-01],
       [ 2.98831028e+00, -1.07485220e-01],
       [ 3.00000000e+00, -1.22464680e-16]]), array([[ 1.75, -0.75],
       [ 3.25, -0.75],
       [ 3.25,  0.75],
       [ 1.75,  0.75],
       [ 1.75, -0.75]]), array([[2.5, 0. ],
       [2.5, 1. ]]), array([[0.0000000e+00, 2.2500000e+00],
       [1.8369702e-16, 5.2500000e+00]]), array([[-1.  ,  5.25],
       [ 1.  ,  5.25]]), array([[-1.        ,  5.25      ],
       [-1.01168972,  5.35748522],
       [-1.04621229,  5.45994455],
       [-1.10195347,  5.55258711],
       [-1.17630686,  5.63108103],
       [-1.26579578,  5.69175602],
       [-1.36623583,  5.731775  ],
       [-1.47293055,  5.74926671],
       [-1.580891  ,  5.74341326],
       [-1.68506908,  5.71448836],
       [-1.78059353,  5.6638445 ],
       [-1.86299775,  5.59384973],
       [-1.92842859,  5.50777693],
       [-1.97382659,  5.40965077],
       [-1.99706898,  5.30405951],
       [-1.99706898,  5.19594049],
       [-1.97382659,  5.09034923],
       [-1.92842859,  4.99222307],
       [-1.86299775,  4.90615027],
       [-1.78059353,  4.8361555 ],
       [-1.68506908,  4.78551164],
       [-1.580891  ,  4.75658674],
       [-1.47293055,  4.75073329],
       [-1.36623583,  4.768225  ],
       [-1.26579578,  4.80824398],
       [-1.17630686,  4.86891897],
       [-1.10195347,  4.94741289],
       [-1.04621229,  5.04005545],
       [-1.01168972,  5.14251478],
       [-1.        ,  5.25      ]]), array([[2.        , 5.25      ],
       [1.98831028, 5.35748522],
       [1.95378771, 5.45994455],
       [1.89804653, 5.55258711],
       [1.82369314, 5.63108103],
       [1.73420422, 5.69175602],
       [1.63376417, 5.731775  ],
       [1.52706945, 5.74926671],
       [1.419109  , 5.74341326],
       [1.31493092, 5.71448836],
       [1.21940647, 5.6638445 ],
       [1.13700225, 5.59384973],
       [1.07157141, 5.50777693],
       [1.02617341, 5.40965077],
       [1.00293102, 5.30405951],
       [1.00293102, 5.19594049],
       [1.02617341, 5.09034923],
       [1.07157141, 4.99222307],
       [1.13700225, 4.90615027],
       [1.21940647, 4.8361555 ],
       [1.31493092, 4.78551164],
       [1.419109  , 4.75658674],
       [1.52706945, 4.75073329],
       [1.63376417, 4.768225  ],
       [1.73420422, 4.80824398],
       [1.82369314, 4.86891897],
       [1.89804653, 4.94741289],
       [1.95378771, 5.04005545],
       [1.98831028, 5.14251478],
       [2.        , 5.25      ]])]]",25,(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 3 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),(connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (transform_matrix_scale_angle_x_y 1 0 (+ 2 0.5) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (* (- 3 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial']","['all_base_strokes', 'row_of_dials', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']","['0.0', '1.0', '1.5']","['1', '3.0', '1.0', '1.5', '(/ pi 2)', '1.0']",[],"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', '0.0', '1.0', '1.5']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', '1', '3.0', '1.0', '1.5', '(/ pi 2)', '1.0']","['all_base_strokes', 'row_of_dials', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '1', '3.0', '1.0', '1.5', '(/ pi 2)', '1.0']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-010.png
dials_context_programs_context_large_abstractions_011,dials_context_programs_train,(C (C (C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 3 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['C', 'C', 'C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '3', 'M', '1', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '*', '-', '3', '1', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '*', '+', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '*', '2', '0.5', '0.25', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '-', '0', '*', '+', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '*', '2', '0.5', '0.25', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5 ,  2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [ 8.5 , -2.25]]), array([[ 8.5 , -2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [-8.5 ,  2.25]]), array([[8.5  , 1.125],
       [9.5  , 1.125]]), array([[ 8.5  , -1.125],
       [ 9.5  , -1.125]]), array([[ 9.5  , -1.125],
       [ 9.5  ,  1.125]]), array([[ 8.5  , -1.125],
       [ 8.5  ,  1.125]]), array([[-9.5  ,  1.125],
       [-8.5  ,  1.125]]), array([[-9.5  , -1.125],
       [-8.5  , -1.125]]), array([[-8.5  , -1.125],
       [-8.5  ,  1.125]]), array([[-9.5  , -1.125],
       [-9.5  ,  1.125]]), array([[-2.00000000e+00,  0.00000000e+00],
       [-2.01168972e+00,  1.07485220e-01],
       [-2.04621229e+00,  2.09944551e-01],
       [-2.10195347e+00,  3.02587108e-01],
       [-2.17630686e+00,  3.81081028e-01],
       [-2.26579578e+00,  4.41756022e-01],
       [-2.36623583e+00,  4.81774996e-01],
       [-2.47293055e+00,  4.99266707e-01],
       [-2.58089100e+00,  4.93413261e-01],
       [-2.68506908e+00,  4.64488360e-01],
       [-2.78059353e+00,  4.13844499e-01],
       [-2.86299775e+00,  3.43849729e-01],
       [-2.92842859e+00,  2.57776929e-01],
       [-2.97382659e+00,  1.59650765e-01],
       [-2.99706898e+00,  5.40595092e-02],
       [-2.99706898e+00, -5.40595092e-02],
       [-2.97382659e+00, -1.59650765e-01],
       [-2.92842859e+00, -2.57776929e-01],
       [-2.86299775e+00, -3.43849729e-01],
       [-2.78059353e+00, -4.13844499e-01],
       [-2.68506908e+00, -4.64488360e-01],
       [-2.58089100e+00, -4.93413261e-01],
       [-2.47293055e+00, -4.99266707e-01],
       [-2.36623583e+00, -4.81774996e-01],
       [-2.26579578e+00, -4.41756022e-01],
       [-2.17630686e+00, -3.81081028e-01],
       [-2.10195347e+00, -3.02587108e-01],
       [-2.04621229e+00, -2.09944551e-01],
       [-2.01168972e+00, -1.07485220e-01],
       [-2.00000000e+00, -1.22464680e-16]]), array([[-3.25, -0.75],
       [-1.75, -0.75],
       [-1.75,  0.75],
       [-3.25,  0.75],
       [-3.25, -0.75]]), array([[-2.5,  0. ],
       [-2.5,  1. ]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[-0.75, -0.75],
       [ 0.75, -0.75],
       [ 0.75,  0.75],
       [-0.75,  0.75],
       [-0.75, -0.75]]), array([[0., 0.],
       [0., 1.]]), array([[ 3.00000000e+00,  0.00000000e+00],
       [ 2.98831028e+00,  1.07485220e-01],
       [ 2.95378771e+00,  2.09944551e-01],
       [ 2.89804653e+00,  3.02587108e-01],
       [ 2.82369314e+00,  3.81081028e-01],
       [ 2.73420422e+00,  4.41756022e-01],
       [ 2.63376417e+00,  4.81774996e-01],
       [ 2.52706945e+00,  4.99266707e-01],
       [ 2.41910900e+00,  4.93413261e-01],
       [ 2.31493092e+00,  4.64488360e-01],
       [ 2.21940647e+00,  4.13844499e-01],
       [ 2.13700225e+00,  3.43849729e-01],
       [ 2.07157141e+00,  2.57776929e-01],
       [ 2.02617341e+00,  1.59650765e-01],
       [ 2.00293102e+00,  5.40595092e-02],
       [ 2.00293102e+00, -5.40595092e-02],
       [ 2.02617341e+00, -1.59650765e-01],
       [ 2.07157141e+00, -2.57776929e-01],
       [ 2.13700225e+00, -3.43849729e-01],
       [ 2.21940647e+00, -4.13844499e-01],
       [ 2.31493092e+00, -4.64488360e-01],
       [ 2.41910900e+00, -4.93413261e-01],
       [ 2.52706945e+00, -4.99266707e-01],
       [ 2.63376417e+00, -4.81774996e-01],
       [ 2.73420422e+00, -4.41756022e-01],
       [ 2.82369314e+00, -3.81081028e-01],
       [ 2.89804653e+00, -3.02587108e-01],
       [ 2.95378771e+00, -2.09944551e-01],
       [ 2.98831028e+00, -1.07485220e-01],
       [ 3.00000000e+00, -1.22464680e-16]]), array([[ 1.75, -0.75],
       [ 3.25, -0.75],
       [ 3.25,  0.75],
       [ 1.75,  0.75],
       [ 1.75, -0.75]]), array([[2.5, 0. ],
       [2.5, 1. ]]), array([[4.75, 2.25],
       [4.75, 5.25]]), array([[3.75, 5.25],
       [5.75, 5.25]]), array([[3.75      , 5.25      ],
       [3.73831028, 5.35748522],
       [3.70378771, 5.45994455],
       [3.64804653, 5.55258711],
       [3.57369314, 5.63108103],
       [3.48420422, 5.69175602],
       [3.38376417, 5.731775  ],
       [3.27706945, 5.74926671],
       [3.169109  , 5.74341326],
       [3.06493092, 5.71448836],
       [2.96940647, 5.6638445 ],
       [2.88700225, 5.59384973],
       [2.82157141, 5.50777693],
       [2.77617341, 5.40965077],
       [2.75293102, 5.30405951],
       [2.75293102, 5.19594049],
       [2.77617341, 5.09034923],
       [2.82157141, 4.99222307],
       [2.88700225, 4.90615027],
       [2.96940647, 4.8361555 ],
       [3.06493092, 4.78551164],
       [3.169109  , 4.75658674],
       [3.27706945, 4.75073329],
       [3.38376417, 4.768225  ],
       [3.48420422, 4.80824398],
       [3.57369314, 4.86891897],
       [3.64804653, 4.94741289],
       [3.70378771, 5.04005545],
       [3.73831028, 5.14251478],
       [3.75      , 5.25      ]]), array([[6.75      , 5.25      ],
       [6.73831028, 5.35748522],
       [6.70378771, 5.45994455],
       [6.64804653, 5.55258711],
       [6.57369314, 5.63108103],
       [6.48420422, 5.69175602],
       [6.38376417, 5.731775  ],
       [6.27706945, 5.74926671],
       [6.169109  , 5.74341326],
       [6.06493092, 5.71448836],
       [5.96940647, 5.6638445 ],
       [5.88700225, 5.59384973],
       [5.82157141, 5.50777693],
       [5.77617341, 5.40965077],
       [5.75293102, 5.30405951],
       [5.75293102, 5.19594049],
       [5.77617341, 5.09034923],
       [5.82157141, 4.99222307],
       [5.88700225, 4.90615027],
       [5.96940647, 4.8361555 ],
       [6.06493092, 4.78551164],
       [6.169109  , 4.75658674],
       [6.27706945, 4.75073329],
       [6.38376417, 4.768225  ],
       [6.48420422, 4.80824398],
       [6.57369314, 4.86891897],
       [6.64804653, 4.94741289],
       [6.70378771, 5.04005545],
       [6.73831028, 5.14251478],
       [6.75      , 5.25      ]]), array([[-4.75,  2.25],
       [-4.75,  5.25]]), array([[-5.75,  5.25],
       [-3.75,  5.25]]), array([[-5.75      ,  5.25      ],
       [-5.76168972,  5.35748522],
       [-5.79621229,  5.45994455],
       [-5.85195347,  5.55258711],
       [-5.92630686,  5.63108103],
       [-6.01579578,  5.69175602],
       [-6.11623583,  5.731775  ],
       [-6.22293055,  5.74926671],
       [-6.330891  ,  5.74341326],
       [-6.43506908,  5.71448836],
       [-6.53059353,  5.6638445 ],
       [-6.61299775,  5.59384973],
       [-6.67842859,  5.50777693],
       [-6.72382659,  5.40965077],
       [-6.74706898,  5.30405951],
       [-6.74706898,  5.19594049],
       [-6.72382659,  5.09034923],
       [-6.67842859,  4.99222307],
       [-6.61299775,  4.90615027],
       [-6.53059353,  4.8361555 ],
       [-6.43506908,  4.78551164],
       [-6.330891  ,  4.75658674],
       [-6.22293055,  4.75073329],
       [-6.11623583,  4.768225  ],
       [-6.01579578,  4.80824398],
       [-5.92630686,  4.86891897],
       [-5.85195347,  4.94741289],
       [-5.79621229,  5.04005545],
       [-5.76168972,  5.14251478],
       [-5.75      ,  5.25      ]]), array([[-2.75      ,  5.25      ],
       [-2.76168972,  5.35748522],
       [-2.79621229,  5.45994455],
       [-2.85195347,  5.55258711],
       [-2.92630686,  5.63108103],
       [-3.01579578,  5.69175602],
       [-3.11623583,  5.731775  ],
       [-3.22293055,  5.74926671],
       [-3.330891  ,  5.74341326],
       [-3.43506908,  5.71448836],
       [-3.53059353,  5.6638445 ],
       [-3.61299775,  5.59384973],
       [-3.67842859,  5.50777693],
       [-3.72382659,  5.40965077],
       [-3.74706898,  5.30405951],
       [-3.74706898,  5.19594049],
       [-3.72382659,  5.09034923],
       [-3.67842859,  4.99222307],
       [-3.61299775,  4.90615027],
       [-3.53059353,  4.8361555 ],
       [-3.43506908,  4.78551164],
       [-3.330891  ,  4.75658674],
       [-3.22293055,  4.75073329],
       [-3.11623583,  4.768225  ],
       [-3.01579578,  4.80824398],
       [-2.92630686,  4.86891897],
       [-2.85195347,  4.94741289],
       [-2.79621229,  5.04005545],
       [-2.76168972,  5.14251478],
       [-2.75      ,  5.25      ]])]]",29,(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 3 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (transform_matrix_scale_angle_x_y 1 0 (+ 2 0.5) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (* (- 3 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', 'antenna_lines', 'antenna_finial']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']","['0.0', '1.0', '1.5']","['1', '3.0', '1.0', '1.5', '(/ pi 2)', '1.0', '1.0']",[],"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', '0.0', '1.0', '1.5']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', 'antenna_lines', 'antenna_finial', '1', '3.0', '1.0', '1.5', '(/ pi 2)', '1.0', '1.0']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '1', '3.0', '1.0', '1.5', '(/ pi 2)', '1.0', '1.0']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-011.png
dials_context_programs_context_large_abstractions_012,dials_context_programs_train,(C (C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 3 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['C', 'C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '3', 'M', '1', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '*', '-', '3', '1', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '0', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5 ,  6.25],
       [ 8.5 ,  6.25]]), array([[-8.5 , -6.25],
       [ 8.5 , -6.25]]), array([[ 8.5 , -6.25],
       [ 8.5 ,  6.25]]), array([[-8.5 , -6.25],
       [-8.5 ,  6.25]]), array([[8.5  , 3.125],
       [9.5  , 3.125]]), array([[ 8.5  , -3.125],
       [ 9.5  , -3.125]]), array([[ 9.5  , -3.125],
       [ 9.5  ,  3.125]]), array([[ 8.5  , -3.125],
       [ 8.5  ,  3.125]]), array([[-9.5  ,  3.125],
       [-8.5  ,  3.125]]), array([[-9.5  , -3.125],
       [-8.5  , -3.125]]), array([[-8.5  , -3.125],
       [-8.5  ,  3.125]]), array([[-9.5  , -3.125],
       [-9.5  ,  3.125]]), array([[-2.00000000e+00,  0.00000000e+00],
       [-2.01168972e+00,  1.07485220e-01],
       [-2.04621229e+00,  2.09944551e-01],
       [-2.10195347e+00,  3.02587108e-01],
       [-2.17630686e+00,  3.81081028e-01],
       [-2.26579578e+00,  4.41756022e-01],
       [-2.36623583e+00,  4.81774996e-01],
       [-2.47293055e+00,  4.99266707e-01],
       [-2.58089100e+00,  4.93413261e-01],
       [-2.68506908e+00,  4.64488360e-01],
       [-2.78059353e+00,  4.13844499e-01],
       [-2.86299775e+00,  3.43849729e-01],
       [-2.92842859e+00,  2.57776929e-01],
       [-2.97382659e+00,  1.59650765e-01],
       [-2.99706898e+00,  5.40595092e-02],
       [-2.99706898e+00, -5.40595092e-02],
       [-2.97382659e+00, -1.59650765e-01],
       [-2.92842859e+00, -2.57776929e-01],
       [-2.86299775e+00, -3.43849729e-01],
       [-2.78059353e+00, -4.13844499e-01],
       [-2.68506908e+00, -4.64488360e-01],
       [-2.58089100e+00, -4.93413261e-01],
       [-2.47293055e+00, -4.99266707e-01],
       [-2.36623583e+00, -4.81774996e-01],
       [-2.26579578e+00, -4.41756022e-01],
       [-2.17630686e+00, -3.81081028e-01],
       [-2.10195347e+00, -3.02587108e-01],
       [-2.04621229e+00, -2.09944551e-01],
       [-2.01168972e+00, -1.07485220e-01],
       [-2.00000000e+00, -1.22464680e-16]]), array([[-3.25, -0.75],
       [-1.75, -0.75],
       [-1.75,  0.75],
       [-3.25,  0.75],
       [-3.25, -0.75]]), array([[-2.5,  0. ],
       [-2.5,  1. ]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[-0.75, -0.75],
       [ 0.75, -0.75],
       [ 0.75,  0.75],
       [-0.75,  0.75],
       [-0.75, -0.75]]), array([[0., 0.],
       [0., 1.]]), array([[ 3.00000000e+00,  0.00000000e+00],
       [ 2.98831028e+00,  1.07485220e-01],
       [ 2.95378771e+00,  2.09944551e-01],
       [ 2.89804653e+00,  3.02587108e-01],
       [ 2.82369314e+00,  3.81081028e-01],
       [ 2.73420422e+00,  4.41756022e-01],
       [ 2.63376417e+00,  4.81774996e-01],
       [ 2.52706945e+00,  4.99266707e-01],
       [ 2.41910900e+00,  4.93413261e-01],
       [ 2.31493092e+00,  4.64488360e-01],
       [ 2.21940647e+00,  4.13844499e-01],
       [ 2.13700225e+00,  3.43849729e-01],
       [ 2.07157141e+00,  2.57776929e-01],
       [ 2.02617341e+00,  1.59650765e-01],
       [ 2.00293102e+00,  5.40595092e-02],
       [ 2.00293102e+00, -5.40595092e-02],
       [ 2.02617341e+00, -1.59650765e-01],
       [ 2.07157141e+00, -2.57776929e-01],
       [ 2.13700225e+00, -3.43849729e-01],
       [ 2.21940647e+00, -4.13844499e-01],
       [ 2.31493092e+00, -4.64488360e-01],
       [ 2.41910900e+00, -4.93413261e-01],
       [ 2.52706945e+00, -4.99266707e-01],
       [ 2.63376417e+00, -4.81774996e-01],
       [ 2.73420422e+00, -4.41756022e-01],
       [ 2.82369314e+00, -3.81081028e-01],
       [ 2.89804653e+00, -3.02587108e-01],
       [ 2.95378771e+00, -2.09944551e-01],
       [ 2.98831028e+00, -1.07485220e-01],
       [ 3.00000000e+00, -1.22464680e-16]]), array([[ 1.75, -0.75],
       [ 3.25, -0.75],
       [ 3.25,  0.75],
       [ 1.75,  0.75],
       [ 1.75, -0.75]]), array([[2.5, 0. ],
       [2.5, 1. ]]), array([[0.0000000e+00, 6.2500000e+00],
       [1.8369702e-16, 9.2500000e+00]]), array([[-1.  ,  9.25],
       [ 1.  ,  9.25]]), array([[-1.        ,  9.25      ],
       [-1.01168972,  9.35748522],
       [-1.04621229,  9.45994455],
       [-1.10195347,  9.55258711],
       [-1.17630686,  9.63108103],
       [-1.26579578,  9.69175602],
       [-1.36623583,  9.731775  ],
       [-1.47293055,  9.74926671],
       [-1.580891  ,  9.74341326],
       [-1.68506908,  9.71448836],
       [-1.78059353,  9.6638445 ],
       [-1.86299775,  9.59384973],
       [-1.92842859,  9.50777693],
       [-1.97382659,  9.40965077],
       [-1.99706898,  9.30405951],
       [-1.99706898,  9.19594049],
       [-1.97382659,  9.09034923],
       [-1.92842859,  8.99222307],
       [-1.86299775,  8.90615027],
       [-1.78059353,  8.8361555 ],
       [-1.68506908,  8.78551164],
       [-1.580891  ,  8.75658674],
       [-1.47293055,  8.75073329],
       [-1.36623583,  8.768225  ],
       [-1.26579578,  8.80824398],
       [-1.17630686,  8.86891897],
       [-1.10195347,  8.94741289],
       [-1.04621229,  9.04005545],
       [-1.01168972,  9.14251478],
       [-1.        ,  9.25      ]]), array([[2.        , 9.25      ],
       [1.98831028, 9.35748522],
       [1.95378771, 9.45994455],
       [1.89804653, 9.55258711],
       [1.82369314, 9.63108103],
       [1.73420422, 9.69175602],
       [1.63376417, 9.731775  ],
       [1.52706945, 9.74926671],
       [1.419109  , 9.74341326],
       [1.31493092, 9.71448836],
       [1.21940647, 9.6638445 ],
       [1.13700225, 9.59384973],
       [1.07157141, 9.50777693],
       [1.02617341, 9.40965077],
       [1.00293102, 9.30405951],
       [1.00293102, 9.19594049],
       [1.02617341, 9.09034923],
       [1.07157141, 8.99222307],
       [1.13700225, 8.90615027],
       [1.21940647, 8.8361555 ],
       [1.31493092, 8.78551164],
       [1.419109  , 8.75658674],
       [1.52706945, 8.75073329],
       [1.63376417, 8.768225  ],
       [1.73420422, 8.80824398],
       [1.82369314, 8.86891897],
       [1.89804653, 8.94741289],
       [1.95378771, 9.04005545],
       [1.98831028, 9.14251478],
       [2.        , 9.25      ]])]]",25,(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 3 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),(connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (transform_matrix_scale_angle_x_y 1 0 (+ 2 0.5) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (* (- 3 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial']","['all_base_strokes', 'row_of_dials', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']","['0.0', '1.0', '1.5']","['1', '3.0', '1.0', '1.5', '(/ pi 2)', '1.0']",[],"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', '0.0', '1.0', '1.5']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', '1', '3.0', '1.0', '1.5', '(/ pi 2)', '1.0']","['all_base_strokes', 'row_of_dials', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '1', '3.0', '1.0', '1.5', '(/ pi 2)', '1.0']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-012.png
dials_context_programs_context_large_abstractions_013,dials_context_programs_train,(C (C (C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 3 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['C', 'C', 'C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '3', 'M', '1', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '*', '-', '3', '1', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '*', '+', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '*', '2', '0.5', '0.25', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '-', '0', '*', '+', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '*', '2', '0.5', '0.25', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5 ,  6.25],
       [ 8.5 ,  6.25]]), array([[-8.5 , -6.25],
       [ 8.5 , -6.25]]), array([[ 8.5 , -6.25],
       [ 8.5 ,  6.25]]), array([[-8.5 , -6.25],
       [-8.5 ,  6.25]]), array([[8.5  , 3.125],
       [9.5  , 3.125]]), array([[ 8.5  , -3.125],
       [ 9.5  , -3.125]]), array([[ 9.5  , -3.125],
       [ 9.5  ,  3.125]]), array([[ 8.5  , -3.125],
       [ 8.5  ,  3.125]]), array([[-9.5  ,  3.125],
       [-8.5  ,  3.125]]), array([[-9.5  , -3.125],
       [-8.5  , -3.125]]), array([[-8.5  , -3.125],
       [-8.5  ,  3.125]]), array([[-9.5  , -3.125],
       [-9.5  ,  3.125]]), array([[-2.00000000e+00,  0.00000000e+00],
       [-2.01168972e+00,  1.07485220e-01],
       [-2.04621229e+00,  2.09944551e-01],
       [-2.10195347e+00,  3.02587108e-01],
       [-2.17630686e+00,  3.81081028e-01],
       [-2.26579578e+00,  4.41756022e-01],
       [-2.36623583e+00,  4.81774996e-01],
       [-2.47293055e+00,  4.99266707e-01],
       [-2.58089100e+00,  4.93413261e-01],
       [-2.68506908e+00,  4.64488360e-01],
       [-2.78059353e+00,  4.13844499e-01],
       [-2.86299775e+00,  3.43849729e-01],
       [-2.92842859e+00,  2.57776929e-01],
       [-2.97382659e+00,  1.59650765e-01],
       [-2.99706898e+00,  5.40595092e-02],
       [-2.99706898e+00, -5.40595092e-02],
       [-2.97382659e+00, -1.59650765e-01],
       [-2.92842859e+00, -2.57776929e-01],
       [-2.86299775e+00, -3.43849729e-01],
       [-2.78059353e+00, -4.13844499e-01],
       [-2.68506908e+00, -4.64488360e-01],
       [-2.58089100e+00, -4.93413261e-01],
       [-2.47293055e+00, -4.99266707e-01],
       [-2.36623583e+00, -4.81774996e-01],
       [-2.26579578e+00, -4.41756022e-01],
       [-2.17630686e+00, -3.81081028e-01],
       [-2.10195347e+00, -3.02587108e-01],
       [-2.04621229e+00, -2.09944551e-01],
       [-2.01168972e+00, -1.07485220e-01],
       [-2.00000000e+00, -1.22464680e-16]]), array([[-3.25, -0.75],
       [-1.75, -0.75],
       [-1.75,  0.75],
       [-3.25,  0.75],
       [-3.25, -0.75]]), array([[-2.5,  0. ],
       [-2.5,  1. ]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[-0.75, -0.75],
       [ 0.75, -0.75],
       [ 0.75,  0.75],
       [-0.75,  0.75],
       [-0.75, -0.75]]), array([[0., 0.],
       [0., 1.]]), array([[ 3.00000000e+00,  0.00000000e+00],
       [ 2.98831028e+00,  1.07485220e-01],
       [ 2.95378771e+00,  2.09944551e-01],
       [ 2.89804653e+00,  3.02587108e-01],
       [ 2.82369314e+00,  3.81081028e-01],
       [ 2.73420422e+00,  4.41756022e-01],
       [ 2.63376417e+00,  4.81774996e-01],
       [ 2.52706945e+00,  4.99266707e-01],
       [ 2.41910900e+00,  4.93413261e-01],
       [ 2.31493092e+00,  4.64488360e-01],
       [ 2.21940647e+00,  4.13844499e-01],
       [ 2.13700225e+00,  3.43849729e-01],
       [ 2.07157141e+00,  2.57776929e-01],
       [ 2.02617341e+00,  1.59650765e-01],
       [ 2.00293102e+00,  5.40595092e-02],
       [ 2.00293102e+00, -5.40595092e-02],
       [ 2.02617341e+00, -1.59650765e-01],
       [ 2.07157141e+00, -2.57776929e-01],
       [ 2.13700225e+00, -3.43849729e-01],
       [ 2.21940647e+00, -4.13844499e-01],
       [ 2.31493092e+00, -4.64488360e-01],
       [ 2.41910900e+00, -4.93413261e-01],
       [ 2.52706945e+00, -4.99266707e-01],
       [ 2.63376417e+00, -4.81774996e-01],
       [ 2.73420422e+00, -4.41756022e-01],
       [ 2.82369314e+00, -3.81081028e-01],
       [ 2.89804653e+00, -3.02587108e-01],
       [ 2.95378771e+00, -2.09944551e-01],
       [ 2.98831028e+00, -1.07485220e-01],
       [ 3.00000000e+00, -1.22464680e-16]]), array([[ 1.75, -0.75],
       [ 3.25, -0.75],
       [ 3.25,  0.75],
       [ 1.75,  0.75],
       [ 1.75, -0.75]]), array([[2.5, 0. ],
       [2.5, 1. ]]), array([[4.75, 6.25],
       [4.75, 9.25]]), array([[3.75, 9.25],
       [5.75, 9.25]]), array([[3.75      , 9.25      ],
       [3.73831028, 9.35748522],
       [3.70378771, 9.45994455],
       [3.64804653, 9.55258711],
       [3.57369314, 9.63108103],
       [3.48420422, 9.69175602],
       [3.38376417, 9.731775  ],
       [3.27706945, 9.74926671],
       [3.169109  , 9.74341326],
       [3.06493092, 9.71448836],
       [2.96940647, 9.6638445 ],
       [2.88700225, 9.59384973],
       [2.82157141, 9.50777693],
       [2.77617341, 9.40965077],
       [2.75293102, 9.30405951],
       [2.75293102, 9.19594049],
       [2.77617341, 9.09034923],
       [2.82157141, 8.99222307],
       [2.88700225, 8.90615027],
       [2.96940647, 8.8361555 ],
       [3.06493092, 8.78551164],
       [3.169109  , 8.75658674],
       [3.27706945, 8.75073329],
       [3.38376417, 8.768225  ],
       [3.48420422, 8.80824398],
       [3.57369314, 8.86891897],
       [3.64804653, 8.94741289],
       [3.70378771, 9.04005545],
       [3.73831028, 9.14251478],
       [3.75      , 9.25      ]]), array([[6.75      , 9.25      ],
       [6.73831028, 9.35748522],
       [6.70378771, 9.45994455],
       [6.64804653, 9.55258711],
       [6.57369314, 9.63108103],
       [6.48420422, 9.69175602],
       [6.38376417, 9.731775  ],
       [6.27706945, 9.74926671],
       [6.169109  , 9.74341326],
       [6.06493092, 9.71448836],
       [5.96940647, 9.6638445 ],
       [5.88700225, 9.59384973],
       [5.82157141, 9.50777693],
       [5.77617341, 9.40965077],
       [5.75293102, 9.30405951],
       [5.75293102, 9.19594049],
       [5.77617341, 9.09034923],
       [5.82157141, 8.99222307],
       [5.88700225, 8.90615027],
       [5.96940647, 8.8361555 ],
       [6.06493092, 8.78551164],
       [6.169109  , 8.75658674],
       [6.27706945, 8.75073329],
       [6.38376417, 8.768225  ],
       [6.48420422, 8.80824398],
       [6.57369314, 8.86891897],
       [6.64804653, 8.94741289],
       [6.70378771, 9.04005545],
       [6.73831028, 9.14251478],
       [6.75      , 9.25      ]]), array([[-4.75,  6.25],
       [-4.75,  9.25]]), array([[-5.75,  9.25],
       [-3.75,  9.25]]), array([[-5.75      ,  9.25      ],
       [-5.76168972,  9.35748522],
       [-5.79621229,  9.45994455],
       [-5.85195347,  9.55258711],
       [-5.92630686,  9.63108103],
       [-6.01579578,  9.69175602],
       [-6.11623583,  9.731775  ],
       [-6.22293055,  9.74926671],
       [-6.330891  ,  9.74341326],
       [-6.43506908,  9.71448836],
       [-6.53059353,  9.6638445 ],
       [-6.61299775,  9.59384973],
       [-6.67842859,  9.50777693],
       [-6.72382659,  9.40965077],
       [-6.74706898,  9.30405951],
       [-6.74706898,  9.19594049],
       [-6.72382659,  9.09034923],
       [-6.67842859,  8.99222307],
       [-6.61299775,  8.90615027],
       [-6.53059353,  8.8361555 ],
       [-6.43506908,  8.78551164],
       [-6.330891  ,  8.75658674],
       [-6.22293055,  8.75073329],
       [-6.11623583,  8.768225  ],
       [-6.01579578,  8.80824398],
       [-5.92630686,  8.86891897],
       [-5.85195347,  8.94741289],
       [-5.79621229,  9.04005545],
       [-5.76168972,  9.14251478],
       [-5.75      ,  9.25      ]]), array([[-2.75      ,  9.25      ],
       [-2.76168972,  9.35748522],
       [-2.79621229,  9.45994455],
       [-2.85195347,  9.55258711],
       [-2.92630686,  9.63108103],
       [-3.01579578,  9.69175602],
       [-3.11623583,  9.731775  ],
       [-3.22293055,  9.74926671],
       [-3.330891  ,  9.74341326],
       [-3.43506908,  9.71448836],
       [-3.53059353,  9.6638445 ],
       [-3.61299775,  9.59384973],
       [-3.67842859,  9.50777693],
       [-3.72382659,  9.40965077],
       [-3.74706898,  9.30405951],
       [-3.74706898,  9.19594049],
       [-3.72382659,  9.09034923],
       [-3.67842859,  8.99222307],
       [-3.61299775,  8.90615027],
       [-3.53059353,  8.8361555 ],
       [-3.43506908,  8.78551164],
       [-3.330891  ,  8.75658674],
       [-3.22293055,  8.75073329],
       [-3.11623583,  8.768225  ],
       [-3.01579578,  8.80824398],
       [-2.92630686,  8.86891897],
       [-2.85195347,  8.94741289],
       [-2.79621229,  9.04005545],
       [-2.76168972,  9.14251478],
       [-2.75      ,  9.25      ]])]]",29,(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 3 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (transform_matrix_scale_angle_x_y 1 0 (+ 2 0.5) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (* (- 3 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', 'antenna_lines', 'antenna_finial']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']","['0.0', '1.0', '1.5']","['1', '3.0', '1.0', '1.5', '(/ pi 2)', '1.0', '1.0']",[],"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', '0.0', '1.0', '1.5']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', 'antenna_lines', 'antenna_finial', '1', '3.0', '1.0', '1.5', '(/ pi 2)', '1.0', '1.0']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '1', '3.0', '1.0', '1.5', '(/ pi 2)', '1.0', '1.0']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-013.png
dials_context_programs_context_large_abstractions_014,dials_context_programs_train,(C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (+ 0 (* 0.5 (* 4 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),"['C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '4', 'M', '1', '0', '-', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '+', '0', '*', '0.5', '*', '4', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5']","[[array([[-8.5 ,  2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [ 8.5 , -2.25]]), array([[ 8.5 , -2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [-8.5 ,  2.25]]), array([[8.5  , 1.125],
       [9.5  , 1.125]]), array([[ 8.5  , -1.125],
       [ 9.5  , -1.125]]), array([[ 9.5  , -1.125],
       [ 9.5  ,  1.125]]), array([[ 8.5  , -1.125],
       [ 8.5  ,  1.125]]), array([[-9.5  ,  1.125],
       [-8.5  ,  1.125]]), array([[-9.5  , -1.125],
       [-8.5  , -1.125]]), array([[-8.5  , -1.125],
       [-8.5  ,  1.125]]), array([[-9.5  , -1.125],
       [-9.5  ,  1.125]]), array([[ 5.50000000e+00,  0.00000000e+00],
       [ 5.48831028e+00,  1.07485220e-01],
       [ 5.45378771e+00,  2.09944551e-01],
       [ 5.39804653e+00,  3.02587108e-01],
       [ 5.32369314e+00,  3.81081028e-01],
       [ 5.23420422e+00,  4.41756022e-01],
       [ 5.13376417e+00,  4.81774996e-01],
       [ 5.02706945e+00,  4.99266707e-01],
       [ 4.91910900e+00,  4.93413261e-01],
       [ 4.81493092e+00,  4.64488360e-01],
       [ 4.71940647e+00,  4.13844499e-01],
       [ 4.63700225e+00,  3.43849729e-01],
       [ 4.57157141e+00,  2.57776929e-01],
       [ 4.52617341e+00,  1.59650765e-01],
       [ 4.50293102e+00,  5.40595092e-02],
       [ 4.50293102e+00, -5.40595092e-02],
       [ 4.52617341e+00, -1.59650765e-01],
       [ 4.57157141e+00, -2.57776929e-01],
       [ 4.63700225e+00, -3.43849729e-01],
       [ 4.71940647e+00, -4.13844499e-01],
       [ 4.81493092e+00, -4.64488360e-01],
       [ 4.91910900e+00, -4.93413261e-01],
       [ 5.02706945e+00, -4.99266707e-01],
       [ 5.13376417e+00, -4.81774996e-01],
       [ 5.23420422e+00, -4.41756022e-01],
       [ 5.32369314e+00, -3.81081028e-01],
       [ 5.39804653e+00, -3.02587108e-01],
       [ 5.45378771e+00, -2.09944551e-01],
       [ 5.48831028e+00, -1.07485220e-01],
       [ 5.50000000e+00, -1.22464680e-16]]), array([[ 4.25, -0.75],
       [ 5.75, -0.75],
       [ 5.75,  0.75],
       [ 4.25,  0.75],
       [ 4.25, -0.75]]), array([[5., 0.],
       [5., 1.]]), array([[ 3.00000000e+00,  0.00000000e+00],
       [ 2.98831028e+00,  1.07485220e-01],
       [ 2.95378771e+00,  2.09944551e-01],
       [ 2.89804653e+00,  3.02587108e-01],
       [ 2.82369314e+00,  3.81081028e-01],
       [ 2.73420422e+00,  4.41756022e-01],
       [ 2.63376417e+00,  4.81774996e-01],
       [ 2.52706945e+00,  4.99266707e-01],
       [ 2.41910900e+00,  4.93413261e-01],
       [ 2.31493092e+00,  4.64488360e-01],
       [ 2.21940647e+00,  4.13844499e-01],
       [ 2.13700225e+00,  3.43849729e-01],
       [ 2.07157141e+00,  2.57776929e-01],
       [ 2.02617341e+00,  1.59650765e-01],
       [ 2.00293102e+00,  5.40595092e-02],
       [ 2.00293102e+00, -5.40595092e-02],
       [ 2.02617341e+00, -1.59650765e-01],
       [ 2.07157141e+00, -2.57776929e-01],
       [ 2.13700225e+00, -3.43849729e-01],
       [ 2.21940647e+00, -4.13844499e-01],
       [ 2.31493092e+00, -4.64488360e-01],
       [ 2.41910900e+00, -4.93413261e-01],
       [ 2.52706945e+00, -4.99266707e-01],
       [ 2.63376417e+00, -4.81774996e-01],
       [ 2.73420422e+00, -4.41756022e-01],
       [ 2.82369314e+00, -3.81081028e-01],
       [ 2.89804653e+00, -3.02587108e-01],
       [ 2.95378771e+00, -2.09944551e-01],
       [ 2.98831028e+00, -1.07485220e-01],
       [ 3.00000000e+00, -1.22464680e-16]]), array([[ 1.75, -0.75],
       [ 3.25, -0.75],
       [ 3.25,  0.75],
       [ 1.75,  0.75],
       [ 1.75, -0.75]]), array([[2.5, 0. ],
       [2.5, 1. ]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[-0.75, -0.75],
       [ 0.75, -0.75],
       [ 0.75,  0.75],
       [-0.75,  0.75],
       [-0.75, -0.75]]), array([[0., 0.],
       [0., 1.]]), array([[-2.00000000e+00,  0.00000000e+00],
       [-2.01168972e+00,  1.07485220e-01],
       [-2.04621229e+00,  2.09944551e-01],
       [-2.10195347e+00,  3.02587108e-01],
       [-2.17630686e+00,  3.81081028e-01],
       [-2.26579578e+00,  4.41756022e-01],
       [-2.36623583e+00,  4.81774996e-01],
       [-2.47293055e+00,  4.99266707e-01],
       [-2.58089100e+00,  4.93413261e-01],
       [-2.68506908e+00,  4.64488360e-01],
       [-2.78059353e+00,  4.13844499e-01],
       [-2.86299775e+00,  3.43849729e-01],
       [-2.92842859e+00,  2.57776929e-01],
       [-2.97382659e+00,  1.59650765e-01],
       [-2.99706898e+00,  5.40595092e-02],
       [-2.99706898e+00, -5.40595092e-02],
       [-2.97382659e+00, -1.59650765e-01],
       [-2.92842859e+00, -2.57776929e-01],
       [-2.86299775e+00, -3.43849729e-01],
       [-2.78059353e+00, -4.13844499e-01],
       [-2.68506908e+00, -4.64488360e-01],
       [-2.58089100e+00, -4.93413261e-01],
       [-2.47293055e+00, -4.99266707e-01],
       [-2.36623583e+00, -4.81774996e-01],
       [-2.26579578e+00, -4.41756022e-01],
       [-2.17630686e+00, -3.81081028e-01],
       [-2.10195347e+00, -3.02587108e-01],
       [-2.04621229e+00, -2.09944551e-01],
       [-2.01168972e+00, -1.07485220e-01],
       [-2.00000000e+00, -1.22464680e-16]]), array([[-3.25, -0.75],
       [-1.75, -0.75],
       [-1.75,  0.75],
       [-3.25,  0.75],
       [-3.25, -0.75]]), array([[-2.5,  0. ],
       [-2.5,  1. ]])]]",24,(connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (transform_matrix 1 0 (- 0 (+ 2 0.5)) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (+ 0 (* 0.5 (* 4 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),(connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 2 0.5)) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (+ 0 (* 0.5 (* 4 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand']","['all_base_strokes', 'row_of_dials']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5)))']","['0.0', '1.0', '1.5']","['1', '4.0', '1.0', '1.5', '(/ pi 2)']",[],"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', '0.0', '1.0', '1.5']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', '1', '4.0', '1.0', '1.5', '(/ pi 2)']","['all_base_strokes', 'row_of_dials']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '1', '4.0', '1.0', '1.5', '(/ pi 2)']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5)))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-014.png
dials_context_programs_context_large_abstractions_015,dials_context_programs_train,(C (C (C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (+ 0 (* 0.5 (* 4 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['C', 'C', 'C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '4', 'M', '1', '0', '-', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '+', '0', '*', '0.5', '*', '4', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '*', '+', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '*', '2', '0.5', '0.25', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '-', '0', '*', '+', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '*', '2', '0.5', '0.25', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5 ,  2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [ 8.5 , -2.25]]), array([[ 8.5 , -2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [-8.5 ,  2.25]]), array([[8.5  , 1.125],
       [9.5  , 1.125]]), array([[ 8.5  , -1.125],
       [ 9.5  , -1.125]]), array([[ 9.5  , -1.125],
       [ 9.5  ,  1.125]]), array([[ 8.5  , -1.125],
       [ 8.5  ,  1.125]]), array([[-9.5  ,  1.125],
       [-8.5  ,  1.125]]), array([[-9.5  , -1.125],
       [-8.5  , -1.125]]), array([[-8.5  , -1.125],
       [-8.5  ,  1.125]]), array([[-9.5  , -1.125],
       [-9.5  ,  1.125]]), array([[ 5.50000000e+00,  0.00000000e+00],
       [ 5.48831028e+00,  1.07485220e-01],
       [ 5.45378771e+00,  2.09944551e-01],
       [ 5.39804653e+00,  3.02587108e-01],
       [ 5.32369314e+00,  3.81081028e-01],
       [ 5.23420422e+00,  4.41756022e-01],
       [ 5.13376417e+00,  4.81774996e-01],
       [ 5.02706945e+00,  4.99266707e-01],
       [ 4.91910900e+00,  4.93413261e-01],
       [ 4.81493092e+00,  4.64488360e-01],
       [ 4.71940647e+00,  4.13844499e-01],
       [ 4.63700225e+00,  3.43849729e-01],
       [ 4.57157141e+00,  2.57776929e-01],
       [ 4.52617341e+00,  1.59650765e-01],
       [ 4.50293102e+00,  5.40595092e-02],
       [ 4.50293102e+00, -5.40595092e-02],
       [ 4.52617341e+00, -1.59650765e-01],
       [ 4.57157141e+00, -2.57776929e-01],
       [ 4.63700225e+00, -3.43849729e-01],
       [ 4.71940647e+00, -4.13844499e-01],
       [ 4.81493092e+00, -4.64488360e-01],
       [ 4.91910900e+00, -4.93413261e-01],
       [ 5.02706945e+00, -4.99266707e-01],
       [ 5.13376417e+00, -4.81774996e-01],
       [ 5.23420422e+00, -4.41756022e-01],
       [ 5.32369314e+00, -3.81081028e-01],
       [ 5.39804653e+00, -3.02587108e-01],
       [ 5.45378771e+00, -2.09944551e-01],
       [ 5.48831028e+00, -1.07485220e-01],
       [ 5.50000000e+00, -1.22464680e-16]]), array([[ 4.25, -0.75],
       [ 5.75, -0.75],
       [ 5.75,  0.75],
       [ 4.25,  0.75],
       [ 4.25, -0.75]]), array([[5., 0.],
       [5., 1.]]), array([[ 3.00000000e+00,  0.00000000e+00],
       [ 2.98831028e+00,  1.07485220e-01],
       [ 2.95378771e+00,  2.09944551e-01],
       [ 2.89804653e+00,  3.02587108e-01],
       [ 2.82369314e+00,  3.81081028e-01],
       [ 2.73420422e+00,  4.41756022e-01],
       [ 2.63376417e+00,  4.81774996e-01],
       [ 2.52706945e+00,  4.99266707e-01],
       [ 2.41910900e+00,  4.93413261e-01],
       [ 2.31493092e+00,  4.64488360e-01],
       [ 2.21940647e+00,  4.13844499e-01],
       [ 2.13700225e+00,  3.43849729e-01],
       [ 2.07157141e+00,  2.57776929e-01],
       [ 2.02617341e+00,  1.59650765e-01],
       [ 2.00293102e+00,  5.40595092e-02],
       [ 2.00293102e+00, -5.40595092e-02],
       [ 2.02617341e+00, -1.59650765e-01],
       [ 2.07157141e+00, -2.57776929e-01],
       [ 2.13700225e+00, -3.43849729e-01],
       [ 2.21940647e+00, -4.13844499e-01],
       [ 2.31493092e+00, -4.64488360e-01],
       [ 2.41910900e+00, -4.93413261e-01],
       [ 2.52706945e+00, -4.99266707e-01],
       [ 2.63376417e+00, -4.81774996e-01],
       [ 2.73420422e+00, -4.41756022e-01],
       [ 2.82369314e+00, -3.81081028e-01],
       [ 2.89804653e+00, -3.02587108e-01],
       [ 2.95378771e+00, -2.09944551e-01],
       [ 2.98831028e+00, -1.07485220e-01],
       [ 3.00000000e+00, -1.22464680e-16]]), array([[ 1.75, -0.75],
       [ 3.25, -0.75],
       [ 3.25,  0.75],
       [ 1.75,  0.75],
       [ 1.75, -0.75]]), array([[2.5, 0. ],
       [2.5, 1. ]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[-0.75, -0.75],
       [ 0.75, -0.75],
       [ 0.75,  0.75],
       [-0.75,  0.75],
       [-0.75, -0.75]]), array([[0., 0.],
       [0., 1.]]), array([[-2.00000000e+00,  0.00000000e+00],
       [-2.01168972e+00,  1.07485220e-01],
       [-2.04621229e+00,  2.09944551e-01],
       [-2.10195347e+00,  3.02587108e-01],
       [-2.17630686e+00,  3.81081028e-01],
       [-2.26579578e+00,  4.41756022e-01],
       [-2.36623583e+00,  4.81774996e-01],
       [-2.47293055e+00,  4.99266707e-01],
       [-2.58089100e+00,  4.93413261e-01],
       [-2.68506908e+00,  4.64488360e-01],
       [-2.78059353e+00,  4.13844499e-01],
       [-2.86299775e+00,  3.43849729e-01],
       [-2.92842859e+00,  2.57776929e-01],
       [-2.97382659e+00,  1.59650765e-01],
       [-2.99706898e+00,  5.40595092e-02],
       [-2.99706898e+00, -5.40595092e-02],
       [-2.97382659e+00, -1.59650765e-01],
       [-2.92842859e+00, -2.57776929e-01],
       [-2.86299775e+00, -3.43849729e-01],
       [-2.78059353e+00, -4.13844499e-01],
       [-2.68506908e+00, -4.64488360e-01],
       [-2.58089100e+00, -4.93413261e-01],
       [-2.47293055e+00, -4.99266707e-01],
       [-2.36623583e+00, -4.81774996e-01],
       [-2.26579578e+00, -4.41756022e-01],
       [-2.17630686e+00, -3.81081028e-01],
       [-2.10195347e+00, -3.02587108e-01],
       [-2.04621229e+00, -2.09944551e-01],
       [-2.01168972e+00, -1.07485220e-01],
       [-2.00000000e+00, -1.22464680e-16]]), array([[-3.25, -0.75],
       [-1.75, -0.75],
       [-1.75,  0.75],
       [-3.25,  0.75],
       [-3.25, -0.75]]), array([[-2.5,  0. ],
       [-2.5,  1. ]]), array([[4.75, 2.25],
       [4.75, 5.25]]), array([[3.75, 5.25],
       [5.75, 5.25]]), array([[3.75      , 5.25      ],
       [3.73831028, 5.35748522],
       [3.70378771, 5.45994455],
       [3.64804653, 5.55258711],
       [3.57369314, 5.63108103],
       [3.48420422, 5.69175602],
       [3.38376417, 5.731775  ],
       [3.27706945, 5.74926671],
       [3.169109  , 5.74341326],
       [3.06493092, 5.71448836],
       [2.96940647, 5.6638445 ],
       [2.88700225, 5.59384973],
       [2.82157141, 5.50777693],
       [2.77617341, 5.40965077],
       [2.75293102, 5.30405951],
       [2.75293102, 5.19594049],
       [2.77617341, 5.09034923],
       [2.82157141, 4.99222307],
       [2.88700225, 4.90615027],
       [2.96940647, 4.8361555 ],
       [3.06493092, 4.78551164],
       [3.169109  , 4.75658674],
       [3.27706945, 4.75073329],
       [3.38376417, 4.768225  ],
       [3.48420422, 4.80824398],
       [3.57369314, 4.86891897],
       [3.64804653, 4.94741289],
       [3.70378771, 5.04005545],
       [3.73831028, 5.14251478],
       [3.75      , 5.25      ]]), array([[6.75      , 5.25      ],
       [6.73831028, 5.35748522],
       [6.70378771, 5.45994455],
       [6.64804653, 5.55258711],
       [6.57369314, 5.63108103],
       [6.48420422, 5.69175602],
       [6.38376417, 5.731775  ],
       [6.27706945, 5.74926671],
       [6.169109  , 5.74341326],
       [6.06493092, 5.71448836],
       [5.96940647, 5.6638445 ],
       [5.88700225, 5.59384973],
       [5.82157141, 5.50777693],
       [5.77617341, 5.40965077],
       [5.75293102, 5.30405951],
       [5.75293102, 5.19594049],
       [5.77617341, 5.09034923],
       [5.82157141, 4.99222307],
       [5.88700225, 4.90615027],
       [5.96940647, 4.8361555 ],
       [6.06493092, 4.78551164],
       [6.169109  , 4.75658674],
       [6.27706945, 4.75073329],
       [6.38376417, 4.768225  ],
       [6.48420422, 4.80824398],
       [6.57369314, 4.86891897],
       [6.64804653, 4.94741289],
       [6.70378771, 5.04005545],
       [6.73831028, 5.14251478],
       [6.75      , 5.25      ]]), array([[-4.75,  2.25],
       [-4.75,  5.25]]), array([[-5.75,  5.25],
       [-3.75,  5.25]]), array([[-5.75      ,  5.25      ],
       [-5.76168972,  5.35748522],
       [-5.79621229,  5.45994455],
       [-5.85195347,  5.55258711],
       [-5.92630686,  5.63108103],
       [-6.01579578,  5.69175602],
       [-6.11623583,  5.731775  ],
       [-6.22293055,  5.74926671],
       [-6.330891  ,  5.74341326],
       [-6.43506908,  5.71448836],
       [-6.53059353,  5.6638445 ],
       [-6.61299775,  5.59384973],
       [-6.67842859,  5.50777693],
       [-6.72382659,  5.40965077],
       [-6.74706898,  5.30405951],
       [-6.74706898,  5.19594049],
       [-6.72382659,  5.09034923],
       [-6.67842859,  4.99222307],
       [-6.61299775,  4.90615027],
       [-6.53059353,  4.8361555 ],
       [-6.43506908,  4.78551164],
       [-6.330891  ,  4.75658674],
       [-6.22293055,  4.75073329],
       [-6.11623583,  4.768225  ],
       [-6.01579578,  4.80824398],
       [-5.92630686,  4.86891897],
       [-5.85195347,  4.94741289],
       [-5.79621229,  5.04005545],
       [-5.76168972,  5.14251478],
       [-5.75      ,  5.25      ]]), array([[-2.75      ,  5.25      ],
       [-2.76168972,  5.35748522],
       [-2.79621229,  5.45994455],
       [-2.85195347,  5.55258711],
       [-2.92630686,  5.63108103],
       [-3.01579578,  5.69175602],
       [-3.11623583,  5.731775  ],
       [-3.22293055,  5.74926671],
       [-3.330891  ,  5.74341326],
       [-3.43506908,  5.71448836],
       [-3.53059353,  5.6638445 ],
       [-3.61299775,  5.59384973],
       [-3.67842859,  5.50777693],
       [-3.72382659,  5.40965077],
       [-3.74706898,  5.30405951],
       [-3.74706898,  5.19594049],
       [-3.72382659,  5.09034923],
       [-3.67842859,  4.99222307],
       [-3.61299775,  4.90615027],
       [-3.53059353,  4.8361555 ],
       [-3.43506908,  4.78551164],
       [-3.330891  ,  4.75658674],
       [-3.22293055,  4.75073329],
       [-3.11623583,  4.768225  ],
       [-3.01579578,  4.80824398],
       [-2.92630686,  4.86891897],
       [-2.85195347,  4.94741289],
       [-2.79621229,  5.04005545],
       [-2.76168972,  5.14251478],
       [-2.75      ,  5.25      ]])]]",32,(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (transform_matrix 1 0 (- 0 (+ 2 0.5)) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (+ 0 (* 0.5 (* 4 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 2 0.5)) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (+ 0 (* 0.5 (* 4 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', 'antenna_lines', 'antenna_finial']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']","['0.0', '1.0', '1.5']","['1', '4.0', '1.0', '1.5', '(/ pi 2)', '1.0', '1.0']",[],"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', '0.0', '1.0', '1.5']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', 'antenna_lines', 'antenna_finial', '1', '4.0', '1.0', '1.5', '(/ pi 2)', '1.0', '1.0']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '1', '4.0', '1.0', '1.5', '(/ pi 2)', '1.0', '1.0']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-015.png
dials_context_programs_context_large_abstractions_016,dials_context_programs_train,(C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (+ 0 (* 0.5 (* 4 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),"['C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '4', 'M', '1', '0', '-', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '+', '0', '*', '0.5', '*', '4', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5']","[[array([[-8.5 ,  6.25],
       [ 8.5 ,  6.25]]), array([[-8.5 , -6.25],
       [ 8.5 , -6.25]]), array([[ 8.5 , -6.25],
       [ 8.5 ,  6.25]]), array([[-8.5 , -6.25],
       [-8.5 ,  6.25]]), array([[8.5  , 3.125],
       [9.5  , 3.125]]), array([[ 8.5  , -3.125],
       [ 9.5  , -3.125]]), array([[ 9.5  , -3.125],
       [ 9.5  ,  3.125]]), array([[ 8.5  , -3.125],
       [ 8.5  ,  3.125]]), array([[-9.5  ,  3.125],
       [-8.5  ,  3.125]]), array([[-9.5  , -3.125],
       [-8.5  , -3.125]]), array([[-8.5  , -3.125],
       [-8.5  ,  3.125]]), array([[-9.5  , -3.125],
       [-9.5  ,  3.125]]), array([[ 5.50000000e+00,  0.00000000e+00],
       [ 5.48831028e+00,  1.07485220e-01],
       [ 5.45378771e+00,  2.09944551e-01],
       [ 5.39804653e+00,  3.02587108e-01],
       [ 5.32369314e+00,  3.81081028e-01],
       [ 5.23420422e+00,  4.41756022e-01],
       [ 5.13376417e+00,  4.81774996e-01],
       [ 5.02706945e+00,  4.99266707e-01],
       [ 4.91910900e+00,  4.93413261e-01],
       [ 4.81493092e+00,  4.64488360e-01],
       [ 4.71940647e+00,  4.13844499e-01],
       [ 4.63700225e+00,  3.43849729e-01],
       [ 4.57157141e+00,  2.57776929e-01],
       [ 4.52617341e+00,  1.59650765e-01],
       [ 4.50293102e+00,  5.40595092e-02],
       [ 4.50293102e+00, -5.40595092e-02],
       [ 4.52617341e+00, -1.59650765e-01],
       [ 4.57157141e+00, -2.57776929e-01],
       [ 4.63700225e+00, -3.43849729e-01],
       [ 4.71940647e+00, -4.13844499e-01],
       [ 4.81493092e+00, -4.64488360e-01],
       [ 4.91910900e+00, -4.93413261e-01],
       [ 5.02706945e+00, -4.99266707e-01],
       [ 5.13376417e+00, -4.81774996e-01],
       [ 5.23420422e+00, -4.41756022e-01],
       [ 5.32369314e+00, -3.81081028e-01],
       [ 5.39804653e+00, -3.02587108e-01],
       [ 5.45378771e+00, -2.09944551e-01],
       [ 5.48831028e+00, -1.07485220e-01],
       [ 5.50000000e+00, -1.22464680e-16]]), array([[ 4.25, -0.75],
       [ 5.75, -0.75],
       [ 5.75,  0.75],
       [ 4.25,  0.75],
       [ 4.25, -0.75]]), array([[5., 0.],
       [5., 1.]]), array([[ 3.00000000e+00,  0.00000000e+00],
       [ 2.98831028e+00,  1.07485220e-01],
       [ 2.95378771e+00,  2.09944551e-01],
       [ 2.89804653e+00,  3.02587108e-01],
       [ 2.82369314e+00,  3.81081028e-01],
       [ 2.73420422e+00,  4.41756022e-01],
       [ 2.63376417e+00,  4.81774996e-01],
       [ 2.52706945e+00,  4.99266707e-01],
       [ 2.41910900e+00,  4.93413261e-01],
       [ 2.31493092e+00,  4.64488360e-01],
       [ 2.21940647e+00,  4.13844499e-01],
       [ 2.13700225e+00,  3.43849729e-01],
       [ 2.07157141e+00,  2.57776929e-01],
       [ 2.02617341e+00,  1.59650765e-01],
       [ 2.00293102e+00,  5.40595092e-02],
       [ 2.00293102e+00, -5.40595092e-02],
       [ 2.02617341e+00, -1.59650765e-01],
       [ 2.07157141e+00, -2.57776929e-01],
       [ 2.13700225e+00, -3.43849729e-01],
       [ 2.21940647e+00, -4.13844499e-01],
       [ 2.31493092e+00, -4.64488360e-01],
       [ 2.41910900e+00, -4.93413261e-01],
       [ 2.52706945e+00, -4.99266707e-01],
       [ 2.63376417e+00, -4.81774996e-01],
       [ 2.73420422e+00, -4.41756022e-01],
       [ 2.82369314e+00, -3.81081028e-01],
       [ 2.89804653e+00, -3.02587108e-01],
       [ 2.95378771e+00, -2.09944551e-01],
       [ 2.98831028e+00, -1.07485220e-01],
       [ 3.00000000e+00, -1.22464680e-16]]), array([[ 1.75, -0.75],
       [ 3.25, -0.75],
       [ 3.25,  0.75],
       [ 1.75,  0.75],
       [ 1.75, -0.75]]), array([[2.5, 0. ],
       [2.5, 1. ]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[-0.75, -0.75],
       [ 0.75, -0.75],
       [ 0.75,  0.75],
       [-0.75,  0.75],
       [-0.75, -0.75]]), array([[0., 0.],
       [0., 1.]]), array([[-2.00000000e+00,  0.00000000e+00],
       [-2.01168972e+00,  1.07485220e-01],
       [-2.04621229e+00,  2.09944551e-01],
       [-2.10195347e+00,  3.02587108e-01],
       [-2.17630686e+00,  3.81081028e-01],
       [-2.26579578e+00,  4.41756022e-01],
       [-2.36623583e+00,  4.81774996e-01],
       [-2.47293055e+00,  4.99266707e-01],
       [-2.58089100e+00,  4.93413261e-01],
       [-2.68506908e+00,  4.64488360e-01],
       [-2.78059353e+00,  4.13844499e-01],
       [-2.86299775e+00,  3.43849729e-01],
       [-2.92842859e+00,  2.57776929e-01],
       [-2.97382659e+00,  1.59650765e-01],
       [-2.99706898e+00,  5.40595092e-02],
       [-2.99706898e+00, -5.40595092e-02],
       [-2.97382659e+00, -1.59650765e-01],
       [-2.92842859e+00, -2.57776929e-01],
       [-2.86299775e+00, -3.43849729e-01],
       [-2.78059353e+00, -4.13844499e-01],
       [-2.68506908e+00, -4.64488360e-01],
       [-2.58089100e+00, -4.93413261e-01],
       [-2.47293055e+00, -4.99266707e-01],
       [-2.36623583e+00, -4.81774996e-01],
       [-2.26579578e+00, -4.41756022e-01],
       [-2.17630686e+00, -3.81081028e-01],
       [-2.10195347e+00, -3.02587108e-01],
       [-2.04621229e+00, -2.09944551e-01],
       [-2.01168972e+00, -1.07485220e-01],
       [-2.00000000e+00, -1.22464680e-16]]), array([[-3.25, -0.75],
       [-1.75, -0.75],
       [-1.75,  0.75],
       [-3.25,  0.75],
       [-3.25, -0.75]]), array([[-2.5,  0. ],
       [-2.5,  1. ]])]]",24,(connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (transform_matrix 1 0 (- 0 (+ 2 0.5)) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (+ 0 (* 0.5 (* 4 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),(connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 2 0.5)) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (+ 0 (* 0.5 (* 4 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand']","['all_base_strokes', 'row_of_dials']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5)))']","['0.0', '1.0', '1.5']","['1', '4.0', '1.0', '1.5', '(/ pi 2)']",[],"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', '0.0', '1.0', '1.5']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', '1', '4.0', '1.0', '1.5', '(/ pi 2)']","['all_base_strokes', 'row_of_dials']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '1', '4.0', '1.0', '1.5', '(/ pi 2)']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5)))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-016.png
dials_context_programs_context_large_abstractions_017,dials_context_programs_train,(C (C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (+ 0 (* 0.5 (* 4 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['C', 'C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '4', 'M', '1', '0', '-', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '+', '0', '*', '0.5', '*', '4', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '0', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5 ,  6.25],
       [ 8.5 ,  6.25]]), array([[-8.5 , -6.25],
       [ 8.5 , -6.25]]), array([[ 8.5 , -6.25],
       [ 8.5 ,  6.25]]), array([[-8.5 , -6.25],
       [-8.5 ,  6.25]]), array([[8.5  , 3.125],
       [9.5  , 3.125]]), array([[ 8.5  , -3.125],
       [ 9.5  , -3.125]]), array([[ 9.5  , -3.125],
       [ 9.5  ,  3.125]]), array([[ 8.5  , -3.125],
       [ 8.5  ,  3.125]]), array([[-9.5  ,  3.125],
       [-8.5  ,  3.125]]), array([[-9.5  , -3.125],
       [-8.5  , -3.125]]), array([[-8.5  , -3.125],
       [-8.5  ,  3.125]]), array([[-9.5  , -3.125],
       [-9.5  ,  3.125]]), array([[ 5.50000000e+00,  0.00000000e+00],
       [ 5.48831028e+00,  1.07485220e-01],
       [ 5.45378771e+00,  2.09944551e-01],
       [ 5.39804653e+00,  3.02587108e-01],
       [ 5.32369314e+00,  3.81081028e-01],
       [ 5.23420422e+00,  4.41756022e-01],
       [ 5.13376417e+00,  4.81774996e-01],
       [ 5.02706945e+00,  4.99266707e-01],
       [ 4.91910900e+00,  4.93413261e-01],
       [ 4.81493092e+00,  4.64488360e-01],
       [ 4.71940647e+00,  4.13844499e-01],
       [ 4.63700225e+00,  3.43849729e-01],
       [ 4.57157141e+00,  2.57776929e-01],
       [ 4.52617341e+00,  1.59650765e-01],
       [ 4.50293102e+00,  5.40595092e-02],
       [ 4.50293102e+00, -5.40595092e-02],
       [ 4.52617341e+00, -1.59650765e-01],
       [ 4.57157141e+00, -2.57776929e-01],
       [ 4.63700225e+00, -3.43849729e-01],
       [ 4.71940647e+00, -4.13844499e-01],
       [ 4.81493092e+00, -4.64488360e-01],
       [ 4.91910900e+00, -4.93413261e-01],
       [ 5.02706945e+00, -4.99266707e-01],
       [ 5.13376417e+00, -4.81774996e-01],
       [ 5.23420422e+00, -4.41756022e-01],
       [ 5.32369314e+00, -3.81081028e-01],
       [ 5.39804653e+00, -3.02587108e-01],
       [ 5.45378771e+00, -2.09944551e-01],
       [ 5.48831028e+00, -1.07485220e-01],
       [ 5.50000000e+00, -1.22464680e-16]]), array([[ 4.25, -0.75],
       [ 5.75, -0.75],
       [ 5.75,  0.75],
       [ 4.25,  0.75],
       [ 4.25, -0.75]]), array([[5., 0.],
       [5., 1.]]), array([[ 3.00000000e+00,  0.00000000e+00],
       [ 2.98831028e+00,  1.07485220e-01],
       [ 2.95378771e+00,  2.09944551e-01],
       [ 2.89804653e+00,  3.02587108e-01],
       [ 2.82369314e+00,  3.81081028e-01],
       [ 2.73420422e+00,  4.41756022e-01],
       [ 2.63376417e+00,  4.81774996e-01],
       [ 2.52706945e+00,  4.99266707e-01],
       [ 2.41910900e+00,  4.93413261e-01],
       [ 2.31493092e+00,  4.64488360e-01],
       [ 2.21940647e+00,  4.13844499e-01],
       [ 2.13700225e+00,  3.43849729e-01],
       [ 2.07157141e+00,  2.57776929e-01],
       [ 2.02617341e+00,  1.59650765e-01],
       [ 2.00293102e+00,  5.40595092e-02],
       [ 2.00293102e+00, -5.40595092e-02],
       [ 2.02617341e+00, -1.59650765e-01],
       [ 2.07157141e+00, -2.57776929e-01],
       [ 2.13700225e+00, -3.43849729e-01],
       [ 2.21940647e+00, -4.13844499e-01],
       [ 2.31493092e+00, -4.64488360e-01],
       [ 2.41910900e+00, -4.93413261e-01],
       [ 2.52706945e+00, -4.99266707e-01],
       [ 2.63376417e+00, -4.81774996e-01],
       [ 2.73420422e+00, -4.41756022e-01],
       [ 2.82369314e+00, -3.81081028e-01],
       [ 2.89804653e+00, -3.02587108e-01],
       [ 2.95378771e+00, -2.09944551e-01],
       [ 2.98831028e+00, -1.07485220e-01],
       [ 3.00000000e+00, -1.22464680e-16]]), array([[ 1.75, -0.75],
       [ 3.25, -0.75],
       [ 3.25,  0.75],
       [ 1.75,  0.75],
       [ 1.75, -0.75]]), array([[2.5, 0. ],
       [2.5, 1. ]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[-0.75, -0.75],
       [ 0.75, -0.75],
       [ 0.75,  0.75],
       [-0.75,  0.75],
       [-0.75, -0.75]]), array([[0., 0.],
       [0., 1.]]), array([[-2.00000000e+00,  0.00000000e+00],
       [-2.01168972e+00,  1.07485220e-01],
       [-2.04621229e+00,  2.09944551e-01],
       [-2.10195347e+00,  3.02587108e-01],
       [-2.17630686e+00,  3.81081028e-01],
       [-2.26579578e+00,  4.41756022e-01],
       [-2.36623583e+00,  4.81774996e-01],
       [-2.47293055e+00,  4.99266707e-01],
       [-2.58089100e+00,  4.93413261e-01],
       [-2.68506908e+00,  4.64488360e-01],
       [-2.78059353e+00,  4.13844499e-01],
       [-2.86299775e+00,  3.43849729e-01],
       [-2.92842859e+00,  2.57776929e-01],
       [-2.97382659e+00,  1.59650765e-01],
       [-2.99706898e+00,  5.40595092e-02],
       [-2.99706898e+00, -5.40595092e-02],
       [-2.97382659e+00, -1.59650765e-01],
       [-2.92842859e+00, -2.57776929e-01],
       [-2.86299775e+00, -3.43849729e-01],
       [-2.78059353e+00, -4.13844499e-01],
       [-2.68506908e+00, -4.64488360e-01],
       [-2.58089100e+00, -4.93413261e-01],
       [-2.47293055e+00, -4.99266707e-01],
       [-2.36623583e+00, -4.81774996e-01],
       [-2.26579578e+00, -4.41756022e-01],
       [-2.17630686e+00, -3.81081028e-01],
       [-2.10195347e+00, -3.02587108e-01],
       [-2.04621229e+00, -2.09944551e-01],
       [-2.01168972e+00, -1.07485220e-01],
       [-2.00000000e+00, -1.22464680e-16]]), array([[-3.25, -0.75],
       [-1.75, -0.75],
       [-1.75,  0.75],
       [-3.25,  0.75],
       [-3.25, -0.75]]), array([[-2.5,  0. ],
       [-2.5,  1. ]]), array([[0.0000000e+00, 6.2500000e+00],
       [1.8369702e-16, 9.2500000e+00]]), array([[-1.  ,  9.25],
       [ 1.  ,  9.25]]), array([[-1.        ,  9.25      ],
       [-1.01168972,  9.35748522],
       [-1.04621229,  9.45994455],
       [-1.10195347,  9.55258711],
       [-1.17630686,  9.63108103],
       [-1.26579578,  9.69175602],
       [-1.36623583,  9.731775  ],
       [-1.47293055,  9.74926671],
       [-1.580891  ,  9.74341326],
       [-1.68506908,  9.71448836],
       [-1.78059353,  9.6638445 ],
       [-1.86299775,  9.59384973],
       [-1.92842859,  9.50777693],
       [-1.97382659,  9.40965077],
       [-1.99706898,  9.30405951],
       [-1.99706898,  9.19594049],
       [-1.97382659,  9.09034923],
       [-1.92842859,  8.99222307],
       [-1.86299775,  8.90615027],
       [-1.78059353,  8.8361555 ],
       [-1.68506908,  8.78551164],
       [-1.580891  ,  8.75658674],
       [-1.47293055,  8.75073329],
       [-1.36623583,  8.768225  ],
       [-1.26579578,  8.80824398],
       [-1.17630686,  8.86891897],
       [-1.10195347,  8.94741289],
       [-1.04621229,  9.04005545],
       [-1.01168972,  9.14251478],
       [-1.        ,  9.25      ]]), array([[2.        , 9.25      ],
       [1.98831028, 9.35748522],
       [1.95378771, 9.45994455],
       [1.89804653, 9.55258711],
       [1.82369314, 9.63108103],
       [1.73420422, 9.69175602],
       [1.63376417, 9.731775  ],
       [1.52706945, 9.74926671],
       [1.419109  , 9.74341326],
       [1.31493092, 9.71448836],
       [1.21940647, 9.6638445 ],
       [1.13700225, 9.59384973],
       [1.07157141, 9.50777693],
       [1.02617341, 9.40965077],
       [1.00293102, 9.30405951],
       [1.00293102, 9.19594049],
       [1.02617341, 9.09034923],
       [1.07157141, 8.99222307],
       [1.13700225, 8.90615027],
       [1.21940647, 8.8361555 ],
       [1.31493092, 8.78551164],
       [1.419109  , 8.75658674],
       [1.52706945, 8.75073329],
       [1.63376417, 8.768225  ],
       [1.73420422, 8.80824398],
       [1.82369314, 8.86891897],
       [1.89804653, 8.94741289],
       [1.95378771, 9.04005545],
       [1.98831028, 9.14251478],
       [2.        , 9.25      ]])]]",28,(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (transform_matrix 1 0 (- 0 (+ 2 0.5)) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (+ 0 (* 0.5 (* 4 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),(connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 2 0.5)) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (+ 0 (* 0.5 (* 4 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial']","['all_base_strokes', 'row_of_dials', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']","['0.0', '1.0', '1.5']","['1', '4.0', '1.0', '1.5', '(/ pi 2)', '1.0']",[],"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', '0.0', '1.0', '1.5']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', '1', '4.0', '1.0', '1.5', '(/ pi 2)', '1.0']","['all_base_strokes', 'row_of_dials', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '1', '4.0', '1.0', '1.5', '(/ pi 2)', '1.0']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-017.png
dials_context_programs_context_large_abstractions_018,dials_context_programs_train,(C (C (C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (+ 0 (* 0.5 (* 4 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['C', 'C', 'C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '4', 'M', '1', '0', '-', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '+', '0', '*', '0.5', '*', '4', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '*', '+', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '*', '2', '0.5', '0.25', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '-', '0', '*', '+', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '*', '2', '0.5', '0.25', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5 ,  6.25],
       [ 8.5 ,  6.25]]), array([[-8.5 , -6.25],
       [ 8.5 , -6.25]]), array([[ 8.5 , -6.25],
       [ 8.5 ,  6.25]]), array([[-8.5 , -6.25],
       [-8.5 ,  6.25]]), array([[8.5  , 3.125],
       [9.5  , 3.125]]), array([[ 8.5  , -3.125],
       [ 9.5  , -3.125]]), array([[ 9.5  , -3.125],
       [ 9.5  ,  3.125]]), array([[ 8.5  , -3.125],
       [ 8.5  ,  3.125]]), array([[-9.5  ,  3.125],
       [-8.5  ,  3.125]]), array([[-9.5  , -3.125],
       [-8.5  , -3.125]]), array([[-8.5  , -3.125],
       [-8.5  ,  3.125]]), array([[-9.5  , -3.125],
       [-9.5  ,  3.125]]), array([[ 5.50000000e+00,  0.00000000e+00],
       [ 5.48831028e+00,  1.07485220e-01],
       [ 5.45378771e+00,  2.09944551e-01],
       [ 5.39804653e+00,  3.02587108e-01],
       [ 5.32369314e+00,  3.81081028e-01],
       [ 5.23420422e+00,  4.41756022e-01],
       [ 5.13376417e+00,  4.81774996e-01],
       [ 5.02706945e+00,  4.99266707e-01],
       [ 4.91910900e+00,  4.93413261e-01],
       [ 4.81493092e+00,  4.64488360e-01],
       [ 4.71940647e+00,  4.13844499e-01],
       [ 4.63700225e+00,  3.43849729e-01],
       [ 4.57157141e+00,  2.57776929e-01],
       [ 4.52617341e+00,  1.59650765e-01],
       [ 4.50293102e+00,  5.40595092e-02],
       [ 4.50293102e+00, -5.40595092e-02],
       [ 4.52617341e+00, -1.59650765e-01],
       [ 4.57157141e+00, -2.57776929e-01],
       [ 4.63700225e+00, -3.43849729e-01],
       [ 4.71940647e+00, -4.13844499e-01],
       [ 4.81493092e+00, -4.64488360e-01],
       [ 4.91910900e+00, -4.93413261e-01],
       [ 5.02706945e+00, -4.99266707e-01],
       [ 5.13376417e+00, -4.81774996e-01],
       [ 5.23420422e+00, -4.41756022e-01],
       [ 5.32369314e+00, -3.81081028e-01],
       [ 5.39804653e+00, -3.02587108e-01],
       [ 5.45378771e+00, -2.09944551e-01],
       [ 5.48831028e+00, -1.07485220e-01],
       [ 5.50000000e+00, -1.22464680e-16]]), array([[ 4.25, -0.75],
       [ 5.75, -0.75],
       [ 5.75,  0.75],
       [ 4.25,  0.75],
       [ 4.25, -0.75]]), array([[5., 0.],
       [5., 1.]]), array([[ 3.00000000e+00,  0.00000000e+00],
       [ 2.98831028e+00,  1.07485220e-01],
       [ 2.95378771e+00,  2.09944551e-01],
       [ 2.89804653e+00,  3.02587108e-01],
       [ 2.82369314e+00,  3.81081028e-01],
       [ 2.73420422e+00,  4.41756022e-01],
       [ 2.63376417e+00,  4.81774996e-01],
       [ 2.52706945e+00,  4.99266707e-01],
       [ 2.41910900e+00,  4.93413261e-01],
       [ 2.31493092e+00,  4.64488360e-01],
       [ 2.21940647e+00,  4.13844499e-01],
       [ 2.13700225e+00,  3.43849729e-01],
       [ 2.07157141e+00,  2.57776929e-01],
       [ 2.02617341e+00,  1.59650765e-01],
       [ 2.00293102e+00,  5.40595092e-02],
       [ 2.00293102e+00, -5.40595092e-02],
       [ 2.02617341e+00, -1.59650765e-01],
       [ 2.07157141e+00, -2.57776929e-01],
       [ 2.13700225e+00, -3.43849729e-01],
       [ 2.21940647e+00, -4.13844499e-01],
       [ 2.31493092e+00, -4.64488360e-01],
       [ 2.41910900e+00, -4.93413261e-01],
       [ 2.52706945e+00, -4.99266707e-01],
       [ 2.63376417e+00, -4.81774996e-01],
       [ 2.73420422e+00, -4.41756022e-01],
       [ 2.82369314e+00, -3.81081028e-01],
       [ 2.89804653e+00, -3.02587108e-01],
       [ 2.95378771e+00, -2.09944551e-01],
       [ 2.98831028e+00, -1.07485220e-01],
       [ 3.00000000e+00, -1.22464680e-16]]), array([[ 1.75, -0.75],
       [ 3.25, -0.75],
       [ 3.25,  0.75],
       [ 1.75,  0.75],
       [ 1.75, -0.75]]), array([[2.5, 0. ],
       [2.5, 1. ]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[-0.75, -0.75],
       [ 0.75, -0.75],
       [ 0.75,  0.75],
       [-0.75,  0.75],
       [-0.75, -0.75]]), array([[0., 0.],
       [0., 1.]]), array([[-2.00000000e+00,  0.00000000e+00],
       [-2.01168972e+00,  1.07485220e-01],
       [-2.04621229e+00,  2.09944551e-01],
       [-2.10195347e+00,  3.02587108e-01],
       [-2.17630686e+00,  3.81081028e-01],
       [-2.26579578e+00,  4.41756022e-01],
       [-2.36623583e+00,  4.81774996e-01],
       [-2.47293055e+00,  4.99266707e-01],
       [-2.58089100e+00,  4.93413261e-01],
       [-2.68506908e+00,  4.64488360e-01],
       [-2.78059353e+00,  4.13844499e-01],
       [-2.86299775e+00,  3.43849729e-01],
       [-2.92842859e+00,  2.57776929e-01],
       [-2.97382659e+00,  1.59650765e-01],
       [-2.99706898e+00,  5.40595092e-02],
       [-2.99706898e+00, -5.40595092e-02],
       [-2.97382659e+00, -1.59650765e-01],
       [-2.92842859e+00, -2.57776929e-01],
       [-2.86299775e+00, -3.43849729e-01],
       [-2.78059353e+00, -4.13844499e-01],
       [-2.68506908e+00, -4.64488360e-01],
       [-2.58089100e+00, -4.93413261e-01],
       [-2.47293055e+00, -4.99266707e-01],
       [-2.36623583e+00, -4.81774996e-01],
       [-2.26579578e+00, -4.41756022e-01],
       [-2.17630686e+00, -3.81081028e-01],
       [-2.10195347e+00, -3.02587108e-01],
       [-2.04621229e+00, -2.09944551e-01],
       [-2.01168972e+00, -1.07485220e-01],
       [-2.00000000e+00, -1.22464680e-16]]), array([[-3.25, -0.75],
       [-1.75, -0.75],
       [-1.75,  0.75],
       [-3.25,  0.75],
       [-3.25, -0.75]]), array([[-2.5,  0. ],
       [-2.5,  1. ]]), array([[4.75, 6.25],
       [4.75, 9.25]]), array([[3.75, 9.25],
       [5.75, 9.25]]), array([[3.75      , 9.25      ],
       [3.73831028, 9.35748522],
       [3.70378771, 9.45994455],
       [3.64804653, 9.55258711],
       [3.57369314, 9.63108103],
       [3.48420422, 9.69175602],
       [3.38376417, 9.731775  ],
       [3.27706945, 9.74926671],
       [3.169109  , 9.74341326],
       [3.06493092, 9.71448836],
       [2.96940647, 9.6638445 ],
       [2.88700225, 9.59384973],
       [2.82157141, 9.50777693],
       [2.77617341, 9.40965077],
       [2.75293102, 9.30405951],
       [2.75293102, 9.19594049],
       [2.77617341, 9.09034923],
       [2.82157141, 8.99222307],
       [2.88700225, 8.90615027],
       [2.96940647, 8.8361555 ],
       [3.06493092, 8.78551164],
       [3.169109  , 8.75658674],
       [3.27706945, 8.75073329],
       [3.38376417, 8.768225  ],
       [3.48420422, 8.80824398],
       [3.57369314, 8.86891897],
       [3.64804653, 8.94741289],
       [3.70378771, 9.04005545],
       [3.73831028, 9.14251478],
       [3.75      , 9.25      ]]), array([[6.75      , 9.25      ],
       [6.73831028, 9.35748522],
       [6.70378771, 9.45994455],
       [6.64804653, 9.55258711],
       [6.57369314, 9.63108103],
       [6.48420422, 9.69175602],
       [6.38376417, 9.731775  ],
       [6.27706945, 9.74926671],
       [6.169109  , 9.74341326],
       [6.06493092, 9.71448836],
       [5.96940647, 9.6638445 ],
       [5.88700225, 9.59384973],
       [5.82157141, 9.50777693],
       [5.77617341, 9.40965077],
       [5.75293102, 9.30405951],
       [5.75293102, 9.19594049],
       [5.77617341, 9.09034923],
       [5.82157141, 8.99222307],
       [5.88700225, 8.90615027],
       [5.96940647, 8.8361555 ],
       [6.06493092, 8.78551164],
       [6.169109  , 8.75658674],
       [6.27706945, 8.75073329],
       [6.38376417, 8.768225  ],
       [6.48420422, 8.80824398],
       [6.57369314, 8.86891897],
       [6.64804653, 8.94741289],
       [6.70378771, 9.04005545],
       [6.73831028, 9.14251478],
       [6.75      , 9.25      ]]), array([[-4.75,  6.25],
       [-4.75,  9.25]]), array([[-5.75,  9.25],
       [-3.75,  9.25]]), array([[-5.75      ,  9.25      ],
       [-5.76168972,  9.35748522],
       [-5.79621229,  9.45994455],
       [-5.85195347,  9.55258711],
       [-5.92630686,  9.63108103],
       [-6.01579578,  9.69175602],
       [-6.11623583,  9.731775  ],
       [-6.22293055,  9.74926671],
       [-6.330891  ,  9.74341326],
       [-6.43506908,  9.71448836],
       [-6.53059353,  9.6638445 ],
       [-6.61299775,  9.59384973],
       [-6.67842859,  9.50777693],
       [-6.72382659,  9.40965077],
       [-6.74706898,  9.30405951],
       [-6.74706898,  9.19594049],
       [-6.72382659,  9.09034923],
       [-6.67842859,  8.99222307],
       [-6.61299775,  8.90615027],
       [-6.53059353,  8.8361555 ],
       [-6.43506908,  8.78551164],
       [-6.330891  ,  8.75658674],
       [-6.22293055,  8.75073329],
       [-6.11623583,  8.768225  ],
       [-6.01579578,  8.80824398],
       [-5.92630686,  8.86891897],
       [-5.85195347,  8.94741289],
       [-5.79621229,  9.04005545],
       [-5.76168972,  9.14251478],
       [-5.75      ,  9.25      ]]), array([[-2.75      ,  9.25      ],
       [-2.76168972,  9.35748522],
       [-2.79621229,  9.45994455],
       [-2.85195347,  9.55258711],
       [-2.92630686,  9.63108103],
       [-3.01579578,  9.69175602],
       [-3.11623583,  9.731775  ],
       [-3.22293055,  9.74926671],
       [-3.330891  ,  9.74341326],
       [-3.43506908,  9.71448836],
       [-3.53059353,  9.6638445 ],
       [-3.61299775,  9.59384973],
       [-3.67842859,  9.50777693],
       [-3.72382659,  9.40965077],
       [-3.74706898,  9.30405951],
       [-3.74706898,  9.19594049],
       [-3.72382659,  9.09034923],
       [-3.67842859,  8.99222307],
       [-3.61299775,  8.90615027],
       [-3.53059353,  8.8361555 ],
       [-3.43506908,  8.78551164],
       [-3.330891  ,  8.75658674],
       [-3.22293055,  8.75073329],
       [-3.11623583,  8.768225  ],
       [-3.01579578,  8.80824398],
       [-2.92630686,  8.86891897],
       [-2.85195347,  8.94741289],
       [-2.79621229,  9.04005545],
       [-2.76168972,  9.14251478],
       [-2.75      ,  9.25      ]])]]",32,(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (transform_matrix 1 0 (- 0 (+ 2 0.5)) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (+ 0 (* 0.5 (* 4 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 2 0.5)) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (+ 0 (* 0.5 (* 4 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', 'antenna_lines', 'antenna_finial']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']","['0.0', '1.0', '1.5']","['1', '4.0', '1.0', '1.5', '(/ pi 2)', '1.0', '1.0']",[],"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', '0.0', '1.0', '1.5']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', 'antenna_lines', 'antenna_finial', '1', '4.0', '1.0', '1.5', '(/ pi 2)', '1.0', '1.0']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '1', '4.0', '1.0', '1.5', '(/ pi 2)', '1.0', '1.0']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-018.png
dials_context_programs_context_large_abstractions_019,dials_context_programs_train,(C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),"['C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '1', 'M', '1', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5']","[[array([[-8.5 ,  2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [ 8.5 , -2.25]]), array([[ 8.5 , -2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [-8.5 ,  2.25]]), array([[8.5  , 1.125],
       [9.5  , 1.125]]), array([[ 8.5  , -1.125],
       [ 9.5  , -1.125]]), array([[ 9.5  , -1.125],
       [ 9.5  ,  1.125]]), array([[ 8.5  , -1.125],
       [ 8.5  ,  1.125]]), array([[-9.5  ,  1.125],
       [-8.5  ,  1.125]]), array([[-9.5  , -1.125],
       [-8.5  , -1.125]]), array([[-8.5  , -1.125],
       [-8.5  ,  1.125]]), array([[-9.5  , -1.125],
       [-9.5  ,  1.125]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[-0.75, -0.75],
       [ 0.75, -0.75],
       [ 0.75,  0.75],
       [-0.75,  0.75],
       [-0.75, -0.75]]), array([[0.000000e+00, 0.000000e+00],
       [6.123234e-17, 1.000000e+00]])]]",15,(connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),(connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix_scale_angle_x_y 1 0 (+ 2 0.5) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand']","['all_base_strokes', 'row_of_dials']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))']","['0.0', '1.0', '1.5']","['1', '1.0', '1.0', '1.5', '(/ pi 2)']",[],"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', '0.0', '1.0', '1.5']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', '1', '1.0', '1.0', '1.5', '(/ pi 2)']","['all_base_strokes', 'row_of_dials']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '1', '1.0', '1.0', '1.5', '(/ pi 2)']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-019.png
dials_context_programs_context_large_abstractions_020,dials_context_programs_train,(C (C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['C', 'C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '1', 'M', '1', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '0', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5 ,  2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [ 8.5 , -2.25]]), array([[ 8.5 , -2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [-8.5 ,  2.25]]), array([[8.5  , 1.125],
       [9.5  , 1.125]]), array([[ 8.5  , -1.125],
       [ 9.5  , -1.125]]), array([[ 9.5  , -1.125],
       [ 9.5  ,  1.125]]), array([[ 8.5  , -1.125],
       [ 8.5  ,  1.125]]), array([[-9.5  ,  1.125],
       [-8.5  ,  1.125]]), array([[-9.5  , -1.125],
       [-8.5  , -1.125]]), array([[-8.5  , -1.125],
       [-8.5  ,  1.125]]), array([[-9.5  , -1.125],
       [-9.5  ,  1.125]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[-0.75, -0.75],
       [ 0.75, -0.75],
       [ 0.75,  0.75],
       [-0.75,  0.75],
       [-0.75, -0.75]]), array([[0.000000e+00, 0.000000e+00],
       [6.123234e-17, 1.000000e+00]]), array([[0.0000000e+00, 2.2500000e+00],
       [1.8369702e-16, 5.2500000e+00]]), array([[-1.  ,  5.25],
       [ 1.  ,  5.25]]), array([[-1.        ,  5.25      ],
       [-1.01168972,  5.35748522],
       [-1.04621229,  5.45994455],
       [-1.10195347,  5.55258711],
       [-1.17630686,  5.63108103],
       [-1.26579578,  5.69175602],
       [-1.36623583,  5.731775  ],
       [-1.47293055,  5.74926671],
       [-1.580891  ,  5.74341326],
       [-1.68506908,  5.71448836],
       [-1.78059353,  5.6638445 ],
       [-1.86299775,  5.59384973],
       [-1.92842859,  5.50777693],
       [-1.97382659,  5.40965077],
       [-1.99706898,  5.30405951],
       [-1.99706898,  5.19594049],
       [-1.97382659,  5.09034923],
       [-1.92842859,  4.99222307],
       [-1.86299775,  4.90615027],
       [-1.78059353,  4.8361555 ],
       [-1.68506908,  4.78551164],
       [-1.580891  ,  4.75658674],
       [-1.47293055,  4.75073329],
       [-1.36623583,  4.768225  ],
       [-1.26579578,  4.80824398],
       [-1.17630686,  4.86891897],
       [-1.10195347,  4.94741289],
       [-1.04621229,  5.04005545],
       [-1.01168972,  5.14251478],
       [-1.        ,  5.25      ]]), array([[2.        , 5.25      ],
       [1.98831028, 5.35748522],
       [1.95378771, 5.45994455],
       [1.89804653, 5.55258711],
       [1.82369314, 5.63108103],
       [1.73420422, 5.69175602],
       [1.63376417, 5.731775  ],
       [1.52706945, 5.74926671],
       [1.419109  , 5.74341326],
       [1.31493092, 5.71448836],
       [1.21940647, 5.6638445 ],
       [1.13700225, 5.59384973],
       [1.07157141, 5.50777693],
       [1.02617341, 5.40965077],
       [1.00293102, 5.30405951],
       [1.00293102, 5.19594049],
       [1.02617341, 5.09034923],
       [1.07157141, 4.99222307],
       [1.13700225, 4.90615027],
       [1.21940647, 4.8361555 ],
       [1.31493092, 4.78551164],
       [1.419109  , 4.75658674],
       [1.52706945, 4.75073329],
       [1.63376417, 4.768225  ],
       [1.73420422, 4.80824398],
       [1.82369314, 4.86891897],
       [1.89804653, 4.94741289],
       [1.95378771, 5.04005545],
       [1.98831028, 5.14251478],
       [2.        , 5.25      ]])]]",19,(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),(connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix_scale_angle_x_y 1 0 (+ 2 0.5) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial']","['all_base_strokes', 'row_of_dials', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']","['0.0', '1.0', '1.5']","['1', '1.0', '1.0', '1.5', '(/ pi 2)', '1.0']",[],"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', '0.0', '1.0', '1.5']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', '1', '1.0', '1.0', '1.5', '(/ pi 2)', '1.0']","['all_base_strokes', 'row_of_dials', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '1', '1.0', '1.0', '1.5', '(/ pi 2)', '1.0']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-020.png
dials_context_programs_context_large_abstractions_021,dials_context_programs_train,(C (C (C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['C', 'C', 'C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '1', 'M', '1', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '*', '+', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '*', '2', '0.5', '0.25', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '-', '0', '*', '+', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '*', '2', '0.5', '0.25', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5 ,  2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [ 8.5 , -2.25]]), array([[ 8.5 , -2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [-8.5 ,  2.25]]), array([[8.5  , 1.125],
       [9.5  , 1.125]]), array([[ 8.5  , -1.125],
       [ 9.5  , -1.125]]), array([[ 9.5  , -1.125],
       [ 9.5  ,  1.125]]), array([[ 8.5  , -1.125],
       [ 8.5  ,  1.125]]), array([[-9.5  ,  1.125],
       [-8.5  ,  1.125]]), array([[-9.5  , -1.125],
       [-8.5  , -1.125]]), array([[-8.5  , -1.125],
       [-8.5  ,  1.125]]), array([[-9.5  , -1.125],
       [-9.5  ,  1.125]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[-0.75, -0.75],
       [ 0.75, -0.75],
       [ 0.75,  0.75],
       [-0.75,  0.75],
       [-0.75, -0.75]]), array([[0.000000e+00, 0.000000e+00],
       [6.123234e-17, 1.000000e+00]]), array([[4.75, 2.25],
       [4.75, 5.25]]), array([[3.75, 5.25],
       [5.75, 5.25]]), array([[3.75      , 5.25      ],
       [3.73831028, 5.35748522],
       [3.70378771, 5.45994455],
       [3.64804653, 5.55258711],
       [3.57369314, 5.63108103],
       [3.48420422, 5.69175602],
       [3.38376417, 5.731775  ],
       [3.27706945, 5.74926671],
       [3.169109  , 5.74341326],
       [3.06493092, 5.71448836],
       [2.96940647, 5.6638445 ],
       [2.88700225, 5.59384973],
       [2.82157141, 5.50777693],
       [2.77617341, 5.40965077],
       [2.75293102, 5.30405951],
       [2.75293102, 5.19594049],
       [2.77617341, 5.09034923],
       [2.82157141, 4.99222307],
       [2.88700225, 4.90615027],
       [2.96940647, 4.8361555 ],
       [3.06493092, 4.78551164],
       [3.169109  , 4.75658674],
       [3.27706945, 4.75073329],
       [3.38376417, 4.768225  ],
       [3.48420422, 4.80824398],
       [3.57369314, 4.86891897],
       [3.64804653, 4.94741289],
       [3.70378771, 5.04005545],
       [3.73831028, 5.14251478],
       [3.75      , 5.25      ]]), array([[6.75      , 5.25      ],
       [6.73831028, 5.35748522],
       [6.70378771, 5.45994455],
       [6.64804653, 5.55258711],
       [6.57369314, 5.63108103],
       [6.48420422, 5.69175602],
       [6.38376417, 5.731775  ],
       [6.27706945, 5.74926671],
       [6.169109  , 5.74341326],
       [6.06493092, 5.71448836],
       [5.96940647, 5.6638445 ],
       [5.88700225, 5.59384973],
       [5.82157141, 5.50777693],
       [5.77617341, 5.40965077],
       [5.75293102, 5.30405951],
       [5.75293102, 5.19594049],
       [5.77617341, 5.09034923],
       [5.82157141, 4.99222307],
       [5.88700225, 4.90615027],
       [5.96940647, 4.8361555 ],
       [6.06493092, 4.78551164],
       [6.169109  , 4.75658674],
       [6.27706945, 4.75073329],
       [6.38376417, 4.768225  ],
       [6.48420422, 4.80824398],
       [6.57369314, 4.86891897],
       [6.64804653, 4.94741289],
       [6.70378771, 5.04005545],
       [6.73831028, 5.14251478],
       [6.75      , 5.25      ]]), array([[-4.75,  2.25],
       [-4.75,  5.25]]), array([[-5.75,  5.25],
       [-3.75,  5.25]]), array([[-5.75      ,  5.25      ],
       [-5.76168972,  5.35748522],
       [-5.79621229,  5.45994455],
       [-5.85195347,  5.55258711],
       [-5.92630686,  5.63108103],
       [-6.01579578,  5.69175602],
       [-6.11623583,  5.731775  ],
       [-6.22293055,  5.74926671],
       [-6.330891  ,  5.74341326],
       [-6.43506908,  5.71448836],
       [-6.53059353,  5.6638445 ],
       [-6.61299775,  5.59384973],
       [-6.67842859,  5.50777693],
       [-6.72382659,  5.40965077],
       [-6.74706898,  5.30405951],
       [-6.74706898,  5.19594049],
       [-6.72382659,  5.09034923],
       [-6.67842859,  4.99222307],
       [-6.61299775,  4.90615027],
       [-6.53059353,  4.8361555 ],
       [-6.43506908,  4.78551164],
       [-6.330891  ,  4.75658674],
       [-6.22293055,  4.75073329],
       [-6.11623583,  4.768225  ],
       [-6.01579578,  4.80824398],
       [-5.92630686,  4.86891897],
       [-5.85195347,  4.94741289],
       [-5.79621229,  5.04005545],
       [-5.76168972,  5.14251478],
       [-5.75      ,  5.25      ]]), array([[-2.75      ,  5.25      ],
       [-2.76168972,  5.35748522],
       [-2.79621229,  5.45994455],
       [-2.85195347,  5.55258711],
       [-2.92630686,  5.63108103],
       [-3.01579578,  5.69175602],
       [-3.11623583,  5.731775  ],
       [-3.22293055,  5.74926671],
       [-3.330891  ,  5.74341326],
       [-3.43506908,  5.71448836],
       [-3.53059353,  5.6638445 ],
       [-3.61299775,  5.59384973],
       [-3.67842859,  5.50777693],
       [-3.72382659,  5.40965077],
       [-3.74706898,  5.30405951],
       [-3.74706898,  5.19594049],
       [-3.72382659,  5.09034923],
       [-3.67842859,  4.99222307],
       [-3.61299775,  4.90615027],
       [-3.53059353,  4.8361555 ],
       [-3.43506908,  4.78551164],
       [-3.330891  ,  4.75658674],
       [-3.22293055,  4.75073329],
       [-3.11623583,  4.768225  ],
       [-3.01579578,  4.80824398],
       [-2.92630686,  4.86891897],
       [-2.85195347,  4.94741289],
       [-2.79621229,  5.04005545],
       [-2.76168972,  5.14251478],
       [-2.75      ,  5.25      ]])]]",23,(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix_scale_angle_x_y 1 0 (+ 2 0.5) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', 'antenna_lines', 'antenna_finial']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']","['0.0', '1.0', '1.5']","['1', '1.0', '1.0', '1.5', '(/ pi 2)', '1.0', '1.0']",[],"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', '0.0', '1.0', '1.5']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', 'antenna_lines', 'antenna_finial', '1', '1.0', '1.0', '1.5', '(/ pi 2)', '1.0', '1.0']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '1', '1.0', '1.0', '1.5', '(/ pi 2)', '1.0', '1.0']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-021.png
dials_context_programs_context_large_abstractions_022,dials_context_programs_train,(C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),"['C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '1', 'M', '1', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5']","[[array([[-8.5 ,  6.25],
       [ 8.5 ,  6.25]]), array([[-8.5 , -6.25],
       [ 8.5 , -6.25]]), array([[ 8.5 , -6.25],
       [ 8.5 ,  6.25]]), array([[-8.5 , -6.25],
       [-8.5 ,  6.25]]), array([[8.5  , 3.125],
       [9.5  , 3.125]]), array([[ 8.5  , -3.125],
       [ 9.5  , -3.125]]), array([[ 9.5  , -3.125],
       [ 9.5  ,  3.125]]), array([[ 8.5  , -3.125],
       [ 8.5  ,  3.125]]), array([[-9.5  ,  3.125],
       [-8.5  ,  3.125]]), array([[-9.5  , -3.125],
       [-8.5  , -3.125]]), array([[-8.5  , -3.125],
       [-8.5  ,  3.125]]), array([[-9.5  , -3.125],
       [-9.5  ,  3.125]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[-0.75, -0.75],
       [ 0.75, -0.75],
       [ 0.75,  0.75],
       [-0.75,  0.75],
       [-0.75, -0.75]]), array([[0.000000e+00, 0.000000e+00],
       [6.123234e-17, 1.000000e+00]])]]",15,(connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),(connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix_scale_angle_x_y 1 0 (+ 2 0.5) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand']","['all_base_strokes', 'row_of_dials']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))']","['0.0', '1.0', '1.5']","['1', '1.0', '1.0', '1.5', '(/ pi 2)']",[],"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', '0.0', '1.0', '1.5']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', '1', '1.0', '1.0', '1.5', '(/ pi 2)']","['all_base_strokes', 'row_of_dials']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '1', '1.0', '1.0', '1.5', '(/ pi 2)']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-022.png
dials_context_programs_context_large_abstractions_023,dials_context_programs_train,(C (C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['C', 'C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '1', 'M', '1', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '0', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5 ,  6.25],
       [ 8.5 ,  6.25]]), array([[-8.5 , -6.25],
       [ 8.5 , -6.25]]), array([[ 8.5 , -6.25],
       [ 8.5 ,  6.25]]), array([[-8.5 , -6.25],
       [-8.5 ,  6.25]]), array([[8.5  , 3.125],
       [9.5  , 3.125]]), array([[ 8.5  , -3.125],
       [ 9.5  , -3.125]]), array([[ 9.5  , -3.125],
       [ 9.5  ,  3.125]]), array([[ 8.5  , -3.125],
       [ 8.5  ,  3.125]]), array([[-9.5  ,  3.125],
       [-8.5  ,  3.125]]), array([[-9.5  , -3.125],
       [-8.5  , -3.125]]), array([[-8.5  , -3.125],
       [-8.5  ,  3.125]]), array([[-9.5  , -3.125],
       [-9.5  ,  3.125]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[-0.75, -0.75],
       [ 0.75, -0.75],
       [ 0.75,  0.75],
       [-0.75,  0.75],
       [-0.75, -0.75]]), array([[0.000000e+00, 0.000000e+00],
       [6.123234e-17, 1.000000e+00]]), array([[0.0000000e+00, 6.2500000e+00],
       [1.8369702e-16, 9.2500000e+00]]), array([[-1.  ,  9.25],
       [ 1.  ,  9.25]]), array([[-1.        ,  9.25      ],
       [-1.01168972,  9.35748522],
       [-1.04621229,  9.45994455],
       [-1.10195347,  9.55258711],
       [-1.17630686,  9.63108103],
       [-1.26579578,  9.69175602],
       [-1.36623583,  9.731775  ],
       [-1.47293055,  9.74926671],
       [-1.580891  ,  9.74341326],
       [-1.68506908,  9.71448836],
       [-1.78059353,  9.6638445 ],
       [-1.86299775,  9.59384973],
       [-1.92842859,  9.50777693],
       [-1.97382659,  9.40965077],
       [-1.99706898,  9.30405951],
       [-1.99706898,  9.19594049],
       [-1.97382659,  9.09034923],
       [-1.92842859,  8.99222307],
       [-1.86299775,  8.90615027],
       [-1.78059353,  8.8361555 ],
       [-1.68506908,  8.78551164],
       [-1.580891  ,  8.75658674],
       [-1.47293055,  8.75073329],
       [-1.36623583,  8.768225  ],
       [-1.26579578,  8.80824398],
       [-1.17630686,  8.86891897],
       [-1.10195347,  8.94741289],
       [-1.04621229,  9.04005545],
       [-1.01168972,  9.14251478],
       [-1.        ,  9.25      ]]), array([[2.        , 9.25      ],
       [1.98831028, 9.35748522],
       [1.95378771, 9.45994455],
       [1.89804653, 9.55258711],
       [1.82369314, 9.63108103],
       [1.73420422, 9.69175602],
       [1.63376417, 9.731775  ],
       [1.52706945, 9.74926671],
       [1.419109  , 9.74341326],
       [1.31493092, 9.71448836],
       [1.21940647, 9.6638445 ],
       [1.13700225, 9.59384973],
       [1.07157141, 9.50777693],
       [1.02617341, 9.40965077],
       [1.00293102, 9.30405951],
       [1.00293102, 9.19594049],
       [1.02617341, 9.09034923],
       [1.07157141, 8.99222307],
       [1.13700225, 8.90615027],
       [1.21940647, 8.8361555 ],
       [1.31493092, 8.78551164],
       [1.419109  , 8.75658674],
       [1.52706945, 8.75073329],
       [1.63376417, 8.768225  ],
       [1.73420422, 8.80824398],
       [1.82369314, 8.86891897],
       [1.89804653, 8.94741289],
       [1.95378771, 9.04005545],
       [1.98831028, 9.14251478],
       [2.        , 9.25      ]])]]",19,(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),(connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix_scale_angle_x_y 1 0 (+ 2 0.5) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial']","['all_base_strokes', 'row_of_dials', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']","['0.0', '1.0', '1.5']","['1', '1.0', '1.0', '1.5', '(/ pi 2)', '1.0']",[],"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', '0.0', '1.0', '1.5']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', '1', '1.0', '1.0', '1.5', '(/ pi 2)', '1.0']","['all_base_strokes', 'row_of_dials', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '1', '1.0', '1.0', '1.5', '(/ pi 2)', '1.0']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-023.png
dials_context_programs_context_large_abstractions_024,dials_context_programs_test,(C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 5 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),"['C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '5', 'M', '1', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '*', '-', '5', '1', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5']","[[array([[-8.5 ,  2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [ 8.5 , -2.25]]), array([[ 8.5 , -2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [-8.5 ,  2.25]]), array([[8.5  , 1.125],
       [9.5  , 1.125]]), array([[ 8.5  , -1.125],
       [ 9.5  , -1.125]]), array([[ 9.5  , -1.125],
       [ 9.5  ,  1.125]]), array([[ 8.5  , -1.125],
       [ 8.5  ,  1.125]]), array([[-9.5  ,  1.125],
       [-8.5  ,  1.125]]), array([[-9.5  , -1.125],
       [-8.5  , -1.125]]), array([[-8.5  , -1.125],
       [-8.5  ,  1.125]]), array([[-9.5  , -1.125],
       [-9.5  ,  1.125]]), array([[-4.50000000e+00,  0.00000000e+00],
       [-4.51168972e+00,  1.07485220e-01],
       [-4.54621229e+00,  2.09944551e-01],
       [-4.60195347e+00,  3.02587108e-01],
       [-4.67630686e+00,  3.81081028e-01],
       [-4.76579578e+00,  4.41756022e-01],
       [-4.86623583e+00,  4.81774996e-01],
       [-4.97293055e+00,  4.99266707e-01],
       [-5.08089100e+00,  4.93413261e-01],
       [-5.18506908e+00,  4.64488360e-01],
       [-5.28059353e+00,  4.13844499e-01],
       [-5.36299775e+00,  3.43849729e-01],
       [-5.42842859e+00,  2.57776929e-01],
       [-5.47382659e+00,  1.59650765e-01],
       [-5.49706898e+00,  5.40595092e-02],
       [-5.49706898e+00, -5.40595092e-02],
       [-5.47382659e+00, -1.59650765e-01],
       [-5.42842859e+00, -2.57776929e-01],
       [-5.36299775e+00, -3.43849729e-01],
       [-5.28059353e+00, -4.13844499e-01],
       [-5.18506908e+00, -4.64488360e-01],
       [-5.08089100e+00, -4.93413261e-01],
       [-4.97293055e+00, -4.99266707e-01],
       [-4.86623583e+00, -4.81774996e-01],
       [-4.76579578e+00, -4.41756022e-01],
       [-4.67630686e+00, -3.81081028e-01],
       [-4.60195347e+00, -3.02587108e-01],
       [-4.54621229e+00, -2.09944551e-01],
       [-4.51168972e+00, -1.07485220e-01],
       [-4.50000000e+00, -1.22464680e-16]]), array([[-5.75, -0.75],
       [-4.25, -0.75],
       [-4.25,  0.75],
       [-5.75,  0.75],
       [-5.75, -0.75]]), array([[-5.,  0.],
       [-5.,  1.]]), array([[-2.00000000e+00,  0.00000000e+00],
       [-2.01168972e+00,  1.07485220e-01],
       [-2.04621229e+00,  2.09944551e-01],
       [-2.10195347e+00,  3.02587108e-01],
       [-2.17630686e+00,  3.81081028e-01],
       [-2.26579578e+00,  4.41756022e-01],
       [-2.36623583e+00,  4.81774996e-01],
       [-2.47293055e+00,  4.99266707e-01],
       [-2.58089100e+00,  4.93413261e-01],
       [-2.68506908e+00,  4.64488360e-01],
       [-2.78059353e+00,  4.13844499e-01],
       [-2.86299775e+00,  3.43849729e-01],
       [-2.92842859e+00,  2.57776929e-01],
       [-2.97382659e+00,  1.59650765e-01],
       [-2.99706898e+00,  5.40595092e-02],
       [-2.99706898e+00, -5.40595092e-02],
       [-2.97382659e+00, -1.59650765e-01],
       [-2.92842859e+00, -2.57776929e-01],
       [-2.86299775e+00, -3.43849729e-01],
       [-2.78059353e+00, -4.13844499e-01],
       [-2.68506908e+00, -4.64488360e-01],
       [-2.58089100e+00, -4.93413261e-01],
       [-2.47293055e+00, -4.99266707e-01],
       [-2.36623583e+00, -4.81774996e-01],
       [-2.26579578e+00, -4.41756022e-01],
       [-2.17630686e+00, -3.81081028e-01],
       [-2.10195347e+00, -3.02587108e-01],
       [-2.04621229e+00, -2.09944551e-01],
       [-2.01168972e+00, -1.07485220e-01],
       [-2.00000000e+00, -1.22464680e-16]]), array([[-3.25, -0.75],
       [-1.75, -0.75],
       [-1.75,  0.75],
       [-3.25,  0.75],
       [-3.25, -0.75]]), array([[-2.5,  0. ],
       [-2.5,  1. ]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[-0.75, -0.75],
       [ 0.75, -0.75],
       [ 0.75,  0.75],
       [-0.75,  0.75],
       [-0.75, -0.75]]), array([[0., 0.],
       [0., 1.]]), array([[ 3.00000000e+00,  0.00000000e+00],
       [ 2.98831028e+00,  1.07485220e-01],
       [ 2.95378771e+00,  2.09944551e-01],
       [ 2.89804653e+00,  3.02587108e-01],
       [ 2.82369314e+00,  3.81081028e-01],
       [ 2.73420422e+00,  4.41756022e-01],
       [ 2.63376417e+00,  4.81774996e-01],
       [ 2.52706945e+00,  4.99266707e-01],
       [ 2.41910900e+00,  4.93413261e-01],
       [ 2.31493092e+00,  4.64488360e-01],
       [ 2.21940647e+00,  4.13844499e-01],
       [ 2.13700225e+00,  3.43849729e-01],
       [ 2.07157141e+00,  2.57776929e-01],
       [ 2.02617341e+00,  1.59650765e-01],
       [ 2.00293102e+00,  5.40595092e-02],
       [ 2.00293102e+00, -5.40595092e-02],
       [ 2.02617341e+00, -1.59650765e-01],
       [ 2.07157141e+00, -2.57776929e-01],
       [ 2.13700225e+00, -3.43849729e-01],
       [ 2.21940647e+00, -4.13844499e-01],
       [ 2.31493092e+00, -4.64488360e-01],
       [ 2.41910900e+00, -4.93413261e-01],
       [ 2.52706945e+00, -4.99266707e-01],
       [ 2.63376417e+00, -4.81774996e-01],
       [ 2.73420422e+00, -4.41756022e-01],
       [ 2.82369314e+00, -3.81081028e-01],
       [ 2.89804653e+00, -3.02587108e-01],
       [ 2.95378771e+00, -2.09944551e-01],
       [ 2.98831028e+00, -1.07485220e-01],
       [ 3.00000000e+00, -1.22464680e-16]]), array([[ 1.75, -0.75],
       [ 3.25, -0.75],
       [ 3.25,  0.75],
       [ 1.75,  0.75],
       [ 1.75, -0.75]]), array([[2.5, 0. ],
       [2.5, 1. ]]), array([[ 5.50000000e+00,  0.00000000e+00],
       [ 5.48831028e+00,  1.07485220e-01],
       [ 5.45378771e+00,  2.09944551e-01],
       [ 5.39804653e+00,  3.02587108e-01],
       [ 5.32369314e+00,  3.81081028e-01],
       [ 5.23420422e+00,  4.41756022e-01],
       [ 5.13376417e+00,  4.81774996e-01],
       [ 5.02706945e+00,  4.99266707e-01],
       [ 4.91910900e+00,  4.93413261e-01],
       [ 4.81493092e+00,  4.64488360e-01],
       [ 4.71940647e+00,  4.13844499e-01],
       [ 4.63700225e+00,  3.43849729e-01],
       [ 4.57157141e+00,  2.57776929e-01],
       [ 4.52617341e+00,  1.59650765e-01],
       [ 4.50293102e+00,  5.40595092e-02],
       [ 4.50293102e+00, -5.40595092e-02],
       [ 4.52617341e+00, -1.59650765e-01],
       [ 4.57157141e+00, -2.57776929e-01],
       [ 4.63700225e+00, -3.43849729e-01],
       [ 4.71940647e+00, -4.13844499e-01],
       [ 4.81493092e+00, -4.64488360e-01],
       [ 4.91910900e+00, -4.93413261e-01],
       [ 5.02706945e+00, -4.99266707e-01],
       [ 5.13376417e+00, -4.81774996e-01],
       [ 5.23420422e+00, -4.41756022e-01],
       [ 5.32369314e+00, -3.81081028e-01],
       [ 5.39804653e+00, -3.02587108e-01],
       [ 5.45378771e+00, -2.09944551e-01],
       [ 5.48831028e+00, -1.07485220e-01],
       [ 5.50000000e+00, -1.22464680e-16]]), array([[ 4.25, -0.75],
       [ 5.75, -0.75],
       [ 5.75,  0.75],
       [ 4.25,  0.75],
       [ 4.25, -0.75]]), array([[5., 0.],
       [5., 1.]])]]",27,(connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 5 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),(connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (transform_matrix_scale_angle_x_y 1 0 (+ 2 0.5) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (* (- 5 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand']","['all_base_strokes', 'row_of_dials']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))']","['0.0', '1.0', '1.5']","['1', '5.0', '1.0', '1.5', '(/ pi 2)']",[],"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', '0.0', '1.0', '1.5']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', '1', '5.0', '1.0', '1.5', '(/ pi 2)']","['all_base_strokes', 'row_of_dials']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '1', '5.0', '1.0', '1.5', '(/ pi 2)']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-024.png
dials_context_programs_context_large_abstractions_025,dials_context_programs_test,(C (C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 5 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['C', 'C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '5', 'M', '1', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '*', '-', '5', '1', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '0', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5 ,  2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [ 8.5 , -2.25]]), array([[ 8.5 , -2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [-8.5 ,  2.25]]), array([[8.5  , 1.125],
       [9.5  , 1.125]]), array([[ 8.5  , -1.125],
       [ 9.5  , -1.125]]), array([[ 9.5  , -1.125],
       [ 9.5  ,  1.125]]), array([[ 8.5  , -1.125],
       [ 8.5  ,  1.125]]), array([[-9.5  ,  1.125],
       [-8.5  ,  1.125]]), array([[-9.5  , -1.125],
       [-8.5  , -1.125]]), array([[-8.5  , -1.125],
       [-8.5  ,  1.125]]), array([[-9.5  , -1.125],
       [-9.5  ,  1.125]]), array([[-4.50000000e+00,  0.00000000e+00],
       [-4.51168972e+00,  1.07485220e-01],
       [-4.54621229e+00,  2.09944551e-01],
       [-4.60195347e+00,  3.02587108e-01],
       [-4.67630686e+00,  3.81081028e-01],
       [-4.76579578e+00,  4.41756022e-01],
       [-4.86623583e+00,  4.81774996e-01],
       [-4.97293055e+00,  4.99266707e-01],
       [-5.08089100e+00,  4.93413261e-01],
       [-5.18506908e+00,  4.64488360e-01],
       [-5.28059353e+00,  4.13844499e-01],
       [-5.36299775e+00,  3.43849729e-01],
       [-5.42842859e+00,  2.57776929e-01],
       [-5.47382659e+00,  1.59650765e-01],
       [-5.49706898e+00,  5.40595092e-02],
       [-5.49706898e+00, -5.40595092e-02],
       [-5.47382659e+00, -1.59650765e-01],
       [-5.42842859e+00, -2.57776929e-01],
       [-5.36299775e+00, -3.43849729e-01],
       [-5.28059353e+00, -4.13844499e-01],
       [-5.18506908e+00, -4.64488360e-01],
       [-5.08089100e+00, -4.93413261e-01],
       [-4.97293055e+00, -4.99266707e-01],
       [-4.86623583e+00, -4.81774996e-01],
       [-4.76579578e+00, -4.41756022e-01],
       [-4.67630686e+00, -3.81081028e-01],
       [-4.60195347e+00, -3.02587108e-01],
       [-4.54621229e+00, -2.09944551e-01],
       [-4.51168972e+00, -1.07485220e-01],
       [-4.50000000e+00, -1.22464680e-16]]), array([[-5.75, -0.75],
       [-4.25, -0.75],
       [-4.25,  0.75],
       [-5.75,  0.75],
       [-5.75, -0.75]]), array([[-5.,  0.],
       [-5.,  1.]]), array([[-2.00000000e+00,  0.00000000e+00],
       [-2.01168972e+00,  1.07485220e-01],
       [-2.04621229e+00,  2.09944551e-01],
       [-2.10195347e+00,  3.02587108e-01],
       [-2.17630686e+00,  3.81081028e-01],
       [-2.26579578e+00,  4.41756022e-01],
       [-2.36623583e+00,  4.81774996e-01],
       [-2.47293055e+00,  4.99266707e-01],
       [-2.58089100e+00,  4.93413261e-01],
       [-2.68506908e+00,  4.64488360e-01],
       [-2.78059353e+00,  4.13844499e-01],
       [-2.86299775e+00,  3.43849729e-01],
       [-2.92842859e+00,  2.57776929e-01],
       [-2.97382659e+00,  1.59650765e-01],
       [-2.99706898e+00,  5.40595092e-02],
       [-2.99706898e+00, -5.40595092e-02],
       [-2.97382659e+00, -1.59650765e-01],
       [-2.92842859e+00, -2.57776929e-01],
       [-2.86299775e+00, -3.43849729e-01],
       [-2.78059353e+00, -4.13844499e-01],
       [-2.68506908e+00, -4.64488360e-01],
       [-2.58089100e+00, -4.93413261e-01],
       [-2.47293055e+00, -4.99266707e-01],
       [-2.36623583e+00, -4.81774996e-01],
       [-2.26579578e+00, -4.41756022e-01],
       [-2.17630686e+00, -3.81081028e-01],
       [-2.10195347e+00, -3.02587108e-01],
       [-2.04621229e+00, -2.09944551e-01],
       [-2.01168972e+00, -1.07485220e-01],
       [-2.00000000e+00, -1.22464680e-16]]), array([[-3.25, -0.75],
       [-1.75, -0.75],
       [-1.75,  0.75],
       [-3.25,  0.75],
       [-3.25, -0.75]]), array([[-2.5,  0. ],
       [-2.5,  1. ]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[-0.75, -0.75],
       [ 0.75, -0.75],
       [ 0.75,  0.75],
       [-0.75,  0.75],
       [-0.75, -0.75]]), array([[0., 0.],
       [0., 1.]]), array([[ 3.00000000e+00,  0.00000000e+00],
       [ 2.98831028e+00,  1.07485220e-01],
       [ 2.95378771e+00,  2.09944551e-01],
       [ 2.89804653e+00,  3.02587108e-01],
       [ 2.82369314e+00,  3.81081028e-01],
       [ 2.73420422e+00,  4.41756022e-01],
       [ 2.63376417e+00,  4.81774996e-01],
       [ 2.52706945e+00,  4.99266707e-01],
       [ 2.41910900e+00,  4.93413261e-01],
       [ 2.31493092e+00,  4.64488360e-01],
       [ 2.21940647e+00,  4.13844499e-01],
       [ 2.13700225e+00,  3.43849729e-01],
       [ 2.07157141e+00,  2.57776929e-01],
       [ 2.02617341e+00,  1.59650765e-01],
       [ 2.00293102e+00,  5.40595092e-02],
       [ 2.00293102e+00, -5.40595092e-02],
       [ 2.02617341e+00, -1.59650765e-01],
       [ 2.07157141e+00, -2.57776929e-01],
       [ 2.13700225e+00, -3.43849729e-01],
       [ 2.21940647e+00, -4.13844499e-01],
       [ 2.31493092e+00, -4.64488360e-01],
       [ 2.41910900e+00, -4.93413261e-01],
       [ 2.52706945e+00, -4.99266707e-01],
       [ 2.63376417e+00, -4.81774996e-01],
       [ 2.73420422e+00, -4.41756022e-01],
       [ 2.82369314e+00, -3.81081028e-01],
       [ 2.89804653e+00, -3.02587108e-01],
       [ 2.95378771e+00, -2.09944551e-01],
       [ 2.98831028e+00, -1.07485220e-01],
       [ 3.00000000e+00, -1.22464680e-16]]), array([[ 1.75, -0.75],
       [ 3.25, -0.75],
       [ 3.25,  0.75],
       [ 1.75,  0.75],
       [ 1.75, -0.75]]), array([[2.5, 0. ],
       [2.5, 1. ]]), array([[ 5.50000000e+00,  0.00000000e+00],
       [ 5.48831028e+00,  1.07485220e-01],
       [ 5.45378771e+00,  2.09944551e-01],
       [ 5.39804653e+00,  3.02587108e-01],
       [ 5.32369314e+00,  3.81081028e-01],
       [ 5.23420422e+00,  4.41756022e-01],
       [ 5.13376417e+00,  4.81774996e-01],
       [ 5.02706945e+00,  4.99266707e-01],
       [ 4.91910900e+00,  4.93413261e-01],
       [ 4.81493092e+00,  4.64488360e-01],
       [ 4.71940647e+00,  4.13844499e-01],
       [ 4.63700225e+00,  3.43849729e-01],
       [ 4.57157141e+00,  2.57776929e-01],
       [ 4.52617341e+00,  1.59650765e-01],
       [ 4.50293102e+00,  5.40595092e-02],
       [ 4.50293102e+00, -5.40595092e-02],
       [ 4.52617341e+00, -1.59650765e-01],
       [ 4.57157141e+00, -2.57776929e-01],
       [ 4.63700225e+00, -3.43849729e-01],
       [ 4.71940647e+00, -4.13844499e-01],
       [ 4.81493092e+00, -4.64488360e-01],
       [ 4.91910900e+00, -4.93413261e-01],
       [ 5.02706945e+00, -4.99266707e-01],
       [ 5.13376417e+00, -4.81774996e-01],
       [ 5.23420422e+00, -4.41756022e-01],
       [ 5.32369314e+00, -3.81081028e-01],
       [ 5.39804653e+00, -3.02587108e-01],
       [ 5.45378771e+00, -2.09944551e-01],
       [ 5.48831028e+00, -1.07485220e-01],
       [ 5.50000000e+00, -1.22464680e-16]]), array([[ 4.25, -0.75],
       [ 5.75, -0.75],
       [ 5.75,  0.75],
       [ 4.25,  0.75],
       [ 4.25, -0.75]]), array([[5., 0.],
       [5., 1.]]), array([[0.0000000e+00, 2.2500000e+00],
       [1.8369702e-16, 5.2500000e+00]]), array([[-1.  ,  5.25],
       [ 1.  ,  5.25]]), array([[-1.        ,  5.25      ],
       [-1.01168972,  5.35748522],
       [-1.04621229,  5.45994455],
       [-1.10195347,  5.55258711],
       [-1.17630686,  5.63108103],
       [-1.26579578,  5.69175602],
       [-1.36623583,  5.731775  ],
       [-1.47293055,  5.74926671],
       [-1.580891  ,  5.74341326],
       [-1.68506908,  5.71448836],
       [-1.78059353,  5.6638445 ],
       [-1.86299775,  5.59384973],
       [-1.92842859,  5.50777693],
       [-1.97382659,  5.40965077],
       [-1.99706898,  5.30405951],
       [-1.99706898,  5.19594049],
       [-1.97382659,  5.09034923],
       [-1.92842859,  4.99222307],
       [-1.86299775,  4.90615027],
       [-1.78059353,  4.8361555 ],
       [-1.68506908,  4.78551164],
       [-1.580891  ,  4.75658674],
       [-1.47293055,  4.75073329],
       [-1.36623583,  4.768225  ],
       [-1.26579578,  4.80824398],
       [-1.17630686,  4.86891897],
       [-1.10195347,  4.94741289],
       [-1.04621229,  5.04005545],
       [-1.01168972,  5.14251478],
       [-1.        ,  5.25      ]]), array([[2.        , 5.25      ],
       [1.98831028, 5.35748522],
       [1.95378771, 5.45994455],
       [1.89804653, 5.55258711],
       [1.82369314, 5.63108103],
       [1.73420422, 5.69175602],
       [1.63376417, 5.731775  ],
       [1.52706945, 5.74926671],
       [1.419109  , 5.74341326],
       [1.31493092, 5.71448836],
       [1.21940647, 5.6638445 ],
       [1.13700225, 5.59384973],
       [1.07157141, 5.50777693],
       [1.02617341, 5.40965077],
       [1.00293102, 5.30405951],
       [1.00293102, 5.19594049],
       [1.02617341, 5.09034923],
       [1.07157141, 4.99222307],
       [1.13700225, 4.90615027],
       [1.21940647, 4.8361555 ],
       [1.31493092, 4.78551164],
       [1.419109  , 4.75658674],
       [1.52706945, 4.75073329],
       [1.63376417, 4.768225  ],
       [1.73420422, 4.80824398],
       [1.82369314, 4.86891897],
       [1.89804653, 4.94741289],
       [1.95378771, 5.04005545],
       [1.98831028, 5.14251478],
       [2.        , 5.25      ]])]]",31,(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 5 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),(connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (transform_matrix_scale_angle_x_y 1 0 (+ 2 0.5) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (* (- 5 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial']","['all_base_strokes', 'row_of_dials', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']","['0.0', '1.0', '1.5']","['1', '5.0', '1.0', '1.5', '(/ pi 2)', '1.0']",[],"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', '0.0', '1.0', '1.5']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', '1', '5.0', '1.0', '1.5', '(/ pi 2)', '1.0']","['all_base_strokes', 'row_of_dials', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '1', '5.0', '1.0', '1.5', '(/ pi 2)', '1.0']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-025.png
dials_context_programs_context_large_abstractions_026,dials_context_programs_test,(C (C (C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['C', 'C', 'C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '2', 'M', '1', '0', '-', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '+', '0', '*', '0.5', '*', '2', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '*', '+', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '*', '2', '0.5', '0.25', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '-', '0', '*', '+', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '*', '2', '0.5', '0.25', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5 ,  2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [ 8.5 , -2.25]]), array([[ 8.5 , -2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [-8.5 ,  2.25]]), array([[8.5  , 1.125],
       [9.5  , 1.125]]), array([[ 8.5  , -1.125],
       [ 9.5  , -1.125]]), array([[ 9.5  , -1.125],
       [ 9.5  ,  1.125]]), array([[ 8.5  , -1.125],
       [ 8.5  ,  1.125]]), array([[-9.5  ,  1.125],
       [-8.5  ,  1.125]]), array([[-9.5  , -1.125],
       [-8.5  , -1.125]]), array([[-8.5  , -1.125],
       [-8.5  ,  1.125]]), array([[-9.5  , -1.125],
       [-9.5  ,  1.125]]), array([[ 3.00000000e+00,  0.00000000e+00],
       [ 2.98831028e+00,  1.07485220e-01],
       [ 2.95378771e+00,  2.09944551e-01],
       [ 2.89804653e+00,  3.02587108e-01],
       [ 2.82369314e+00,  3.81081028e-01],
       [ 2.73420422e+00,  4.41756022e-01],
       [ 2.63376417e+00,  4.81774996e-01],
       [ 2.52706945e+00,  4.99266707e-01],
       [ 2.41910900e+00,  4.93413261e-01],
       [ 2.31493092e+00,  4.64488360e-01],
       [ 2.21940647e+00,  4.13844499e-01],
       [ 2.13700225e+00,  3.43849729e-01],
       [ 2.07157141e+00,  2.57776929e-01],
       [ 2.02617341e+00,  1.59650765e-01],
       [ 2.00293102e+00,  5.40595092e-02],
       [ 2.00293102e+00, -5.40595092e-02],
       [ 2.02617341e+00, -1.59650765e-01],
       [ 2.07157141e+00, -2.57776929e-01],
       [ 2.13700225e+00, -3.43849729e-01],
       [ 2.21940647e+00, -4.13844499e-01],
       [ 2.31493092e+00, -4.64488360e-01],
       [ 2.41910900e+00, -4.93413261e-01],
       [ 2.52706945e+00, -4.99266707e-01],
       [ 2.63376417e+00, -4.81774996e-01],
       [ 2.73420422e+00, -4.41756022e-01],
       [ 2.82369314e+00, -3.81081028e-01],
       [ 2.89804653e+00, -3.02587108e-01],
       [ 2.95378771e+00, -2.09944551e-01],
       [ 2.98831028e+00, -1.07485220e-01],
       [ 3.00000000e+00, -1.22464680e-16]]), array([[ 1.75, -0.75],
       [ 3.25, -0.75],
       [ 3.25,  0.75],
       [ 1.75,  0.75],
       [ 1.75, -0.75]]), array([[2.5, 0. ],
       [2.5, 1. ]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[-0.75, -0.75],
       [ 0.75, -0.75],
       [ 0.75,  0.75],
       [-0.75,  0.75],
       [-0.75, -0.75]]), array([[0., 0.],
       [0., 1.]]), array([[4.75, 2.25],
       [4.75, 5.25]]), array([[3.75, 5.25],
       [5.75, 5.25]]), array([[3.75      , 5.25      ],
       [3.73831028, 5.35748522],
       [3.70378771, 5.45994455],
       [3.64804653, 5.55258711],
       [3.57369314, 5.63108103],
       [3.48420422, 5.69175602],
       [3.38376417, 5.731775  ],
       [3.27706945, 5.74926671],
       [3.169109  , 5.74341326],
       [3.06493092, 5.71448836],
       [2.96940647, 5.6638445 ],
       [2.88700225, 5.59384973],
       [2.82157141, 5.50777693],
       [2.77617341, 5.40965077],
       [2.75293102, 5.30405951],
       [2.75293102, 5.19594049],
       [2.77617341, 5.09034923],
       [2.82157141, 4.99222307],
       [2.88700225, 4.90615027],
       [2.96940647, 4.8361555 ],
       [3.06493092, 4.78551164],
       [3.169109  , 4.75658674],
       [3.27706945, 4.75073329],
       [3.38376417, 4.768225  ],
       [3.48420422, 4.80824398],
       [3.57369314, 4.86891897],
       [3.64804653, 4.94741289],
       [3.70378771, 5.04005545],
       [3.73831028, 5.14251478],
       [3.75      , 5.25      ]]), array([[6.75      , 5.25      ],
       [6.73831028, 5.35748522],
       [6.70378771, 5.45994455],
       [6.64804653, 5.55258711],
       [6.57369314, 5.63108103],
       [6.48420422, 5.69175602],
       [6.38376417, 5.731775  ],
       [6.27706945, 5.74926671],
       [6.169109  , 5.74341326],
       [6.06493092, 5.71448836],
       [5.96940647, 5.6638445 ],
       [5.88700225, 5.59384973],
       [5.82157141, 5.50777693],
       [5.77617341, 5.40965077],
       [5.75293102, 5.30405951],
       [5.75293102, 5.19594049],
       [5.77617341, 5.09034923],
       [5.82157141, 4.99222307],
       [5.88700225, 4.90615027],
       [5.96940647, 4.8361555 ],
       [6.06493092, 4.78551164],
       [6.169109  , 4.75658674],
       [6.27706945, 4.75073329],
       [6.38376417, 4.768225  ],
       [6.48420422, 4.80824398],
       [6.57369314, 4.86891897],
       [6.64804653, 4.94741289],
       [6.70378771, 5.04005545],
       [6.73831028, 5.14251478],
       [6.75      , 5.25      ]]), array([[-4.75,  2.25],
       [-4.75,  5.25]]), array([[-5.75,  5.25],
       [-3.75,  5.25]]), array([[-5.75      ,  5.25      ],
       [-5.76168972,  5.35748522],
       [-5.79621229,  5.45994455],
       [-5.85195347,  5.55258711],
       [-5.92630686,  5.63108103],
       [-6.01579578,  5.69175602],
       [-6.11623583,  5.731775  ],
       [-6.22293055,  5.74926671],
       [-6.330891  ,  5.74341326],
       [-6.43506908,  5.71448836],
       [-6.53059353,  5.6638445 ],
       [-6.61299775,  5.59384973],
       [-6.67842859,  5.50777693],
       [-6.72382659,  5.40965077],
       [-6.74706898,  5.30405951],
       [-6.74706898,  5.19594049],
       [-6.72382659,  5.09034923],
       [-6.67842859,  4.99222307],
       [-6.61299775,  4.90615027],
       [-6.53059353,  4.8361555 ],
       [-6.43506908,  4.78551164],
       [-6.330891  ,  4.75658674],
       [-6.22293055,  4.75073329],
       [-6.11623583,  4.768225  ],
       [-6.01579578,  4.80824398],
       [-5.92630686,  4.86891897],
       [-5.85195347,  4.94741289],
       [-5.79621229,  5.04005545],
       [-5.76168972,  5.14251478],
       [-5.75      ,  5.25      ]]), array([[-2.75      ,  5.25      ],
       [-2.76168972,  5.35748522],
       [-2.79621229,  5.45994455],
       [-2.85195347,  5.55258711],
       [-2.92630686,  5.63108103],
       [-3.01579578,  5.69175602],
       [-3.11623583,  5.731775  ],
       [-3.22293055,  5.74926671],
       [-3.330891  ,  5.74341326],
       [-3.43506908,  5.71448836],
       [-3.53059353,  5.6638445 ],
       [-3.61299775,  5.59384973],
       [-3.67842859,  5.50777693],
       [-3.72382659,  5.40965077],
       [-3.74706898,  5.30405951],
       [-3.74706898,  5.19594049],
       [-3.72382659,  5.09034923],
       [-3.67842859,  4.99222307],
       [-3.61299775,  4.90615027],
       [-3.53059353,  4.8361555 ],
       [-3.43506908,  4.78551164],
       [-3.330891  ,  4.75658674],
       [-3.22293055,  4.75073329],
       [-3.11623583,  4.768225  ],
       [-3.01579578,  4.80824398],
       [-2.92630686,  4.86891897],
       [-2.85195347,  4.94741289],
       [-2.79621229,  5.04005545],
       [-2.76168972,  5.14251478],
       [-2.75      ,  5.25      ]])]]",26,(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (transform_matrix 1 0 (- 0 (+ 2 0.5)) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 2 0.5)) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', 'antenna_lines', 'antenna_finial']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']","['0.0', '1.0', '1.5']","['1', '2.0', '1.0', '1.5', '(/ pi 2)', '1.0', '1.0']",[],"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', '0.0', '1.0', '1.5']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', 'antenna_lines', 'antenna_finial', '1', '2.0', '1.0', '1.5', '(/ pi 2)', '1.0', '1.0']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '1', '2.0', '1.0', '1.5', '(/ pi 2)', '1.0', '1.0']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-026.png
dials_context_programs_context_large_abstractions_027,dials_context_programs_test,(C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 3 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),"['C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '3', 'M', '1', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '*', '-', '3', '1', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5']","[[array([[-8.5 ,  6.25],
       [ 8.5 ,  6.25]]), array([[-8.5 , -6.25],
       [ 8.5 , -6.25]]), array([[ 8.5 , -6.25],
       [ 8.5 ,  6.25]]), array([[-8.5 , -6.25],
       [-8.5 ,  6.25]]), array([[8.5  , 3.125],
       [9.5  , 3.125]]), array([[ 8.5  , -3.125],
       [ 9.5  , -3.125]]), array([[ 9.5  , -3.125],
       [ 9.5  ,  3.125]]), array([[ 8.5  , -3.125],
       [ 8.5  ,  3.125]]), array([[-9.5  ,  3.125],
       [-8.5  ,  3.125]]), array([[-9.5  , -3.125],
       [-8.5  , -3.125]]), array([[-8.5  , -3.125],
       [-8.5  ,  3.125]]), array([[-9.5  , -3.125],
       [-9.5  ,  3.125]]), array([[-2.00000000e+00,  0.00000000e+00],
       [-2.01168972e+00,  1.07485220e-01],
       [-2.04621229e+00,  2.09944551e-01],
       [-2.10195347e+00,  3.02587108e-01],
       [-2.17630686e+00,  3.81081028e-01],
       [-2.26579578e+00,  4.41756022e-01],
       [-2.36623583e+00,  4.81774996e-01],
       [-2.47293055e+00,  4.99266707e-01],
       [-2.58089100e+00,  4.93413261e-01],
       [-2.68506908e+00,  4.64488360e-01],
       [-2.78059353e+00,  4.13844499e-01],
       [-2.86299775e+00,  3.43849729e-01],
       [-2.92842859e+00,  2.57776929e-01],
       [-2.97382659e+00,  1.59650765e-01],
       [-2.99706898e+00,  5.40595092e-02],
       [-2.99706898e+00, -5.40595092e-02],
       [-2.97382659e+00, -1.59650765e-01],
       [-2.92842859e+00, -2.57776929e-01],
       [-2.86299775e+00, -3.43849729e-01],
       [-2.78059353e+00, -4.13844499e-01],
       [-2.68506908e+00, -4.64488360e-01],
       [-2.58089100e+00, -4.93413261e-01],
       [-2.47293055e+00, -4.99266707e-01],
       [-2.36623583e+00, -4.81774996e-01],
       [-2.26579578e+00, -4.41756022e-01],
       [-2.17630686e+00, -3.81081028e-01],
       [-2.10195347e+00, -3.02587108e-01],
       [-2.04621229e+00, -2.09944551e-01],
       [-2.01168972e+00, -1.07485220e-01],
       [-2.00000000e+00, -1.22464680e-16]]), array([[-3.25, -0.75],
       [-1.75, -0.75],
       [-1.75,  0.75],
       [-3.25,  0.75],
       [-3.25, -0.75]]), array([[-2.5,  0. ],
       [-2.5,  1. ]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[-0.75, -0.75],
       [ 0.75, -0.75],
       [ 0.75,  0.75],
       [-0.75,  0.75],
       [-0.75, -0.75]]), array([[0., 0.],
       [0., 1.]]), array([[ 3.00000000e+00,  0.00000000e+00],
       [ 2.98831028e+00,  1.07485220e-01],
       [ 2.95378771e+00,  2.09944551e-01],
       [ 2.89804653e+00,  3.02587108e-01],
       [ 2.82369314e+00,  3.81081028e-01],
       [ 2.73420422e+00,  4.41756022e-01],
       [ 2.63376417e+00,  4.81774996e-01],
       [ 2.52706945e+00,  4.99266707e-01],
       [ 2.41910900e+00,  4.93413261e-01],
       [ 2.31493092e+00,  4.64488360e-01],
       [ 2.21940647e+00,  4.13844499e-01],
       [ 2.13700225e+00,  3.43849729e-01],
       [ 2.07157141e+00,  2.57776929e-01],
       [ 2.02617341e+00,  1.59650765e-01],
       [ 2.00293102e+00,  5.40595092e-02],
       [ 2.00293102e+00, -5.40595092e-02],
       [ 2.02617341e+00, -1.59650765e-01],
       [ 2.07157141e+00, -2.57776929e-01],
       [ 2.13700225e+00, -3.43849729e-01],
       [ 2.21940647e+00, -4.13844499e-01],
       [ 2.31493092e+00, -4.64488360e-01],
       [ 2.41910900e+00, -4.93413261e-01],
       [ 2.52706945e+00, -4.99266707e-01],
       [ 2.63376417e+00, -4.81774996e-01],
       [ 2.73420422e+00, -4.41756022e-01],
       [ 2.82369314e+00, -3.81081028e-01],
       [ 2.89804653e+00, -3.02587108e-01],
       [ 2.95378771e+00, -2.09944551e-01],
       [ 2.98831028e+00, -1.07485220e-01],
       [ 3.00000000e+00, -1.22464680e-16]]), array([[ 1.75, -0.75],
       [ 3.25, -0.75],
       [ 3.25,  0.75],
       [ 1.75,  0.75],
       [ 1.75, -0.75]]), array([[2.5, 0. ],
       [2.5, 1. ]])]]",21,(connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 3 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),(connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (transform_matrix_scale_angle_x_y 1 0 (+ 2 0.5) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (* (- 3 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand']","['all_base_strokes', 'row_of_dials']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))']","['0.0', '1.0', '1.5']","['1', '3.0', '1.0', '1.5', '(/ pi 2)']",[],"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', '0.0', '1.0', '1.5']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', '1', '3.0', '1.0', '1.5', '(/ pi 2)']","['all_base_strokes', 'row_of_dials']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '1', '3.0', '1.0', '1.5', '(/ pi 2)']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-027.png
dials_context_programs_context_large_abstractions_028,dials_context_programs_test,(C (C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (+ 0 (* 0.5 (* 4 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['C', 'C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '4', 'M', '1', '0', '-', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '+', '0', '*', '0.5', '*', '4', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '0', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5 ,  2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [ 8.5 , -2.25]]), array([[ 8.5 , -2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [-8.5 ,  2.25]]), array([[8.5  , 1.125],
       [9.5  , 1.125]]), array([[ 8.5  , -1.125],
       [ 9.5  , -1.125]]), array([[ 9.5  , -1.125],
       [ 9.5  ,  1.125]]), array([[ 8.5  , -1.125],
       [ 8.5  ,  1.125]]), array([[-9.5  ,  1.125],
       [-8.5  ,  1.125]]), array([[-9.5  , -1.125],
       [-8.5  , -1.125]]), array([[-8.5  , -1.125],
       [-8.5  ,  1.125]]), array([[-9.5  , -1.125],
       [-9.5  ,  1.125]]), array([[ 5.50000000e+00,  0.00000000e+00],
       [ 5.48831028e+00,  1.07485220e-01],
       [ 5.45378771e+00,  2.09944551e-01],
       [ 5.39804653e+00,  3.02587108e-01],
       [ 5.32369314e+00,  3.81081028e-01],
       [ 5.23420422e+00,  4.41756022e-01],
       [ 5.13376417e+00,  4.81774996e-01],
       [ 5.02706945e+00,  4.99266707e-01],
       [ 4.91910900e+00,  4.93413261e-01],
       [ 4.81493092e+00,  4.64488360e-01],
       [ 4.71940647e+00,  4.13844499e-01],
       [ 4.63700225e+00,  3.43849729e-01],
       [ 4.57157141e+00,  2.57776929e-01],
       [ 4.52617341e+00,  1.59650765e-01],
       [ 4.50293102e+00,  5.40595092e-02],
       [ 4.50293102e+00, -5.40595092e-02],
       [ 4.52617341e+00, -1.59650765e-01],
       [ 4.57157141e+00, -2.57776929e-01],
       [ 4.63700225e+00, -3.43849729e-01],
       [ 4.71940647e+00, -4.13844499e-01],
       [ 4.81493092e+00, -4.64488360e-01],
       [ 4.91910900e+00, -4.93413261e-01],
       [ 5.02706945e+00, -4.99266707e-01],
       [ 5.13376417e+00, -4.81774996e-01],
       [ 5.23420422e+00, -4.41756022e-01],
       [ 5.32369314e+00, -3.81081028e-01],
       [ 5.39804653e+00, -3.02587108e-01],
       [ 5.45378771e+00, -2.09944551e-01],
       [ 5.48831028e+00, -1.07485220e-01],
       [ 5.50000000e+00, -1.22464680e-16]]), array([[ 4.25, -0.75],
       [ 5.75, -0.75],
       [ 5.75,  0.75],
       [ 4.25,  0.75],
       [ 4.25, -0.75]]), array([[5., 0.],
       [5., 1.]]), array([[ 3.00000000e+00,  0.00000000e+00],
       [ 2.98831028e+00,  1.07485220e-01],
       [ 2.95378771e+00,  2.09944551e-01],
       [ 2.89804653e+00,  3.02587108e-01],
       [ 2.82369314e+00,  3.81081028e-01],
       [ 2.73420422e+00,  4.41756022e-01],
       [ 2.63376417e+00,  4.81774996e-01],
       [ 2.52706945e+00,  4.99266707e-01],
       [ 2.41910900e+00,  4.93413261e-01],
       [ 2.31493092e+00,  4.64488360e-01],
       [ 2.21940647e+00,  4.13844499e-01],
       [ 2.13700225e+00,  3.43849729e-01],
       [ 2.07157141e+00,  2.57776929e-01],
       [ 2.02617341e+00,  1.59650765e-01],
       [ 2.00293102e+00,  5.40595092e-02],
       [ 2.00293102e+00, -5.40595092e-02],
       [ 2.02617341e+00, -1.59650765e-01],
       [ 2.07157141e+00, -2.57776929e-01],
       [ 2.13700225e+00, -3.43849729e-01],
       [ 2.21940647e+00, -4.13844499e-01],
       [ 2.31493092e+00, -4.64488360e-01],
       [ 2.41910900e+00, -4.93413261e-01],
       [ 2.52706945e+00, -4.99266707e-01],
       [ 2.63376417e+00, -4.81774996e-01],
       [ 2.73420422e+00, -4.41756022e-01],
       [ 2.82369314e+00, -3.81081028e-01],
       [ 2.89804653e+00, -3.02587108e-01],
       [ 2.95378771e+00, -2.09944551e-01],
       [ 2.98831028e+00, -1.07485220e-01],
       [ 3.00000000e+00, -1.22464680e-16]]), array([[ 1.75, -0.75],
       [ 3.25, -0.75],
       [ 3.25,  0.75],
       [ 1.75,  0.75],
       [ 1.75, -0.75]]), array([[2.5, 0. ],
       [2.5, 1. ]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[-0.75, -0.75],
       [ 0.75, -0.75],
       [ 0.75,  0.75],
       [-0.75,  0.75],
       [-0.75, -0.75]]), array([[0., 0.],
       [0., 1.]]), array([[-2.00000000e+00,  0.00000000e+00],
       [-2.01168972e+00,  1.07485220e-01],
       [-2.04621229e+00,  2.09944551e-01],
       [-2.10195347e+00,  3.02587108e-01],
       [-2.17630686e+00,  3.81081028e-01],
       [-2.26579578e+00,  4.41756022e-01],
       [-2.36623583e+00,  4.81774996e-01],
       [-2.47293055e+00,  4.99266707e-01],
       [-2.58089100e+00,  4.93413261e-01],
       [-2.68506908e+00,  4.64488360e-01],
       [-2.78059353e+00,  4.13844499e-01],
       [-2.86299775e+00,  3.43849729e-01],
       [-2.92842859e+00,  2.57776929e-01],
       [-2.97382659e+00,  1.59650765e-01],
       [-2.99706898e+00,  5.40595092e-02],
       [-2.99706898e+00, -5.40595092e-02],
       [-2.97382659e+00, -1.59650765e-01],
       [-2.92842859e+00, -2.57776929e-01],
       [-2.86299775e+00, -3.43849729e-01],
       [-2.78059353e+00, -4.13844499e-01],
       [-2.68506908e+00, -4.64488360e-01],
       [-2.58089100e+00, -4.93413261e-01],
       [-2.47293055e+00, -4.99266707e-01],
       [-2.36623583e+00, -4.81774996e-01],
       [-2.26579578e+00, -4.41756022e-01],
       [-2.17630686e+00, -3.81081028e-01],
       [-2.10195347e+00, -3.02587108e-01],
       [-2.04621229e+00, -2.09944551e-01],
       [-2.01168972e+00, -1.07485220e-01],
       [-2.00000000e+00, -1.22464680e-16]]), array([[-3.25, -0.75],
       [-1.75, -0.75],
       [-1.75,  0.75],
       [-3.25,  0.75],
       [-3.25, -0.75]]), array([[-2.5,  0. ],
       [-2.5,  1. ]]), array([[0.0000000e+00, 2.2500000e+00],
       [1.8369702e-16, 5.2500000e+00]]), array([[-1.  ,  5.25],
       [ 1.  ,  5.25]]), array([[-1.        ,  5.25      ],
       [-1.01168972,  5.35748522],
       [-1.04621229,  5.45994455],
       [-1.10195347,  5.55258711],
       [-1.17630686,  5.63108103],
       [-1.26579578,  5.69175602],
       [-1.36623583,  5.731775  ],
       [-1.47293055,  5.74926671],
       [-1.580891  ,  5.74341326],
       [-1.68506908,  5.71448836],
       [-1.78059353,  5.6638445 ],
       [-1.86299775,  5.59384973],
       [-1.92842859,  5.50777693],
       [-1.97382659,  5.40965077],
       [-1.99706898,  5.30405951],
       [-1.99706898,  5.19594049],
       [-1.97382659,  5.09034923],
       [-1.92842859,  4.99222307],
       [-1.86299775,  4.90615027],
       [-1.78059353,  4.8361555 ],
       [-1.68506908,  4.78551164],
       [-1.580891  ,  4.75658674],
       [-1.47293055,  4.75073329],
       [-1.36623583,  4.768225  ],
       [-1.26579578,  4.80824398],
       [-1.17630686,  4.86891897],
       [-1.10195347,  4.94741289],
       [-1.04621229,  5.04005545],
       [-1.01168972,  5.14251478],
       [-1.        ,  5.25      ]]), array([[2.        , 5.25      ],
       [1.98831028, 5.35748522],
       [1.95378771, 5.45994455],
       [1.89804653, 5.55258711],
       [1.82369314, 5.63108103],
       [1.73420422, 5.69175602],
       [1.63376417, 5.731775  ],
       [1.52706945, 5.74926671],
       [1.419109  , 5.74341326],
       [1.31493092, 5.71448836],
       [1.21940647, 5.6638445 ],
       [1.13700225, 5.59384973],
       [1.07157141, 5.50777693],
       [1.02617341, 5.40965077],
       [1.00293102, 5.30405951],
       [1.00293102, 5.19594049],
       [1.02617341, 5.09034923],
       [1.07157141, 4.99222307],
       [1.13700225, 4.90615027],
       [1.21940647, 4.8361555 ],
       [1.31493092, 4.78551164],
       [1.419109  , 4.75658674],
       [1.52706945, 4.75073329],
       [1.63376417, 4.768225  ],
       [1.73420422, 4.80824398],
       [1.82369314, 4.86891897],
       [1.89804653, 4.94741289],
       [1.95378771, 5.04005545],
       [1.98831028, 5.14251478],
       [2.        , 5.25      ]])]]",28,(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (transform_matrix 1 0 (- 0 (+ 2 0.5)) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (+ 0 (* 0.5 (* 4 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),(connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 2 0.5)) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (+ 0 (* 0.5 (* 4 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial']","['all_base_strokes', 'row_of_dials', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']","['0.0', '1.0', '1.5']","['1', '4.0', '1.0', '1.5', '(/ pi 2)', '1.0']",[],"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', '0.0', '1.0', '1.5']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', '1', '4.0', '1.0', '1.5', '(/ pi 2)', '1.0']","['all_base_strokes', 'row_of_dials', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '1', '4.0', '1.0', '1.5', '(/ pi 2)', '1.0']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-028.png
dials_context_programs_context_large_abstractions_029,dials_context_programs_test,(C (C (C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['C', 'C', 'C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '1', 'M', '1', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '*', '+', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '*', '2', '0.5', '0.25', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '-', '0', '*', '+', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '*', '2', '0.5', '0.25', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5 ,  6.25],
       [ 8.5 ,  6.25]]), array([[-8.5 , -6.25],
       [ 8.5 , -6.25]]), array([[ 8.5 , -6.25],
       [ 8.5 ,  6.25]]), array([[-8.5 , -6.25],
       [-8.5 ,  6.25]]), array([[8.5  , 3.125],
       [9.5  , 3.125]]), array([[ 8.5  , -3.125],
       [ 9.5  , -3.125]]), array([[ 9.5  , -3.125],
       [ 9.5  ,  3.125]]), array([[ 8.5  , -3.125],
       [ 8.5  ,  3.125]]), array([[-9.5  ,  3.125],
       [-8.5  ,  3.125]]), array([[-9.5  , -3.125],
       [-8.5  , -3.125]]), array([[-8.5  , -3.125],
       [-8.5  ,  3.125]]), array([[-9.5  , -3.125],
       [-9.5  ,  3.125]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[-0.75, -0.75],
       [ 0.75, -0.75],
       [ 0.75,  0.75],
       [-0.75,  0.75],
       [-0.75, -0.75]]), array([[0.000000e+00, 0.000000e+00],
       [6.123234e-17, 1.000000e+00]]), array([[4.75, 6.25],
       [4.75, 9.25]]), array([[3.75, 9.25],
       [5.75, 9.25]]), array([[3.75      , 9.25      ],
       [3.73831028, 9.35748522],
       [3.70378771, 9.45994455],
       [3.64804653, 9.55258711],
       [3.57369314, 9.63108103],
       [3.48420422, 9.69175602],
       [3.38376417, 9.731775  ],
       [3.27706945, 9.74926671],
       [3.169109  , 9.74341326],
       [3.06493092, 9.71448836],
       [2.96940647, 9.6638445 ],
       [2.88700225, 9.59384973],
       [2.82157141, 9.50777693],
       [2.77617341, 9.40965077],
       [2.75293102, 9.30405951],
       [2.75293102, 9.19594049],
       [2.77617341, 9.09034923],
       [2.82157141, 8.99222307],
       [2.88700225, 8.90615027],
       [2.96940647, 8.8361555 ],
       [3.06493092, 8.78551164],
       [3.169109  , 8.75658674],
       [3.27706945, 8.75073329],
       [3.38376417, 8.768225  ],
       [3.48420422, 8.80824398],
       [3.57369314, 8.86891897],
       [3.64804653, 8.94741289],
       [3.70378771, 9.04005545],
       [3.73831028, 9.14251478],
       [3.75      , 9.25      ]]), array([[6.75      , 9.25      ],
       [6.73831028, 9.35748522],
       [6.70378771, 9.45994455],
       [6.64804653, 9.55258711],
       [6.57369314, 9.63108103],
       [6.48420422, 9.69175602],
       [6.38376417, 9.731775  ],
       [6.27706945, 9.74926671],
       [6.169109  , 9.74341326],
       [6.06493092, 9.71448836],
       [5.96940647, 9.6638445 ],
       [5.88700225, 9.59384973],
       [5.82157141, 9.50777693],
       [5.77617341, 9.40965077],
       [5.75293102, 9.30405951],
       [5.75293102, 9.19594049],
       [5.77617341, 9.09034923],
       [5.82157141, 8.99222307],
       [5.88700225, 8.90615027],
       [5.96940647, 8.8361555 ],
       [6.06493092, 8.78551164],
       [6.169109  , 8.75658674],
       [6.27706945, 8.75073329],
       [6.38376417, 8.768225  ],
       [6.48420422, 8.80824398],
       [6.57369314, 8.86891897],
       [6.64804653, 8.94741289],
       [6.70378771, 9.04005545],
       [6.73831028, 9.14251478],
       [6.75      , 9.25      ]]), array([[-4.75,  6.25],
       [-4.75,  9.25]]), array([[-5.75,  9.25],
       [-3.75,  9.25]]), array([[-5.75      ,  9.25      ],
       [-5.76168972,  9.35748522],
       [-5.79621229,  9.45994455],
       [-5.85195347,  9.55258711],
       [-5.92630686,  9.63108103],
       [-6.01579578,  9.69175602],
       [-6.11623583,  9.731775  ],
       [-6.22293055,  9.74926671],
       [-6.330891  ,  9.74341326],
       [-6.43506908,  9.71448836],
       [-6.53059353,  9.6638445 ],
       [-6.61299775,  9.59384973],
       [-6.67842859,  9.50777693],
       [-6.72382659,  9.40965077],
       [-6.74706898,  9.30405951],
       [-6.74706898,  9.19594049],
       [-6.72382659,  9.09034923],
       [-6.67842859,  8.99222307],
       [-6.61299775,  8.90615027],
       [-6.53059353,  8.8361555 ],
       [-6.43506908,  8.78551164],
       [-6.330891  ,  8.75658674],
       [-6.22293055,  8.75073329],
       [-6.11623583,  8.768225  ],
       [-6.01579578,  8.80824398],
       [-5.92630686,  8.86891897],
       [-5.85195347,  8.94741289],
       [-5.79621229,  9.04005545],
       [-5.76168972,  9.14251478],
       [-5.75      ,  9.25      ]]), array([[-2.75      ,  9.25      ],
       [-2.76168972,  9.35748522],
       [-2.79621229,  9.45994455],
       [-2.85195347,  9.55258711],
       [-2.92630686,  9.63108103],
       [-3.01579578,  9.69175602],
       [-3.11623583,  9.731775  ],
       [-3.22293055,  9.74926671],
       [-3.330891  ,  9.74341326],
       [-3.43506908,  9.71448836],
       [-3.53059353,  9.6638445 ],
       [-3.61299775,  9.59384973],
       [-3.67842859,  9.50777693],
       [-3.72382659,  9.40965077],
       [-3.74706898,  9.30405951],
       [-3.74706898,  9.19594049],
       [-3.72382659,  9.09034923],
       [-3.67842859,  8.99222307],
       [-3.61299775,  8.90615027],
       [-3.53059353,  8.8361555 ],
       [-3.43506908,  8.78551164],
       [-3.330891  ,  8.75658674],
       [-3.22293055,  8.75073329],
       [-3.11623583,  8.768225  ],
       [-3.01579578,  8.80824398],
       [-2.92630686,  8.86891897],
       [-2.85195347,  8.94741289],
       [-2.79621229,  9.04005545],
       [-2.76168972,  9.14251478],
       [-2.75      ,  9.25      ]])]]",23,(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix_scale_angle_x_y 1 0 (+ 2 0.5) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', 'antenna_lines', 'antenna_finial']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']","['0.0', '1.0', '1.5']","['1', '1.0', '1.0', '1.5', '(/ pi 2)', '1.0', '1.0']",[],"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', '0.0', '1.0', '1.5']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', 'antenna_lines', 'antenna_finial', '1', '1.0', '1.0', '1.5', '(/ pi 2)', '1.0', '1.0']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '1', '1.0', '1.0', '1.5', '(/ pi 2)', '1.0', '1.0']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-029.png
dials_context_programs_context_small_abstractions_000,dials_context_programs_train,(C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '0', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5 ,  2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [ 8.5 , -2.25]]), array([[ 8.5 , -2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [-8.5 ,  2.25]]), array([[0.0000000e+00, 2.2500000e+00],
       [1.8369702e-16, 5.2500000e+00]]), array([[-1.  ,  5.25],
       [ 1.  ,  5.25]]), array([[-1.        ,  5.25      ],
       [-1.01168972,  5.35748522],
       [-1.04621229,  5.45994455],
       [-1.10195347,  5.55258711],
       [-1.17630686,  5.63108103],
       [-1.26579578,  5.69175602],
       [-1.36623583,  5.731775  ],
       [-1.47293055,  5.74926671],
       [-1.580891  ,  5.74341326],
       [-1.68506908,  5.71448836],
       [-1.78059353,  5.6638445 ],
       [-1.86299775,  5.59384973],
       [-1.92842859,  5.50777693],
       [-1.97382659,  5.40965077],
       [-1.99706898,  5.30405951],
       [-1.99706898,  5.19594049],
       [-1.97382659,  5.09034923],
       [-1.92842859,  4.99222307],
       [-1.86299775,  4.90615027],
       [-1.78059353,  4.8361555 ],
       [-1.68506908,  4.78551164],
       [-1.580891  ,  4.75658674],
       [-1.47293055,  4.75073329],
       [-1.36623583,  4.768225  ],
       [-1.26579578,  4.80824398],
       [-1.17630686,  4.86891897],
       [-1.10195347,  4.94741289],
       [-1.04621229,  5.04005545],
       [-1.01168972,  5.14251478],
       [-1.        ,  5.25      ]]), array([[2.        , 5.25      ],
       [1.98831028, 5.35748522],
       [1.95378771, 5.45994455],
       [1.89804653, 5.55258711],
       [1.82369314, 5.63108103],
       [1.73420422, 5.69175602],
       [1.63376417, 5.731775  ],
       [1.52706945, 5.74926671],
       [1.419109  , 5.74341326],
       [1.31493092, 5.71448836],
       [1.21940647, 5.6638445 ],
       [1.13700225, 5.59384973],
       [1.07157141, 5.50777693],
       [1.02617341, 5.40965077],
       [1.00293102, 5.30405951],
       [1.00293102, 5.19594049],
       [1.02617341, 5.09034923],
       [1.07157141, 4.99222307],
       [1.13700225, 4.90615027],
       [1.21940647, 4.8361555 ],
       [1.31493092, 4.78551164],
       [1.419109  , 4.75658674],
       [1.52706945, 4.75073329],
       [1.63376417, 4.768225  ],
       [1.73420422, 4.80824398],
       [1.82369314, 4.86891897],
       [1.89804653, 4.94741289],
       [1.95378771, 5.04005545],
       [1.98831028, 5.14251478],
       [2.        , 5.25      ]])]]",8,(connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),(connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['base_tier_shape', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial']","['base_tiers', 'antenna_lines', 'antenna_finial']","['all_base_strokes', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']",['0.0'],"['1', '1.0']",[],"['base_tier_shape', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', '0.0']","['base_tiers', 'antenna_lines', 'antenna_finial', '1', '1.0']","['all_base_strokes', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '0.0']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '1', '1.0']","['(T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-030.png
dials_context_programs_context_small_abstractions_001,dials_context_programs_train,(C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'r', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'r', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '0', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5 ,  2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [ 8.5 , -2.25]]), array([[ 8.5 , -2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [-8.5 ,  2.25]]), array([[0.0000000e+00, 2.2500000e+00],
       [1.8369702e-16, 5.2500000e+00]]), array([[-1.  ,  5.25],
       [ 1.  ,  5.25]]), array([[-2.  ,  4.75],
       [-1.  ,  4.75],
       [-1.  ,  5.75],
       [-2.  ,  5.75],
       [-2.  ,  4.75]]), array([[1.  , 4.75],
       [2.  , 4.75],
       [2.  , 5.75],
       [1.  , 5.75],
       [1.  , 4.75]])]]",8,(connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),(connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['base_tier_shape', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial']","['base_tiers', 'antenna_lines', 'antenna_finial']","['all_base_strokes', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T r (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T r (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']",['0.0'],"['1', '1.0']",[],"['base_tier_shape', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', '0.0']","['base_tiers', 'antenna_lines', 'antenna_finial', '1', '1.0']","['all_base_strokes', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T r (M 1 0 (+ 0.5 1) (* 0.5 1)))', '0.0']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T r (M 1 0 (+ 0.5 1) (* 0.5 1)))', '1', '1.0']","['(T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-031.png
dials_context_programs_context_small_abstractions_002,dials_context_programs_train,(C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'C', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '1', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '0', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5 ,  2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [ 8.5 , -2.25]]), array([[ 8.5 , -2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [-8.5 ,  2.25]]), array([[0.0000000e+00, 2.2500000e+00],
       [1.8369702e-16, 5.2500000e+00]]), array([[-1.  ,  5.25],
       [ 1.  ,  5.25]]), array([[-1.  ,  4.25],
       [ 1.  ,  4.25]]), array([[-1.        ,  5.25      ],
       [-1.01168972,  5.35748522],
       [-1.04621229,  5.45994455],
       [-1.10195347,  5.55258711],
       [-1.17630686,  5.63108103],
       [-1.26579578,  5.69175602],
       [-1.36623583,  5.731775  ],
       [-1.47293055,  5.74926671],
       [-1.580891  ,  5.74341326],
       [-1.68506908,  5.71448836],
       [-1.78059353,  5.6638445 ],
       [-1.86299775,  5.59384973],
       [-1.92842859,  5.50777693],
       [-1.97382659,  5.40965077],
       [-1.99706898,  5.30405951],
       [-1.99706898,  5.19594049],
       [-1.97382659,  5.09034923],
       [-1.92842859,  4.99222307],
       [-1.86299775,  4.90615027],
       [-1.78059353,  4.8361555 ],
       [-1.68506908,  4.78551164],
       [-1.580891  ,  4.75658674],
       [-1.47293055,  4.75073329],
       [-1.36623583,  4.768225  ],
       [-1.26579578,  4.80824398],
       [-1.17630686,  4.86891897],
       [-1.10195347,  4.94741289],
       [-1.04621229,  5.04005545],
       [-1.01168972,  5.14251478],
       [-1.        ,  5.25      ]]), array([[2.        , 5.25      ],
       [1.98831028, 5.35748522],
       [1.95378771, 5.45994455],
       [1.89804653, 5.55258711],
       [1.82369314, 5.63108103],
       [1.73420422, 5.69175602],
       [1.63376417, 5.731775  ],
       [1.52706945, 5.74926671],
       [1.419109  , 5.74341326],
       [1.31493092, 5.71448836],
       [1.21940647, 5.6638445 ],
       [1.13700225, 5.59384973],
       [1.07157141, 5.50777693],
       [1.02617341, 5.40965077],
       [1.00293102, 5.30405951],
       [1.00293102, 5.19594049],
       [1.02617341, 5.09034923],
       [1.07157141, 4.99222307],
       [1.13700225, 4.90615027],
       [1.21940647, 4.8361555 ],
       [1.31493092, 4.78551164],
       [1.419109  , 4.75658674],
       [1.52706945, 4.75073329],
       [1.63376417, 4.768225  ],
       [1.73420422, 4.80824398],
       [1.82369314, 4.86891897],
       [1.89804653, 4.94741289],
       [1.95378771, 5.04005545],
       [1.98831028, 5.14251478],
       [2.        , 5.25      ]])]]",9,(connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),(connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['base_tier_shape', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial']","['base_tiers', 'antenna_lines', 'antenna_finial']","['all_base_strokes', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0)))', '(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']",['0.0'],"['1', '2.0']",[],"['base_tier_shape', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', '0.0']","['base_tiers', 'antenna_lines', 'antenna_finial', '1', '2.0']","['all_base_strokes', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '0.0']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '1', '2.0']","['(T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0)))', '(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-032.png
dials_context_programs_context_small_abstractions_003,dials_context_programs_train,(C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))) (M 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '1', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '2', 'M', '1', '0', '0', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5 ,  2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [ 8.5 , -2.25]]), array([[ 8.5 , -2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [-8.5 ,  2.25]]), array([[0.0000000e+00, 2.2500000e+00],
       [1.8369702e-16, 5.2500000e+00]]), array([[-1.  ,  5.25],
       [ 1.  ,  5.25]]), array([[-1.  ,  4.25],
       [ 1.  ,  4.25]]), array([[-1.  ,  3.25],
       [ 1.  ,  3.25]])]]",8,(connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform_matrix 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),(connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['base_tier_shape', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_horizontal_line']","['base_tiers', 'antenna_lines']","['all_base_strokes', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))']","['(T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2))))']",['0.0'],"['1', '3.0']",[],"['base_tier_shape', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_horizontal_line', '0.0']","['base_tiers', 'antenna_lines', '1', '3.0']","['all_base_strokes', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '0.0']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '1', '3.0']","['(T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-033.png
dials_context_programs_context_small_abstractions_004,dials_context_programs_train,(C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'C', 'C', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '1', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '2', 'T', 'T', 'r', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'r', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '0', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5 ,  2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [ 8.5 , -2.25]]), array([[ 8.5 , -2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [-8.5 ,  2.25]]), array([[0.0000000e+00, 2.2500000e+00],
       [1.8369702e-16, 5.2500000e+00]]), array([[-1.  ,  5.25],
       [ 1.  ,  5.25]]), array([[-1.  ,  4.25],
       [ 1.  ,  4.25]]), array([[-1.  ,  3.25],
       [ 1.  ,  3.25]]), array([[-2.  ,  4.75],
       [-1.  ,  4.75],
       [-1.  ,  5.75],
       [-2.  ,  5.75],
       [-2.  ,  4.75]]), array([[1.  , 4.75],
       [2.  , 4.75],
       [2.  , 5.75],
       [1.  , 5.75],
       [1.  , 4.75]])]]",10,(connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),(connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 2)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['base_tier_shape', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial']","['base_tiers', 'antenna_lines', 'antenna_finial']","['all_base_strokes', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T r (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T r (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0)))', '(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']",['0.0'],"['1', '3.0']",[],"['base_tier_shape', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', '0.0']","['base_tiers', 'antenna_lines', 'antenna_finial', '1', '3.0']","['all_base_strokes', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T r (M 1 0 (+ 0.5 1) (* 0.5 1)))', '0.0']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T r (M 1 0 (+ 0.5 1) (* 0.5 1)))', '1', '3.0']","['(T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0)))', '(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-034.png
dials_context_programs_context_small_abstractions_005,dials_context_programs_train,(C (C (C (C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (M 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))))))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (T (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (M 1 0 (* (+ (max (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0)))))) (T (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (M 1 0 (- 0 (* (+ (max (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0)))))),"['C', 'C', 'C', 'C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '1', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '1', 'M', '1', '0', '0', '+', '*', '0.5', '0', '*', '0.5', '+', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '1', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'repeat', 'c', '1', 'M', '+', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '1', 'M', '1', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', 'T', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'M', '1', '0', '*', '+', 'max', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '1', '*', '4', '0.5', '*', '2', '*', '2', '0.5', '0.25', '+', '2', '+', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '1', '+', '*', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0', 'T', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'M', '1', '0', '-', '0', '*', '+', 'max', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '1', '*', '4', '0.5', '*', '2', '*', '2', '0.5', '0.25', '+', '2', '+', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '1', '+', '*', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5 ,  2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [ 8.5 , -2.25]]), array([[ 8.5 , -2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [-8.5 ,  2.25]]), array([[-7.5,  4.5],
       [ 7.5,  4.5]]), array([[-7.5 ,  2.25],
       [ 7.5 ,  2.25]]), array([[7.5 , 2.25],
       [7.5 , 4.5 ]]), array([[-7.5 ,  2.25],
       [-7.5 ,  4.5 ]]), array([[8.5  , 1.125],
       [9.5  , 1.125]]), array([[ 8.5  , -1.125],
       [ 9.5  , -1.125]]), array([[ 9.5  , -1.125],
       [ 9.5  ,  1.125]]), array([[ 8.5  , -1.125],
       [ 8.5  ,  1.125]]), array([[-9.5  ,  1.125],
       [-8.5  ,  1.125]]), array([[-9.5  , -1.125],
       [-8.5  , -1.125]]), array([[-8.5  , -1.125],
       [-8.5  ,  1.125]]), array([[-9.5  , -1.125],
       [-9.5  ,  1.125]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[0.000000e+00, 0.000000e+00],
       [6.123234e-17, 1.000000e+00]]), array([[4.75, 4.5 ],
       [4.75, 7.5 ]]), array([[3.75, 7.5 ],
       [5.75, 7.5 ]]), array([[-4.75,  4.5 ],
       [-4.75,  7.5 ]]), array([[-5.75,  7.5 ],
       [-3.75,  7.5 ]])]]",22,(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (transform_matrix 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))))))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (repeat_transform circle 1 (transform_matrix (+ 1 0.5) 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (transform (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform_matrix 1 0 (* (+ (max (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0)))))) (transform (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform_matrix 1 0 (- 0 (* (+ (max (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0)))))),(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))))))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (repeat_transform_n_times base_circle 1 (transform_matrix_scale_angle_x_y (+ 1 0.5) 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix_scale_angle_x_y 1 0 (+ 2 0.5) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (apply_transform_matrix_to_stroke (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform_matrix_scale_angle_x_y 1 0 (* (+ (max (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0)))))) (apply_transform_matrix_to_stroke (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* (+ (max (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0)))))),"['base_tier_shape', 'base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_vertical_line', 'antenna_horizontal_line']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_lines']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'c', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))']","['(C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (M 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))))))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0))))', '(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0))))']","['0.0', '3.375', '1.5']","['2', '1.0', '1.0', '1.5', '1.0', '(/ pi 2)', '1.0', '1.0']",[],"['base_tier_shape', 'base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_vertical_line', 'antenna_horizontal_line', '0.0', '3.375', '1.5']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_lines', '2', '1.0', '1.0', '1.5', '1.0', '(/ pi 2)', '1.0', '1.0']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '0.0', '3.375', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'c', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '2', '1.0', '1.0', '1.5', '1.0', '(/ pi 2)', '1.0', '1.0']","['(C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (M 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))))))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0))))', '(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-035.png
dials_context_programs_context_small_abstractions_006,dials_context_programs_train,(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (M 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))))))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),"['C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '1', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '1', 'M', '1', '0', '0', '+', '*', '0.5', '0', '*', '0.5', '+', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '1', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'c', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '1', 'M', '1', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5']","[[array([[-8.5 ,  2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [ 8.5 , -2.25]]), array([[ 8.5 , -2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [-8.5 ,  2.25]]), array([[-7.5,  4.5],
       [ 7.5,  4.5]]), array([[-7.5 ,  2.25],
       [ 7.5 ,  2.25]]), array([[7.5 , 2.25],
       [7.5 , 4.5 ]]), array([[-7.5 ,  2.25],
       [-7.5 ,  4.5 ]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[ 7.50000000e-01,  0.00000000e+00],
       [ 7.32465417e-01,  1.61227830e-01],
       [ 6.80681565e-01,  3.14916826e-01],
       [ 5.97069799e-01,  4.53880661e-01],
       [ 4.85539714e-01,  5.71621541e-01],
       [ 3.51306331e-01,  6.62634033e-01],
       [ 2.00646254e-01,  7.22662494e-01],
       [ 4.06041814e-02,  7.48900060e-01],
       [-1.21336497e-01,  7.40119892e-01],
       [-2.77603617e-01,  6.96732540e-01],
       [-4.20890299e-01,  6.20766749e-01],
       [-5.44496619e-01,  5.15774594e-01],
       [-6.42642882e-01,  3.86665393e-01],
       [-7.10739878e-01,  2.39476148e-01],
       [-7.45603468e-01,  8.10892638e-02],
       [-7.45603468e-01, -8.10892638e-02],
       [-7.10739878e-01, -2.39476148e-01],
       [-6.42642882e-01, -3.86665393e-01],
       [-5.44496619e-01, -5.15774594e-01],
       [-4.20890299e-01, -6.20766749e-01],
       [-2.77603617e-01, -6.96732540e-01],
       [-1.21336497e-01, -7.40119892e-01],
       [ 4.06041814e-02, -7.48900060e-01],
       [ 2.00646254e-01, -7.22662494e-01],
       [ 3.51306331e-01, -6.62634033e-01],
       [ 4.85539714e-01, -5.71621541e-01],
       [ 5.97069799e-01, -4.53880661e-01],
       [ 6.80681565e-01, -3.14916826e-01],
       [ 7.32465417e-01, -1.61227830e-01],
       [ 7.50000000e-01, -1.83697020e-16]]), array([[0.000000e+00, 0.000000e+00],
       [6.123234e-17, 1.000000e+00]])]]",11,(connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (transform_matrix 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))))))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform circle (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),(connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))))))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix_scale_angle_x_y 1 0 (+ 2 0.5) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),"['base_tier_shape', 'base_tier_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand']","['base_tiers', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand']","['all_base_strokes', 'row_of_dials']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)))', 'repeat_x', 'repeat_y', 'c', '(T l (M 1 0 (- 0 0.5) 0))']","['(C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (M 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))))))))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))']","['0.0', '3.375', '1.0', '1.5']","['2', '1.0', '1.0', '1.5', '(/ pi 2)']",[],"['base_tier_shape', 'base_tier_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', '0.0', '3.375', '1.0', '1.5']","['base_tiers', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', '2', '1.0', '1.0', '1.5', '(/ pi 2)']","['all_base_strokes', 'row_of_dials']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '0.0', '3.375', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)))', 'repeat_x', 'repeat_y', 'c', '(T l (M 1 0 (- 0 0.5) 0))', '2', '1.0', '1.0', '1.5', '(/ pi 2)']","['(C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (M 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))))))))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-036.png
dials_context_programs_context_small_abstractions_007,dials_context_programs_train,(C (C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (T (C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['C', 'C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'repeat', 'c', '1', 'M', '+', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '1', 'M', '1', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', 'T', 'C', 'C', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '1', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '2', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '0', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5 ,  6.25],
       [ 8.5 ,  6.25]]), array([[-8.5 , -6.25],
       [ 8.5 , -6.25]]), array([[ 8.5 , -6.25],
       [ 8.5 ,  6.25]]), array([[-8.5 , -6.25],
       [-8.5 ,  6.25]]), array([[8.5  , 3.125],
       [9.5  , 3.125]]), array([[ 8.5  , -3.125],
       [ 9.5  , -3.125]]), array([[ 9.5  , -3.125],
       [ 9.5  ,  3.125]]), array([[ 8.5  , -3.125],
       [ 8.5  ,  3.125]]), array([[-9.5  ,  3.125],
       [-8.5  ,  3.125]]), array([[-9.5  , -3.125],
       [-8.5  , -3.125]]), array([[-8.5  , -3.125],
       [-8.5  ,  3.125]]), array([[-9.5  , -3.125],
       [-9.5  ,  3.125]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[0.000000e+00, 0.000000e+00],
       [6.123234e-17, 1.000000e+00]]), array([[0.0000000e+00, 6.2500000e+00],
       [1.8369702e-16, 9.2500000e+00]]), array([[-1.  ,  9.25],
       [ 1.  ,  9.25]]), array([[-1.  ,  8.25],
       [ 1.  ,  8.25]]), array([[-1.  ,  7.25],
       [ 1.  ,  7.25]]), array([[-1.        ,  9.25      ],
       [-1.01168972,  9.35748522],
       [-1.04621229,  9.45994455],
       [-1.10195347,  9.55258711],
       [-1.17630686,  9.63108103],
       [-1.26579578,  9.69175602],
       [-1.36623583,  9.731775  ],
       [-1.47293055,  9.74926671],
       [-1.580891  ,  9.74341326],
       [-1.68506908,  9.71448836],
       [-1.78059353,  9.6638445 ],
       [-1.86299775,  9.59384973],
       [-1.92842859,  9.50777693],
       [-1.97382659,  9.40965077],
       [-1.99706898,  9.30405951],
       [-1.99706898,  9.19594049],
       [-1.97382659,  9.09034923],
       [-1.92842859,  8.99222307],
       [-1.86299775,  8.90615027],
       [-1.78059353,  8.8361555 ],
       [-1.68506908,  8.78551164],
       [-1.580891  ,  8.75658674],
       [-1.47293055,  8.75073329],
       [-1.36623583,  8.768225  ],
       [-1.26579578,  8.80824398],
       [-1.17630686,  8.86891897],
       [-1.10195347,  8.94741289],
       [-1.04621229,  9.04005545],
       [-1.01168972,  9.14251478],
       [-1.        ,  9.25      ]]), array([[2.        , 9.25      ],
       [1.98831028, 9.35748522],
       [1.95378771, 9.45994455],
       [1.89804653, 9.55258711],
       [1.82369314, 9.63108103],
       [1.73420422, 9.69175602],
       [1.63376417, 9.731775  ],
       [1.52706945, 9.74926671],
       [1.419109  , 9.74341326],
       [1.31493092, 9.71448836],
       [1.21940647, 9.6638445 ],
       [1.13700225, 9.59384973],
       [1.07157141, 9.50777693],
       [1.02617341, 9.40965077],
       [1.00293102, 9.30405951],
       [1.00293102, 9.19594049],
       [1.02617341, 9.09034923],
       [1.07157141, 8.99222307],
       [1.13700225, 8.90615027],
       [1.21940647, 8.8361555 ],
       [1.31493092, 8.78551164],
       [1.419109  , 8.75658674],
       [1.52706945, 8.75073329],
       [1.63376417, 8.768225  ],
       [1.73420422, 8.80824398],
       [1.82369314, 8.86891897],
       [1.89804653, 8.94741289],
       [1.95378771, 9.04005545],
       [1.98831028, 9.14251478],
       [2.        , 9.25      ]])]]",20,(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (repeat_transform circle 1 (transform_matrix (+ 1 0.5) 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (transform (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),(connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (repeat_transform_n_times base_circle 1 (transform_matrix_scale_angle_x_y (+ 1 0.5) 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix_scale_angle_x_y 1 0 (+ 2 0.5) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 2)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial']","['all_base_strokes', 'row_of_dials', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'c', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']","['0.0', '1.5']","['1', '1.0', '1.0', '1.5', '1.0', '(/ pi 2)', '3.0']",[],"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', '0.0', '1.5']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', '1', '1.0', '1.0', '1.5', '1.0', '(/ pi 2)', '3.0']","['all_base_strokes', 'row_of_dials', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '0.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'c', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '1', '1.0', '1.0', '1.5', '1.0', '(/ pi 2)', '3.0']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-037.png
dials_context_programs_context_small_abstractions_008,dials_context_programs_train,(C (C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (M 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))))))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 5 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),"['C', 'C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '1', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '1', 'M', '1', '0', '0', '+', '*', '0.5', '0', '*', '0.5', '+', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '1', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '5', 'M', '1', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '*', '-', '5', '1', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5']","[[array([[-8.5 ,  2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [ 8.5 , -2.25]]), array([[ 8.5 , -2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [-8.5 ,  2.25]]), array([[-7.5,  4.5],
       [ 7.5,  4.5]]), array([[-7.5 ,  2.25],
       [ 7.5 ,  2.25]]), array([[7.5 , 2.25],
       [7.5 , 4.5 ]]), array([[-7.5 ,  2.25],
       [-7.5 ,  4.5 ]]), array([[8.5  , 1.125],
       [9.5  , 1.125]]), array([[ 8.5  , -1.125],
       [ 9.5  , -1.125]]), array([[ 9.5  , -1.125],
       [ 9.5  ,  1.125]]), array([[ 8.5  , -1.125],
       [ 8.5  ,  1.125]]), array([[-9.5  ,  1.125],
       [-8.5  ,  1.125]]), array([[-9.5  , -1.125],
       [-8.5  , -1.125]]), array([[-8.5  , -1.125],
       [-8.5  ,  1.125]]), array([[-9.5  , -1.125],
       [-9.5  ,  1.125]]), array([[-4.50000000e+00,  0.00000000e+00],
       [-4.51168972e+00,  1.07485220e-01],
       [-4.54621229e+00,  2.09944551e-01],
       [-4.60195347e+00,  3.02587108e-01],
       [-4.67630686e+00,  3.81081028e-01],
       [-4.76579578e+00,  4.41756022e-01],
       [-4.86623583e+00,  4.81774996e-01],
       [-4.97293055e+00,  4.99266707e-01],
       [-5.08089100e+00,  4.93413261e-01],
       [-5.18506908e+00,  4.64488360e-01],
       [-5.28059353e+00,  4.13844499e-01],
       [-5.36299775e+00,  3.43849729e-01],
       [-5.42842859e+00,  2.57776929e-01],
       [-5.47382659e+00,  1.59650765e-01],
       [-5.49706898e+00,  5.40595092e-02],
       [-5.49706898e+00, -5.40595092e-02],
       [-5.47382659e+00, -1.59650765e-01],
       [-5.42842859e+00, -2.57776929e-01],
       [-5.36299775e+00, -3.43849729e-01],
       [-5.28059353e+00, -4.13844499e-01],
       [-5.18506908e+00, -4.64488360e-01],
       [-5.08089100e+00, -4.93413261e-01],
       [-4.97293055e+00, -4.99266707e-01],
       [-4.86623583e+00, -4.81774996e-01],
       [-4.76579578e+00, -4.41756022e-01],
       [-4.67630686e+00, -3.81081028e-01],
       [-4.60195347e+00, -3.02587108e-01],
       [-4.54621229e+00, -2.09944551e-01],
       [-4.51168972e+00, -1.07485220e-01],
       [-4.50000000e+00, -1.22464680e-16]]), array([[-5.75, -0.75],
       [-4.25, -0.75],
       [-4.25,  0.75],
       [-5.75,  0.75],
       [-5.75, -0.75]]), array([[-5.,  0.],
       [-5.,  1.]]), array([[-2.00000000e+00,  0.00000000e+00],
       [-2.01168972e+00,  1.07485220e-01],
       [-2.04621229e+00,  2.09944551e-01],
       [-2.10195347e+00,  3.02587108e-01],
       [-2.17630686e+00,  3.81081028e-01],
       [-2.26579578e+00,  4.41756022e-01],
       [-2.36623583e+00,  4.81774996e-01],
       [-2.47293055e+00,  4.99266707e-01],
       [-2.58089100e+00,  4.93413261e-01],
       [-2.68506908e+00,  4.64488360e-01],
       [-2.78059353e+00,  4.13844499e-01],
       [-2.86299775e+00,  3.43849729e-01],
       [-2.92842859e+00,  2.57776929e-01],
       [-2.97382659e+00,  1.59650765e-01],
       [-2.99706898e+00,  5.40595092e-02],
       [-2.99706898e+00, -5.40595092e-02],
       [-2.97382659e+00, -1.59650765e-01],
       [-2.92842859e+00, -2.57776929e-01],
       [-2.86299775e+00, -3.43849729e-01],
       [-2.78059353e+00, -4.13844499e-01],
       [-2.68506908e+00, -4.64488360e-01],
       [-2.58089100e+00, -4.93413261e-01],
       [-2.47293055e+00, -4.99266707e-01],
       [-2.36623583e+00, -4.81774996e-01],
       [-2.26579578e+00, -4.41756022e-01],
       [-2.17630686e+00, -3.81081028e-01],
       [-2.10195347e+00, -3.02587108e-01],
       [-2.04621229e+00, -2.09944551e-01],
       [-2.01168972e+00, -1.07485220e-01],
       [-2.00000000e+00, -1.22464680e-16]]), array([[-3.25, -0.75],
       [-1.75, -0.75],
       [-1.75,  0.75],
       [-3.25,  0.75],
       [-3.25, -0.75]]), array([[-2.5,  0. ],
       [-2.5,  1. ]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[-0.75, -0.75],
       [ 0.75, -0.75],
       [ 0.75,  0.75],
       [-0.75,  0.75],
       [-0.75, -0.75]]), array([[0., 0.],
       [0., 1.]]), array([[ 3.00000000e+00,  0.00000000e+00],
       [ 2.98831028e+00,  1.07485220e-01],
       [ 2.95378771e+00,  2.09944551e-01],
       [ 2.89804653e+00,  3.02587108e-01],
       [ 2.82369314e+00,  3.81081028e-01],
       [ 2.73420422e+00,  4.41756022e-01],
       [ 2.63376417e+00,  4.81774996e-01],
       [ 2.52706945e+00,  4.99266707e-01],
       [ 2.41910900e+00,  4.93413261e-01],
       [ 2.31493092e+00,  4.64488360e-01],
       [ 2.21940647e+00,  4.13844499e-01],
       [ 2.13700225e+00,  3.43849729e-01],
       [ 2.07157141e+00,  2.57776929e-01],
       [ 2.02617341e+00,  1.59650765e-01],
       [ 2.00293102e+00,  5.40595092e-02],
       [ 2.00293102e+00, -5.40595092e-02],
       [ 2.02617341e+00, -1.59650765e-01],
       [ 2.07157141e+00, -2.57776929e-01],
       [ 2.13700225e+00, -3.43849729e-01],
       [ 2.21940647e+00, -4.13844499e-01],
       [ 2.31493092e+00, -4.64488360e-01],
       [ 2.41910900e+00, -4.93413261e-01],
       [ 2.52706945e+00, -4.99266707e-01],
       [ 2.63376417e+00, -4.81774996e-01],
       [ 2.73420422e+00, -4.41756022e-01],
       [ 2.82369314e+00, -3.81081028e-01],
       [ 2.89804653e+00, -3.02587108e-01],
       [ 2.95378771e+00, -2.09944551e-01],
       [ 2.98831028e+00, -1.07485220e-01],
       [ 3.00000000e+00, -1.22464680e-16]]), array([[ 1.75, -0.75],
       [ 3.25, -0.75],
       [ 3.25,  0.75],
       [ 1.75,  0.75],
       [ 1.75, -0.75]]), array([[2.5, 0. ],
       [2.5, 1. ]]), array([[ 5.50000000e+00,  0.00000000e+00],
       [ 5.48831028e+00,  1.07485220e-01],
       [ 5.45378771e+00,  2.09944551e-01],
       [ 5.39804653e+00,  3.02587108e-01],
       [ 5.32369314e+00,  3.81081028e-01],
       [ 5.23420422e+00,  4.41756022e-01],
       [ 5.13376417e+00,  4.81774996e-01],
       [ 5.02706945e+00,  4.99266707e-01],
       [ 4.91910900e+00,  4.93413261e-01],
       [ 4.81493092e+00,  4.64488360e-01],
       [ 4.71940647e+00,  4.13844499e-01],
       [ 4.63700225e+00,  3.43849729e-01],
       [ 4.57157141e+00,  2.57776929e-01],
       [ 4.52617341e+00,  1.59650765e-01],
       [ 4.50293102e+00,  5.40595092e-02],
       [ 4.50293102e+00, -5.40595092e-02],
       [ 4.52617341e+00, -1.59650765e-01],
       [ 4.57157141e+00, -2.57776929e-01],
       [ 4.63700225e+00, -3.43849729e-01],
       [ 4.71940647e+00, -4.13844499e-01],
       [ 4.81493092e+00, -4.64488360e-01],
       [ 4.91910900e+00, -4.93413261e-01],
       [ 5.02706945e+00, -4.99266707e-01],
       [ 5.13376417e+00, -4.81774996e-01],
       [ 5.23420422e+00, -4.41756022e-01],
       [ 5.32369314e+00, -3.81081028e-01],
       [ 5.39804653e+00, -3.02587108e-01],
       [ 5.45378771e+00, -2.09944551e-01],
       [ 5.48831028e+00, -1.07485220e-01],
       [ 5.50000000e+00, -1.22464680e-16]]), array([[ 4.25, -0.75],
       [ 5.75, -0.75],
       [ 5.75,  0.75],
       [ 4.25,  0.75],
       [ 4.25, -0.75]]), array([[5., 0.],
       [5., 1.]])]]",31,(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (transform_matrix 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))))))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 5 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),(connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))))))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (transform_matrix_scale_angle_x_y 1 0 (+ 2 0.5) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (* (- 5 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),"['base_tier_shape', 'base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand']","['all_base_strokes', 'row_of_dials']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))']","['(C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (M 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))))))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))']","['0.0', '3.375', '1.0', '1.5']","['2', '5.0', '1.0', '1.5', '(/ pi 2)']",[],"['base_tier_shape', 'base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', '0.0', '3.375', '1.0', '1.5']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', '2', '5.0', '1.0', '1.5', '(/ pi 2)']","['all_base_strokes', 'row_of_dials']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '0.0', '3.375', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '2', '5.0', '1.0', '1.5', '(/ pi 2)']","['(C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (M 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))))))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-038.png
dials_context_programs_context_small_abstractions_009,dials_context_programs_train,(C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 5 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),"['C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '5', 'M', '1', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '*', '-', '5', '1', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5']","[[array([[-8.5 ,  6.25],
       [ 8.5 ,  6.25]]), array([[-8.5 , -6.25],
       [ 8.5 , -6.25]]), array([[ 8.5 , -6.25],
       [ 8.5 ,  6.25]]), array([[-8.5 , -6.25],
       [-8.5 ,  6.25]]), array([[-4.50000000e+00,  0.00000000e+00],
       [-4.51168972e+00,  1.07485220e-01],
       [-4.54621229e+00,  2.09944551e-01],
       [-4.60195347e+00,  3.02587108e-01],
       [-4.67630686e+00,  3.81081028e-01],
       [-4.76579578e+00,  4.41756022e-01],
       [-4.86623583e+00,  4.81774996e-01],
       [-4.97293055e+00,  4.99266707e-01],
       [-5.08089100e+00,  4.93413261e-01],
       [-5.18506908e+00,  4.64488360e-01],
       [-5.28059353e+00,  4.13844499e-01],
       [-5.36299775e+00,  3.43849729e-01],
       [-5.42842859e+00,  2.57776929e-01],
       [-5.47382659e+00,  1.59650765e-01],
       [-5.49706898e+00,  5.40595092e-02],
       [-5.49706898e+00, -5.40595092e-02],
       [-5.47382659e+00, -1.59650765e-01],
       [-5.42842859e+00, -2.57776929e-01],
       [-5.36299775e+00, -3.43849729e-01],
       [-5.28059353e+00, -4.13844499e-01],
       [-5.18506908e+00, -4.64488360e-01],
       [-5.08089100e+00, -4.93413261e-01],
       [-4.97293055e+00, -4.99266707e-01],
       [-4.86623583e+00, -4.81774996e-01],
       [-4.76579578e+00, -4.41756022e-01],
       [-4.67630686e+00, -3.81081028e-01],
       [-4.60195347e+00, -3.02587108e-01],
       [-4.54621229e+00, -2.09944551e-01],
       [-4.51168972e+00, -1.07485220e-01],
       [-4.50000000e+00, -1.22464680e-16]]), array([[-5.75, -0.75],
       [-4.25, -0.75],
       [-4.25,  0.75],
       [-5.75,  0.75],
       [-5.75, -0.75]]), array([[-5.,  0.],
       [-5.,  1.]]), array([[-2.00000000e+00,  0.00000000e+00],
       [-2.01168972e+00,  1.07485220e-01],
       [-2.04621229e+00,  2.09944551e-01],
       [-2.10195347e+00,  3.02587108e-01],
       [-2.17630686e+00,  3.81081028e-01],
       [-2.26579578e+00,  4.41756022e-01],
       [-2.36623583e+00,  4.81774996e-01],
       [-2.47293055e+00,  4.99266707e-01],
       [-2.58089100e+00,  4.93413261e-01],
       [-2.68506908e+00,  4.64488360e-01],
       [-2.78059353e+00,  4.13844499e-01],
       [-2.86299775e+00,  3.43849729e-01],
       [-2.92842859e+00,  2.57776929e-01],
       [-2.97382659e+00,  1.59650765e-01],
       [-2.99706898e+00,  5.40595092e-02],
       [-2.99706898e+00, -5.40595092e-02],
       [-2.97382659e+00, -1.59650765e-01],
       [-2.92842859e+00, -2.57776929e-01],
       [-2.86299775e+00, -3.43849729e-01],
       [-2.78059353e+00, -4.13844499e-01],
       [-2.68506908e+00, -4.64488360e-01],
       [-2.58089100e+00, -4.93413261e-01],
       [-2.47293055e+00, -4.99266707e-01],
       [-2.36623583e+00, -4.81774996e-01],
       [-2.26579578e+00, -4.41756022e-01],
       [-2.17630686e+00, -3.81081028e-01],
       [-2.10195347e+00, -3.02587108e-01],
       [-2.04621229e+00, -2.09944551e-01],
       [-2.01168972e+00, -1.07485220e-01],
       [-2.00000000e+00, -1.22464680e-16]]), array([[-3.25, -0.75],
       [-1.75, -0.75],
       [-1.75,  0.75],
       [-3.25,  0.75],
       [-3.25, -0.75]]), array([[-2.5,  0. ],
       [-2.5,  1. ]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[-0.75, -0.75],
       [ 0.75, -0.75],
       [ 0.75,  0.75],
       [-0.75,  0.75],
       [-0.75, -0.75]]), array([[0., 0.],
       [0., 1.]]), array([[ 3.00000000e+00,  0.00000000e+00],
       [ 2.98831028e+00,  1.07485220e-01],
       [ 2.95378771e+00,  2.09944551e-01],
       [ 2.89804653e+00,  3.02587108e-01],
       [ 2.82369314e+00,  3.81081028e-01],
       [ 2.73420422e+00,  4.41756022e-01],
       [ 2.63376417e+00,  4.81774996e-01],
       [ 2.52706945e+00,  4.99266707e-01],
       [ 2.41910900e+00,  4.93413261e-01],
       [ 2.31493092e+00,  4.64488360e-01],
       [ 2.21940647e+00,  4.13844499e-01],
       [ 2.13700225e+00,  3.43849729e-01],
       [ 2.07157141e+00,  2.57776929e-01],
       [ 2.02617341e+00,  1.59650765e-01],
       [ 2.00293102e+00,  5.40595092e-02],
       [ 2.00293102e+00, -5.40595092e-02],
       [ 2.02617341e+00, -1.59650765e-01],
       [ 2.07157141e+00, -2.57776929e-01],
       [ 2.13700225e+00, -3.43849729e-01],
       [ 2.21940647e+00, -4.13844499e-01],
       [ 2.31493092e+00, -4.64488360e-01],
       [ 2.41910900e+00, -4.93413261e-01],
       [ 2.52706945e+00, -4.99266707e-01],
       [ 2.63376417e+00, -4.81774996e-01],
       [ 2.73420422e+00, -4.41756022e-01],
       [ 2.82369314e+00, -3.81081028e-01],
       [ 2.89804653e+00, -3.02587108e-01],
       [ 2.95378771e+00, -2.09944551e-01],
       [ 2.98831028e+00, -1.07485220e-01],
       [ 3.00000000e+00, -1.22464680e-16]]), array([[ 1.75, -0.75],
       [ 3.25, -0.75],
       [ 3.25,  0.75],
       [ 1.75,  0.75],
       [ 1.75, -0.75]]), array([[2.5, 0. ],
       [2.5, 1. ]]), array([[ 5.50000000e+00,  0.00000000e+00],
       [ 5.48831028e+00,  1.07485220e-01],
       [ 5.45378771e+00,  2.09944551e-01],
       [ 5.39804653e+00,  3.02587108e-01],
       [ 5.32369314e+00,  3.81081028e-01],
       [ 5.23420422e+00,  4.41756022e-01],
       [ 5.13376417e+00,  4.81774996e-01],
       [ 5.02706945e+00,  4.99266707e-01],
       [ 4.91910900e+00,  4.93413261e-01],
       [ 4.81493092e+00,  4.64488360e-01],
       [ 4.71940647e+00,  4.13844499e-01],
       [ 4.63700225e+00,  3.43849729e-01],
       [ 4.57157141e+00,  2.57776929e-01],
       [ 4.52617341e+00,  1.59650765e-01],
       [ 4.50293102e+00,  5.40595092e-02],
       [ 4.50293102e+00, -5.40595092e-02],
       [ 4.52617341e+00, -1.59650765e-01],
       [ 4.57157141e+00, -2.57776929e-01],
       [ 4.63700225e+00, -3.43849729e-01],
       [ 4.71940647e+00, -4.13844499e-01],
       [ 4.81493092e+00, -4.64488360e-01],
       [ 4.91910900e+00, -4.93413261e-01],
       [ 5.02706945e+00, -4.99266707e-01],
       [ 5.13376417e+00, -4.81774996e-01],
       [ 5.23420422e+00, -4.41756022e-01],
       [ 5.32369314e+00, -3.81081028e-01],
       [ 5.39804653e+00, -3.02587108e-01],
       [ 5.45378771e+00, -2.09944551e-01],
       [ 5.48831028e+00, -1.07485220e-01],
       [ 5.50000000e+00, -1.22464680e-16]]), array([[ 4.25, -0.75],
       [ 5.75, -0.75],
       [ 5.75,  0.75],
       [ 4.25,  0.75],
       [ 4.25, -0.75]]), array([[5., 0.],
       [5., 1.]])]]",19,(connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 5 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),(connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (transform_matrix_scale_angle_x_y 1 0 (+ 2 0.5) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (* (- 5 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),"['base_tier_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand']","['base_tiers', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand']","['all_base_strokes', 'row_of_dials']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))']","['(T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))']","['0.0', '1.0', '1.5']","['1', '5.0', '1.0', '1.5', '(/ pi 2)']",[],"['base_tier_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', '0.0', '1.0', '1.5']","['base_tiers', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', '1', '5.0', '1.0', '1.5', '(/ pi 2)']","['all_base_strokes', 'row_of_dials']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '1', '5.0', '1.0', '1.5', '(/ pi 2)']","['(T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-039.png
dials_context_programs_context_small_abstractions_010,dials_context_programs_train,(C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 5 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))),"['C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '2', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '5', 'M', '1', '0', '+', '2', '0.5', '0', '2', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '*', '-', '5', '1', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '2', '1', '+', '2', '0.5']","[[array([[-8.5,  3.5],
       [ 8.5,  3.5]]), array([[-8.5, -3.5],
       [ 8.5, -3.5]]), array([[ 8.5, -3.5],
       [ 8.5,  3.5]]), array([[-8.5, -3.5],
       [-8.5,  3.5]]), array([[-4.5       , -1.25      ],
       [-4.51168972, -1.14251478],
       [-4.54621229, -1.04005545],
       [-4.60195347, -0.94741289],
       [-4.67630686, -0.86891897],
       [-4.76579578, -0.80824398],
       [-4.86623583, -0.768225  ],
       [-4.97293055, -0.75073329],
       [-5.080891  , -0.75658674],
       [-5.18506908, -0.78551164],
       [-5.28059353, -0.8361555 ],
       [-5.36299775, -0.90615027],
       [-5.42842859, -0.99222307],
       [-5.47382659, -1.09034923],
       [-5.49706898, -1.19594049],
       [-5.49706898, -1.30405951],
       [-5.47382659, -1.40965077],
       [-5.42842859, -1.50777693],
       [-5.36299775, -1.59384973],
       [-5.28059353, -1.6638445 ],
       [-5.18506908, -1.71448836],
       [-5.080891  , -1.74341326],
       [-4.97293055, -1.74926671],
       [-4.86623583, -1.731775  ],
       [-4.76579578, -1.69175602],
       [-4.67630686, -1.63108103],
       [-4.60195347, -1.55258711],
       [-4.54621229, -1.45994455],
       [-4.51168972, -1.35748522],
       [-4.5       , -1.25      ]]), array([[-5.75, -2.  ],
       [-4.25, -2.  ],
       [-4.25, -0.5 ],
       [-5.75, -0.5 ],
       [-5.75, -2.  ]]), array([[-5.  , -1.25],
       [-5.  , -0.25]]), array([[-2.        , -1.25      ],
       [-2.01168972, -1.14251478],
       [-2.04621229, -1.04005545],
       [-2.10195347, -0.94741289],
       [-2.17630686, -0.86891897],
       [-2.26579578, -0.80824398],
       [-2.36623583, -0.768225  ],
       [-2.47293055, -0.75073329],
       [-2.580891  , -0.75658674],
       [-2.68506908, -0.78551164],
       [-2.78059353, -0.8361555 ],
       [-2.86299775, -0.90615027],
       [-2.92842859, -0.99222307],
       [-2.97382659, -1.09034923],
       [-2.99706898, -1.19594049],
       [-2.99706898, -1.30405951],
       [-2.97382659, -1.40965077],
       [-2.92842859, -1.50777693],
       [-2.86299775, -1.59384973],
       [-2.78059353, -1.6638445 ],
       [-2.68506908, -1.71448836],
       [-2.580891  , -1.74341326],
       [-2.47293055, -1.74926671],
       [-2.36623583, -1.731775  ],
       [-2.26579578, -1.69175602],
       [-2.17630686, -1.63108103],
       [-2.10195347, -1.55258711],
       [-2.04621229, -1.45994455],
       [-2.01168972, -1.35748522],
       [-2.        , -1.25      ]]), array([[-3.25, -2.  ],
       [-1.75, -2.  ],
       [-1.75, -0.5 ],
       [-3.25, -0.5 ],
       [-3.25, -2.  ]]), array([[-2.5 , -1.25],
       [-2.5 , -0.25]]), array([[ 0.5       , -1.25      ],
       [ 0.48831028, -1.14251478],
       [ 0.45378771, -1.04005545],
       [ 0.39804653, -0.94741289],
       [ 0.32369314, -0.86891897],
       [ 0.23420422, -0.80824398],
       [ 0.13376417, -0.768225  ],
       [ 0.02706945, -0.75073329],
       [-0.080891  , -0.75658674],
       [-0.18506908, -0.78551164],
       [-0.28059353, -0.8361555 ],
       [-0.36299775, -0.90615027],
       [-0.42842859, -0.99222307],
       [-0.47382659, -1.09034923],
       [-0.49706898, -1.19594049],
       [-0.49706898, -1.30405951],
       [-0.47382659, -1.40965077],
       [-0.42842859, -1.50777693],
       [-0.36299775, -1.59384973],
       [-0.28059353, -1.6638445 ],
       [-0.18506908, -1.71448836],
       [-0.080891  , -1.74341326],
       [ 0.02706945, -1.74926671],
       [ 0.13376417, -1.731775  ],
       [ 0.23420422, -1.69175602],
       [ 0.32369314, -1.63108103],
       [ 0.39804653, -1.55258711],
       [ 0.45378771, -1.45994455],
       [ 0.48831028, -1.35748522],
       [ 0.5       , -1.25      ]]), array([[-0.75, -2.  ],
       [ 0.75, -2.  ],
       [ 0.75, -0.5 ],
       [-0.75, -0.5 ],
       [-0.75, -2.  ]]), array([[ 0.  , -1.25],
       [ 0.  , -0.25]]), array([[ 3.        , -1.25      ],
       [ 2.98831028, -1.14251478],
       [ 2.95378771, -1.04005545],
       [ 2.89804653, -0.94741289],
       [ 2.82369314, -0.86891897],
       [ 2.73420422, -0.80824398],
       [ 2.63376417, -0.768225  ],
       [ 2.52706945, -0.75073329],
       [ 2.419109  , -0.75658674],
       [ 2.31493092, -0.78551164],
       [ 2.21940647, -0.8361555 ],
       [ 2.13700225, -0.90615027],
       [ 2.07157141, -0.99222307],
       [ 2.02617341, -1.09034923],
       [ 2.00293102, -1.19594049],
       [ 2.00293102, -1.30405951],
       [ 2.02617341, -1.40965077],
       [ 2.07157141, -1.50777693],
       [ 2.13700225, -1.59384973],
       [ 2.21940647, -1.6638445 ],
       [ 2.31493092, -1.71448836],
       [ 2.419109  , -1.74341326],
       [ 2.52706945, -1.74926671],
       [ 2.63376417, -1.731775  ],
       [ 2.73420422, -1.69175602],
       [ 2.82369314, -1.63108103],
       [ 2.89804653, -1.55258711],
       [ 2.95378771, -1.45994455],
       [ 2.98831028, -1.35748522],
       [ 3.        , -1.25      ]]), array([[ 1.75, -2.  ],
       [ 3.25, -2.  ],
       [ 3.25, -0.5 ],
       [ 1.75, -0.5 ],
       [ 1.75, -2.  ]]), array([[ 2.5 , -1.25],
       [ 2.5 , -0.25]]), array([[ 5.5       , -1.25      ],
       [ 5.48831028, -1.14251478],
       [ 5.45378771, -1.04005545],
       [ 5.39804653, -0.94741289],
       [ 5.32369314, -0.86891897],
       [ 5.23420422, -0.80824398],
       [ 5.13376417, -0.768225  ],
       [ 5.02706945, -0.75073329],
       [ 4.919109  , -0.75658674],
       [ 4.81493092, -0.78551164],
       [ 4.71940647, -0.8361555 ],
       [ 4.63700225, -0.90615027],
       [ 4.57157141, -0.99222307],
       [ 4.52617341, -1.09034923],
       [ 4.50293102, -1.19594049],
       [ 4.50293102, -1.30405951],
       [ 4.52617341, -1.40965077],
       [ 4.57157141, -1.50777693],
       [ 4.63700225, -1.59384973],
       [ 4.71940647, -1.6638445 ],
       [ 4.81493092, -1.71448836],
       [ 4.919109  , -1.74341326],
       [ 5.02706945, -1.74926671],
       [ 5.13376417, -1.731775  ],
       [ 5.23420422, -1.69175602],
       [ 5.32369314, -1.63108103],
       [ 5.39804653, -1.55258711],
       [ 5.45378771, -1.45994455],
       [ 5.48831028, -1.35748522],
       [ 5.5       , -1.25      ]]), array([[ 4.25, -2.  ],
       [ 5.75, -2.  ],
       [ 5.75, -0.5 ],
       [ 4.25, -0.5 ],
       [ 4.25, -2.  ]]), array([[ 5.  , -1.25],
       [ 5.  , -0.25]]), array([[-4.5       ,  1.25      ],
       [-4.51168972,  1.35748522],
       [-4.54621229,  1.45994455],
       [-4.60195347,  1.55258711],
       [-4.67630686,  1.63108103],
       [-4.76579578,  1.69175602],
       [-4.86623583,  1.731775  ],
       [-4.97293055,  1.74926671],
       [-5.080891  ,  1.74341326],
       [-5.18506908,  1.71448836],
       [-5.28059353,  1.6638445 ],
       [-5.36299775,  1.59384973],
       [-5.42842859,  1.50777693],
       [-5.47382659,  1.40965077],
       [-5.49706898,  1.30405951],
       [-5.49706898,  1.19594049],
       [-5.47382659,  1.09034923],
       [-5.42842859,  0.99222307],
       [-5.36299775,  0.90615027],
       [-5.28059353,  0.8361555 ],
       [-5.18506908,  0.78551164],
       [-5.080891  ,  0.75658674],
       [-4.97293055,  0.75073329],
       [-4.86623583,  0.768225  ],
       [-4.76579578,  0.80824398],
       [-4.67630686,  0.86891897],
       [-4.60195347,  0.94741289],
       [-4.54621229,  1.04005545],
       [-4.51168972,  1.14251478],
       [-4.5       ,  1.25      ]]), array([[-5.75,  0.5 ],
       [-4.25,  0.5 ],
       [-4.25,  2.  ],
       [-5.75,  2.  ],
       [-5.75,  0.5 ]]), array([[-5.  ,  1.25],
       [-5.  ,  2.25]]), array([[-2.        ,  1.25      ],
       [-2.01168972,  1.35748522],
       [-2.04621229,  1.45994455],
       [-2.10195347,  1.55258711],
       [-2.17630686,  1.63108103],
       [-2.26579578,  1.69175602],
       [-2.36623583,  1.731775  ],
       [-2.47293055,  1.74926671],
       [-2.580891  ,  1.74341326],
       [-2.68506908,  1.71448836],
       [-2.78059353,  1.6638445 ],
       [-2.86299775,  1.59384973],
       [-2.92842859,  1.50777693],
       [-2.97382659,  1.40965077],
       [-2.99706898,  1.30405951],
       [-2.99706898,  1.19594049],
       [-2.97382659,  1.09034923],
       [-2.92842859,  0.99222307],
       [-2.86299775,  0.90615027],
       [-2.78059353,  0.8361555 ],
       [-2.68506908,  0.78551164],
       [-2.580891  ,  0.75658674],
       [-2.47293055,  0.75073329],
       [-2.36623583,  0.768225  ],
       [-2.26579578,  0.80824398],
       [-2.17630686,  0.86891897],
       [-2.10195347,  0.94741289],
       [-2.04621229,  1.04005545],
       [-2.01168972,  1.14251478],
       [-2.        ,  1.25      ]]), array([[-3.25,  0.5 ],
       [-1.75,  0.5 ],
       [-1.75,  2.  ],
       [-3.25,  2.  ],
       [-3.25,  0.5 ]]), array([[-2.5 ,  1.25],
       [-2.5 ,  2.25]]), array([[ 0.5       ,  1.25      ],
       [ 0.48831028,  1.35748522],
       [ 0.45378771,  1.45994455],
       [ 0.39804653,  1.55258711],
       [ 0.32369314,  1.63108103],
       [ 0.23420422,  1.69175602],
       [ 0.13376417,  1.731775  ],
       [ 0.02706945,  1.74926671],
       [-0.080891  ,  1.74341326],
       [-0.18506908,  1.71448836],
       [-0.28059353,  1.6638445 ],
       [-0.36299775,  1.59384973],
       [-0.42842859,  1.50777693],
       [-0.47382659,  1.40965077],
       [-0.49706898,  1.30405951],
       [-0.49706898,  1.19594049],
       [-0.47382659,  1.09034923],
       [-0.42842859,  0.99222307],
       [-0.36299775,  0.90615027],
       [-0.28059353,  0.8361555 ],
       [-0.18506908,  0.78551164],
       [-0.080891  ,  0.75658674],
       [ 0.02706945,  0.75073329],
       [ 0.13376417,  0.768225  ],
       [ 0.23420422,  0.80824398],
       [ 0.32369314,  0.86891897],
       [ 0.39804653,  0.94741289],
       [ 0.45378771,  1.04005545],
       [ 0.48831028,  1.14251478],
       [ 0.5       ,  1.25      ]]), array([[-0.75,  0.5 ],
       [ 0.75,  0.5 ],
       [ 0.75,  2.  ],
       [-0.75,  2.  ],
       [-0.75,  0.5 ]]), array([[0.  , 1.25],
       [0.  , 2.25]]), array([[3.        , 1.25      ],
       [2.98831028, 1.35748522],
       [2.95378771, 1.45994455],
       [2.89804653, 1.55258711],
       [2.82369314, 1.63108103],
       [2.73420422, 1.69175602],
       [2.63376417, 1.731775  ],
       [2.52706945, 1.74926671],
       [2.419109  , 1.74341326],
       [2.31493092, 1.71448836],
       [2.21940647, 1.6638445 ],
       [2.13700225, 1.59384973],
       [2.07157141, 1.50777693],
       [2.02617341, 1.40965077],
       [2.00293102, 1.30405951],
       [2.00293102, 1.19594049],
       [2.02617341, 1.09034923],
       [2.07157141, 0.99222307],
       [2.13700225, 0.90615027],
       [2.21940647, 0.8361555 ],
       [2.31493092, 0.78551164],
       [2.419109  , 0.75658674],
       [2.52706945, 0.75073329],
       [2.63376417, 0.768225  ],
       [2.73420422, 0.80824398],
       [2.82369314, 0.86891897],
       [2.89804653, 0.94741289],
       [2.95378771, 1.04005545],
       [2.98831028, 1.14251478],
       [3.        , 1.25      ]]), array([[1.75, 0.5 ],
       [3.25, 0.5 ],
       [3.25, 2.  ],
       [1.75, 2.  ],
       [1.75, 0.5 ]]), array([[2.5 , 1.25],
       [2.5 , 2.25]]), array([[5.5       , 1.25      ],
       [5.48831028, 1.35748522],
       [5.45378771, 1.45994455],
       [5.39804653, 1.55258711],
       [5.32369314, 1.63108103],
       [5.23420422, 1.69175602],
       [5.13376417, 1.731775  ],
       [5.02706945, 1.74926671],
       [4.919109  , 1.74341326],
       [4.81493092, 1.71448836],
       [4.71940647, 1.6638445 ],
       [4.63700225, 1.59384973],
       [4.57157141, 1.50777693],
       [4.52617341, 1.40965077],
       [4.50293102, 1.30405951],
       [4.50293102, 1.19594049],
       [4.52617341, 1.09034923],
       [4.57157141, 0.99222307],
       [4.63700225, 0.90615027],
       [4.71940647, 0.8361555 ],
       [4.81493092, 0.78551164],
       [4.919109  , 0.75658674],
       [5.02706945, 0.75073329],
       [5.13376417, 0.768225  ],
       [5.23420422, 0.80824398],
       [5.32369314, 0.86891897],
       [5.39804653, 0.94741289],
       [5.45378771, 1.04005545],
       [5.48831028, 1.14251478],
       [5.5       , 1.25      ]]), array([[4.25, 0.5 ],
       [5.75, 0.5 ],
       [5.75, 2.  ],
       [4.25, 2.  ],
       [4.25, 0.5 ]]), array([[5.  , 1.25],
       [5.  , 2.25]])]]",34,(connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (transform_matrix 1 0 (+ 2 0.5) 0)) 2 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 5 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))),(connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (transform_matrix_scale_angle_x_y 1 0 (+ 2 0.5) 0)) 2 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (* (- 5 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))),"['base_tier_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand']","['base_tiers', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand']","['all_base_strokes', 'row_of_dials']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))']","['(T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5)))']","['0.0', '1.0', '1.5']","['1', '5.0', '2.0', '1.5', '(/ pi 2)']",[],"['base_tier_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', '0.0', '1.0', '1.5']","['base_tiers', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', '1', '5.0', '2.0', '1.5', '(/ pi 2)']","['all_base_strokes', 'row_of_dials']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '1', '5.0', '2.0', '1.5', '(/ pi 2)']","['(T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5)))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-040.png
dials_context_programs_context_small_abstractions_011,dials_context_programs_train,(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 5 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))) (T (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '2', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'c', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '5', 'M', '1', '0', '+', '2', '0.5', '0', '2', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '*', '-', '5', '1', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '2', '1', '+', '2', '0.5', 'T', 'C', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '1', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '0', '+', '2', '+', '*', '0.5', '*', '+', '*', '2', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5,  3.5],
       [ 8.5,  3.5]]), array([[-8.5, -3.5],
       [ 8.5, -3.5]]), array([[ 8.5, -3.5],
       [ 8.5,  3.5]]), array([[-8.5, -3.5],
       [-8.5,  3.5]]), array([[-4.5       , -1.25      ],
       [-4.51168972, -1.14251478],
       [-4.54621229, -1.04005545],
       [-4.60195347, -0.94741289],
       [-4.67630686, -0.86891897],
       [-4.76579578, -0.80824398],
       [-4.86623583, -0.768225  ],
       [-4.97293055, -0.75073329],
       [-5.080891  , -0.75658674],
       [-5.18506908, -0.78551164],
       [-5.28059353, -0.8361555 ],
       [-5.36299775, -0.90615027],
       [-5.42842859, -0.99222307],
       [-5.47382659, -1.09034923],
       [-5.49706898, -1.19594049],
       [-5.49706898, -1.30405951],
       [-5.47382659, -1.40965077],
       [-5.42842859, -1.50777693],
       [-5.36299775, -1.59384973],
       [-5.28059353, -1.6638445 ],
       [-5.18506908, -1.71448836],
       [-5.080891  , -1.74341326],
       [-4.97293055, -1.74926671],
       [-4.86623583, -1.731775  ],
       [-4.76579578, -1.69175602],
       [-4.67630686, -1.63108103],
       [-4.60195347, -1.55258711],
       [-4.54621229, -1.45994455],
       [-4.51168972, -1.35748522],
       [-4.5       , -1.25      ]]), array([[-4.25      , -1.25      ],
       [-4.26753458, -1.08877217],
       [-4.31931844, -0.93508317],
       [-4.4029302 , -0.79611934],
       [-4.51446029, -0.67837846],
       [-4.64869367, -0.58736597],
       [-4.79935375, -0.52733751],
       [-4.95939582, -0.50109994],
       [-5.1213365 , -0.50988011],
       [-5.27760362, -0.55326746],
       [-5.4208903 , -0.62923325],
       [-5.54449662, -0.73422541],
       [-5.64264288, -0.86333461],
       [-5.71073988, -1.01052385],
       [-5.74560347, -1.16891074],
       [-5.74560347, -1.33108926],
       [-5.71073988, -1.48947615],
       [-5.64264288, -1.63666539],
       [-5.54449662, -1.76577459],
       [-5.4208903 , -1.87076675],
       [-5.27760362, -1.94673254],
       [-5.1213365 , -1.99011989],
       [-4.95939582, -1.99890006],
       [-4.79935375, -1.97266249],
       [-4.64869367, -1.91263403],
       [-4.51446029, -1.82162154],
       [-4.4029302 , -1.70388066],
       [-4.31931844, -1.56491683],
       [-4.26753458, -1.41122783],
       [-4.25      , -1.25      ]]), array([[-5.  , -1.25],
       [-5.  , -0.25]]), array([[-2.        , -1.25      ],
       [-2.01168972, -1.14251478],
       [-2.04621229, -1.04005545],
       [-2.10195347, -0.94741289],
       [-2.17630686, -0.86891897],
       [-2.26579578, -0.80824398],
       [-2.36623583, -0.768225  ],
       [-2.47293055, -0.75073329],
       [-2.580891  , -0.75658674],
       [-2.68506908, -0.78551164],
       [-2.78059353, -0.8361555 ],
       [-2.86299775, -0.90615027],
       [-2.92842859, -0.99222307],
       [-2.97382659, -1.09034923],
       [-2.99706898, -1.19594049],
       [-2.99706898, -1.30405951],
       [-2.97382659, -1.40965077],
       [-2.92842859, -1.50777693],
       [-2.86299775, -1.59384973],
       [-2.78059353, -1.6638445 ],
       [-2.68506908, -1.71448836],
       [-2.580891  , -1.74341326],
       [-2.47293055, -1.74926671],
       [-2.36623583, -1.731775  ],
       [-2.26579578, -1.69175602],
       [-2.17630686, -1.63108103],
       [-2.10195347, -1.55258711],
       [-2.04621229, -1.45994455],
       [-2.01168972, -1.35748522],
       [-2.        , -1.25      ]]), array([[-1.75      , -1.25      ],
       [-1.76753458, -1.08877217],
       [-1.81931844, -0.93508317],
       [-1.9029302 , -0.79611934],
       [-2.01446029, -0.67837846],
       [-2.14869367, -0.58736597],
       [-2.29935375, -0.52733751],
       [-2.45939582, -0.50109994],
       [-2.6213365 , -0.50988011],
       [-2.77760362, -0.55326746],
       [-2.9208903 , -0.62923325],
       [-3.04449662, -0.73422541],
       [-3.14264288, -0.86333461],
       [-3.21073988, -1.01052385],
       [-3.24560347, -1.16891074],
       [-3.24560347, -1.33108926],
       [-3.21073988, -1.48947615],
       [-3.14264288, -1.63666539],
       [-3.04449662, -1.76577459],
       [-2.9208903 , -1.87076675],
       [-2.77760362, -1.94673254],
       [-2.6213365 , -1.99011989],
       [-2.45939582, -1.99890006],
       [-2.29935375, -1.97266249],
       [-2.14869367, -1.91263403],
       [-2.01446029, -1.82162154],
       [-1.9029302 , -1.70388066],
       [-1.81931844, -1.56491683],
       [-1.76753458, -1.41122783],
       [-1.75      , -1.25      ]]), array([[-2.5 , -1.25],
       [-2.5 , -0.25]]), array([[ 0.5       , -1.25      ],
       [ 0.48831028, -1.14251478],
       [ 0.45378771, -1.04005545],
       [ 0.39804653, -0.94741289],
       [ 0.32369314, -0.86891897],
       [ 0.23420422, -0.80824398],
       [ 0.13376417, -0.768225  ],
       [ 0.02706945, -0.75073329],
       [-0.080891  , -0.75658674],
       [-0.18506908, -0.78551164],
       [-0.28059353, -0.8361555 ],
       [-0.36299775, -0.90615027],
       [-0.42842859, -0.99222307],
       [-0.47382659, -1.09034923],
       [-0.49706898, -1.19594049],
       [-0.49706898, -1.30405951],
       [-0.47382659, -1.40965077],
       [-0.42842859, -1.50777693],
       [-0.36299775, -1.59384973],
       [-0.28059353, -1.6638445 ],
       [-0.18506908, -1.71448836],
       [-0.080891  , -1.74341326],
       [ 0.02706945, -1.74926671],
       [ 0.13376417, -1.731775  ],
       [ 0.23420422, -1.69175602],
       [ 0.32369314, -1.63108103],
       [ 0.39804653, -1.55258711],
       [ 0.45378771, -1.45994455],
       [ 0.48831028, -1.35748522],
       [ 0.5       , -1.25      ]]), array([[ 0.75      , -1.25      ],
       [ 0.73246542, -1.08877217],
       [ 0.68068156, -0.93508317],
       [ 0.5970698 , -0.79611934],
       [ 0.48553971, -0.67837846],
       [ 0.35130633, -0.58736597],
       [ 0.20064625, -0.52733751],
       [ 0.04060418, -0.50109994],
       [-0.1213365 , -0.50988011],
       [-0.27760362, -0.55326746],
       [-0.4208903 , -0.62923325],
       [-0.54449662, -0.73422541],
       [-0.64264288, -0.86333461],
       [-0.71073988, -1.01052385],
       [-0.74560347, -1.16891074],
       [-0.74560347, -1.33108926],
       [-0.71073988, -1.48947615],
       [-0.64264288, -1.63666539],
       [-0.54449662, -1.76577459],
       [-0.4208903 , -1.87076675],
       [-0.27760362, -1.94673254],
       [-0.1213365 , -1.99011989],
       [ 0.04060418, -1.99890006],
       [ 0.20064625, -1.97266249],
       [ 0.35130633, -1.91263403],
       [ 0.48553971, -1.82162154],
       [ 0.5970698 , -1.70388066],
       [ 0.68068156, -1.56491683],
       [ 0.73246542, -1.41122783],
       [ 0.75      , -1.25      ]]), array([[ 0.  , -1.25],
       [ 0.  , -0.25]]), array([[ 3.        , -1.25      ],
       [ 2.98831028, -1.14251478],
       [ 2.95378771, -1.04005545],
       [ 2.89804653, -0.94741289],
       [ 2.82369314, -0.86891897],
       [ 2.73420422, -0.80824398],
       [ 2.63376417, -0.768225  ],
       [ 2.52706945, -0.75073329],
       [ 2.419109  , -0.75658674],
       [ 2.31493092, -0.78551164],
       [ 2.21940647, -0.8361555 ],
       [ 2.13700225, -0.90615027],
       [ 2.07157141, -0.99222307],
       [ 2.02617341, -1.09034923],
       [ 2.00293102, -1.19594049],
       [ 2.00293102, -1.30405951],
       [ 2.02617341, -1.40965077],
       [ 2.07157141, -1.50777693],
       [ 2.13700225, -1.59384973],
       [ 2.21940647, -1.6638445 ],
       [ 2.31493092, -1.71448836],
       [ 2.419109  , -1.74341326],
       [ 2.52706945, -1.74926671],
       [ 2.63376417, -1.731775  ],
       [ 2.73420422, -1.69175602],
       [ 2.82369314, -1.63108103],
       [ 2.89804653, -1.55258711],
       [ 2.95378771, -1.45994455],
       [ 2.98831028, -1.35748522],
       [ 3.        , -1.25      ]]), array([[ 3.25      , -1.25      ],
       [ 3.23246542, -1.08877217],
       [ 3.18068156, -0.93508317],
       [ 3.0970698 , -0.79611934],
       [ 2.98553971, -0.67837846],
       [ 2.85130633, -0.58736597],
       [ 2.70064625, -0.52733751],
       [ 2.54060418, -0.50109994],
       [ 2.3786635 , -0.50988011],
       [ 2.22239638, -0.55326746],
       [ 2.0791097 , -0.62923325],
       [ 1.95550338, -0.73422541],
       [ 1.85735712, -0.86333461],
       [ 1.78926012, -1.01052385],
       [ 1.75439653, -1.16891074],
       [ 1.75439653, -1.33108926],
       [ 1.78926012, -1.48947615],
       [ 1.85735712, -1.63666539],
       [ 1.95550338, -1.76577459],
       [ 2.0791097 , -1.87076675],
       [ 2.22239638, -1.94673254],
       [ 2.3786635 , -1.99011989],
       [ 2.54060418, -1.99890006],
       [ 2.70064625, -1.97266249],
       [ 2.85130633, -1.91263403],
       [ 2.98553971, -1.82162154],
       [ 3.0970698 , -1.70388066],
       [ 3.18068156, -1.56491683],
       [ 3.23246542, -1.41122783],
       [ 3.25      , -1.25      ]]), array([[ 2.5 , -1.25],
       [ 2.5 , -0.25]]), array([[ 5.5       , -1.25      ],
       [ 5.48831028, -1.14251478],
       [ 5.45378771, -1.04005545],
       [ 5.39804653, -0.94741289],
       [ 5.32369314, -0.86891897],
       [ 5.23420422, -0.80824398],
       [ 5.13376417, -0.768225  ],
       [ 5.02706945, -0.75073329],
       [ 4.919109  , -0.75658674],
       [ 4.81493092, -0.78551164],
       [ 4.71940647, -0.8361555 ],
       [ 4.63700225, -0.90615027],
       [ 4.57157141, -0.99222307],
       [ 4.52617341, -1.09034923],
       [ 4.50293102, -1.19594049],
       [ 4.50293102, -1.30405951],
       [ 4.52617341, -1.40965077],
       [ 4.57157141, -1.50777693],
       [ 4.63700225, -1.59384973],
       [ 4.71940647, -1.6638445 ],
       [ 4.81493092, -1.71448836],
       [ 4.919109  , -1.74341326],
       [ 5.02706945, -1.74926671],
       [ 5.13376417, -1.731775  ],
       [ 5.23420422, -1.69175602],
       [ 5.32369314, -1.63108103],
       [ 5.39804653, -1.55258711],
       [ 5.45378771, -1.45994455],
       [ 5.48831028, -1.35748522],
       [ 5.5       , -1.25      ]]), array([[ 5.75      , -1.25      ],
       [ 5.73246542, -1.08877217],
       [ 5.68068156, -0.93508317],
       [ 5.5970698 , -0.79611934],
       [ 5.48553971, -0.67837846],
       [ 5.35130633, -0.58736597],
       [ 5.20064625, -0.52733751],
       [ 5.04060418, -0.50109994],
       [ 4.8786635 , -0.50988011],
       [ 4.72239638, -0.55326746],
       [ 4.5791097 , -0.62923325],
       [ 4.45550338, -0.73422541],
       [ 4.35735712, -0.86333461],
       [ 4.28926012, -1.01052385],
       [ 4.25439653, -1.16891074],
       [ 4.25439653, -1.33108926],
       [ 4.28926012, -1.48947615],
       [ 4.35735712, -1.63666539],
       [ 4.45550338, -1.76577459],
       [ 4.5791097 , -1.87076675],
       [ 4.72239638, -1.94673254],
       [ 4.8786635 , -1.99011989],
       [ 5.04060418, -1.99890006],
       [ 5.20064625, -1.97266249],
       [ 5.35130633, -1.91263403],
       [ 5.48553971, -1.82162154],
       [ 5.5970698 , -1.70388066],
       [ 5.68068156, -1.56491683],
       [ 5.73246542, -1.41122783],
       [ 5.75      , -1.25      ]]), array([[ 5.  , -1.25],
       [ 5.  , -0.25]]), array([[-4.5       ,  1.25      ],
       [-4.51168972,  1.35748522],
       [-4.54621229,  1.45994455],
       [-4.60195347,  1.55258711],
       [-4.67630686,  1.63108103],
       [-4.76579578,  1.69175602],
       [-4.86623583,  1.731775  ],
       [-4.97293055,  1.74926671],
       [-5.080891  ,  1.74341326],
       [-5.18506908,  1.71448836],
       [-5.28059353,  1.6638445 ],
       [-5.36299775,  1.59384973],
       [-5.42842859,  1.50777693],
       [-5.47382659,  1.40965077],
       [-5.49706898,  1.30405951],
       [-5.49706898,  1.19594049],
       [-5.47382659,  1.09034923],
       [-5.42842859,  0.99222307],
       [-5.36299775,  0.90615027],
       [-5.28059353,  0.8361555 ],
       [-5.18506908,  0.78551164],
       [-5.080891  ,  0.75658674],
       [-4.97293055,  0.75073329],
       [-4.86623583,  0.768225  ],
       [-4.76579578,  0.80824398],
       [-4.67630686,  0.86891897],
       [-4.60195347,  0.94741289],
       [-4.54621229,  1.04005545],
       [-4.51168972,  1.14251478],
       [-4.5       ,  1.25      ]]), array([[-4.25      ,  1.25      ],
       [-4.26753458,  1.41122783],
       [-4.31931844,  1.56491683],
       [-4.4029302 ,  1.70388066],
       [-4.51446029,  1.82162154],
       [-4.64869367,  1.91263403],
       [-4.79935375,  1.97266249],
       [-4.95939582,  1.99890006],
       [-5.1213365 ,  1.99011989],
       [-5.27760362,  1.94673254],
       [-5.4208903 ,  1.87076675],
       [-5.54449662,  1.76577459],
       [-5.64264288,  1.63666539],
       [-5.71073988,  1.48947615],
       [-5.74560347,  1.33108926],
       [-5.74560347,  1.16891074],
       [-5.71073988,  1.01052385],
       [-5.64264288,  0.86333461],
       [-5.54449662,  0.73422541],
       [-5.4208903 ,  0.62923325],
       [-5.27760362,  0.55326746],
       [-5.1213365 ,  0.50988011],
       [-4.95939582,  0.50109994],
       [-4.79935375,  0.52733751],
       [-4.64869367,  0.58736597],
       [-4.51446029,  0.67837846],
       [-4.4029302 ,  0.79611934],
       [-4.31931844,  0.93508317],
       [-4.26753458,  1.08877217],
       [-4.25      ,  1.25      ]]), array([[-5.  ,  1.25],
       [-5.  ,  2.25]]), array([[-2.        ,  1.25      ],
       [-2.01168972,  1.35748522],
       [-2.04621229,  1.45994455],
       [-2.10195347,  1.55258711],
       [-2.17630686,  1.63108103],
       [-2.26579578,  1.69175602],
       [-2.36623583,  1.731775  ],
       [-2.47293055,  1.74926671],
       [-2.580891  ,  1.74341326],
       [-2.68506908,  1.71448836],
       [-2.78059353,  1.6638445 ],
       [-2.86299775,  1.59384973],
       [-2.92842859,  1.50777693],
       [-2.97382659,  1.40965077],
       [-2.99706898,  1.30405951],
       [-2.99706898,  1.19594049],
       [-2.97382659,  1.09034923],
       [-2.92842859,  0.99222307],
       [-2.86299775,  0.90615027],
       [-2.78059353,  0.8361555 ],
       [-2.68506908,  0.78551164],
       [-2.580891  ,  0.75658674],
       [-2.47293055,  0.75073329],
       [-2.36623583,  0.768225  ],
       [-2.26579578,  0.80824398],
       [-2.17630686,  0.86891897],
       [-2.10195347,  0.94741289],
       [-2.04621229,  1.04005545],
       [-2.01168972,  1.14251478],
       [-2.        ,  1.25      ]]), array([[-1.75      ,  1.25      ],
       [-1.76753458,  1.41122783],
       [-1.81931844,  1.56491683],
       [-1.9029302 ,  1.70388066],
       [-2.01446029,  1.82162154],
       [-2.14869367,  1.91263403],
       [-2.29935375,  1.97266249],
       [-2.45939582,  1.99890006],
       [-2.6213365 ,  1.99011989],
       [-2.77760362,  1.94673254],
       [-2.9208903 ,  1.87076675],
       [-3.04449662,  1.76577459],
       [-3.14264288,  1.63666539],
       [-3.21073988,  1.48947615],
       [-3.24560347,  1.33108926],
       [-3.24560347,  1.16891074],
       [-3.21073988,  1.01052385],
       [-3.14264288,  0.86333461],
       [-3.04449662,  0.73422541],
       [-2.9208903 ,  0.62923325],
       [-2.77760362,  0.55326746],
       [-2.6213365 ,  0.50988011],
       [-2.45939582,  0.50109994],
       [-2.29935375,  0.52733751],
       [-2.14869367,  0.58736597],
       [-2.01446029,  0.67837846],
       [-1.9029302 ,  0.79611934],
       [-1.81931844,  0.93508317],
       [-1.76753458,  1.08877217],
       [-1.75      ,  1.25      ]]), array([[-2.5 ,  1.25],
       [-2.5 ,  2.25]]), array([[ 0.5       ,  1.25      ],
       [ 0.48831028,  1.35748522],
       [ 0.45378771,  1.45994455],
       [ 0.39804653,  1.55258711],
       [ 0.32369314,  1.63108103],
       [ 0.23420422,  1.69175602],
       [ 0.13376417,  1.731775  ],
       [ 0.02706945,  1.74926671],
       [-0.080891  ,  1.74341326],
       [-0.18506908,  1.71448836],
       [-0.28059353,  1.6638445 ],
       [-0.36299775,  1.59384973],
       [-0.42842859,  1.50777693],
       [-0.47382659,  1.40965077],
       [-0.49706898,  1.30405951],
       [-0.49706898,  1.19594049],
       [-0.47382659,  1.09034923],
       [-0.42842859,  0.99222307],
       [-0.36299775,  0.90615027],
       [-0.28059353,  0.8361555 ],
       [-0.18506908,  0.78551164],
       [-0.080891  ,  0.75658674],
       [ 0.02706945,  0.75073329],
       [ 0.13376417,  0.768225  ],
       [ 0.23420422,  0.80824398],
       [ 0.32369314,  0.86891897],
       [ 0.39804653,  0.94741289],
       [ 0.45378771,  1.04005545],
       [ 0.48831028,  1.14251478],
       [ 0.5       ,  1.25      ]]), array([[ 0.75      ,  1.25      ],
       [ 0.73246542,  1.41122783],
       [ 0.68068156,  1.56491683],
       [ 0.5970698 ,  1.70388066],
       [ 0.48553971,  1.82162154],
       [ 0.35130633,  1.91263403],
       [ 0.20064625,  1.97266249],
       [ 0.04060418,  1.99890006],
       [-0.1213365 ,  1.99011989],
       [-0.27760362,  1.94673254],
       [-0.4208903 ,  1.87076675],
       [-0.54449662,  1.76577459],
       [-0.64264288,  1.63666539],
       [-0.71073988,  1.48947615],
       [-0.74560347,  1.33108926],
       [-0.74560347,  1.16891074],
       [-0.71073988,  1.01052385],
       [-0.64264288,  0.86333461],
       [-0.54449662,  0.73422541],
       [-0.4208903 ,  0.62923325],
       [-0.27760362,  0.55326746],
       [-0.1213365 ,  0.50988011],
       [ 0.04060418,  0.50109994],
       [ 0.20064625,  0.52733751],
       [ 0.35130633,  0.58736597],
       [ 0.48553971,  0.67837846],
       [ 0.5970698 ,  0.79611934],
       [ 0.68068156,  0.93508317],
       [ 0.73246542,  1.08877217],
       [ 0.75      ,  1.25      ]]), array([[0.  , 1.25],
       [0.  , 2.25]]), array([[3.        , 1.25      ],
       [2.98831028, 1.35748522],
       [2.95378771, 1.45994455],
       [2.89804653, 1.55258711],
       [2.82369314, 1.63108103],
       [2.73420422, 1.69175602],
       [2.63376417, 1.731775  ],
       [2.52706945, 1.74926671],
       [2.419109  , 1.74341326],
       [2.31493092, 1.71448836],
       [2.21940647, 1.6638445 ],
       [2.13700225, 1.59384973],
       [2.07157141, 1.50777693],
       [2.02617341, 1.40965077],
       [2.00293102, 1.30405951],
       [2.00293102, 1.19594049],
       [2.02617341, 1.09034923],
       [2.07157141, 0.99222307],
       [2.13700225, 0.90615027],
       [2.21940647, 0.8361555 ],
       [2.31493092, 0.78551164],
       [2.419109  , 0.75658674],
       [2.52706945, 0.75073329],
       [2.63376417, 0.768225  ],
       [2.73420422, 0.80824398],
       [2.82369314, 0.86891897],
       [2.89804653, 0.94741289],
       [2.95378771, 1.04005545],
       [2.98831028, 1.14251478],
       [3.        , 1.25      ]]), array([[3.25      , 1.25      ],
       [3.23246542, 1.41122783],
       [3.18068156, 1.56491683],
       [3.0970698 , 1.70388066],
       [2.98553971, 1.82162154],
       [2.85130633, 1.91263403],
       [2.70064625, 1.97266249],
       [2.54060418, 1.99890006],
       [2.3786635 , 1.99011989],
       [2.22239638, 1.94673254],
       [2.0791097 , 1.87076675],
       [1.95550338, 1.76577459],
       [1.85735712, 1.63666539],
       [1.78926012, 1.48947615],
       [1.75439653, 1.33108926],
       [1.75439653, 1.16891074],
       [1.78926012, 1.01052385],
       [1.85735712, 0.86333461],
       [1.95550338, 0.73422541],
       [2.0791097 , 0.62923325],
       [2.22239638, 0.55326746],
       [2.3786635 , 0.50988011],
       [2.54060418, 0.50109994],
       [2.70064625, 0.52733751],
       [2.85130633, 0.58736597],
       [2.98553971, 0.67837846],
       [3.0970698 , 0.79611934],
       [3.18068156, 0.93508317],
       [3.23246542, 1.08877217],
       [3.25      , 1.25      ]]), array([[2.5 , 1.25],
       [2.5 , 2.25]]), array([[5.5       , 1.25      ],
       [5.48831028, 1.35748522],
       [5.45378771, 1.45994455],
       [5.39804653, 1.55258711],
       [5.32369314, 1.63108103],
       [5.23420422, 1.69175602],
       [5.13376417, 1.731775  ],
       [5.02706945, 1.74926671],
       [4.919109  , 1.74341326],
       [4.81493092, 1.71448836],
       [4.71940647, 1.6638445 ],
       [4.63700225, 1.59384973],
       [4.57157141, 1.50777693],
       [4.52617341, 1.40965077],
       [4.50293102, 1.30405951],
       [4.50293102, 1.19594049],
       [4.52617341, 1.09034923],
       [4.57157141, 0.99222307],
       [4.63700225, 0.90615027],
       [4.71940647, 0.8361555 ],
       [4.81493092, 0.78551164],
       [4.919109  , 0.75658674],
       [5.02706945, 0.75073329],
       [5.13376417, 0.768225  ],
       [5.23420422, 0.80824398],
       [5.32369314, 0.86891897],
       [5.39804653, 0.94741289],
       [5.45378771, 1.04005545],
       [5.48831028, 1.14251478],
       [5.5       , 1.25      ]]), array([[5.75      , 1.25      ],
       [5.73246542, 1.41122783],
       [5.68068156, 1.56491683],
       [5.5970698 , 1.70388066],
       [5.48553971, 1.82162154],
       [5.35130633, 1.91263403],
       [5.20064625, 1.97266249],
       [5.04060418, 1.99890006],
       [4.8786635 , 1.99011989],
       [4.72239638, 1.94673254],
       [4.5791097 , 1.87076675],
       [4.45550338, 1.76577459],
       [4.35735712, 1.63666539],
       [4.28926012, 1.48947615],
       [4.25439653, 1.33108926],
       [4.25439653, 1.16891074],
       [4.28926012, 1.01052385],
       [4.35735712, 0.86333461],
       [4.45550338, 0.73422541],
       [4.5791097 , 0.62923325],
       [4.72239638, 0.55326746],
       [4.8786635 , 0.50988011],
       [5.04060418, 0.50109994],
       [5.20064625, 0.52733751],
       [5.35130633, 0.58736597],
       [5.48553971, 0.67837846],
       [5.5970698 , 0.79611934],
       [5.68068156, 0.93508317],
       [5.73246542, 1.08877217],
       [5.75      , 1.25      ]]), array([[5.  , 1.25],
       [5.  , 2.25]]), array([[0.0000000e+00, 3.5000000e+00],
       [1.8369702e-16, 6.5000000e+00]]), array([[-1. ,  6.5],
       [ 1. ,  6.5]]), array([[-1. ,  5.5],
       [ 1. ,  5.5]]), array([[-1.        ,  6.5       ],
       [-1.01168972,  6.60748522],
       [-1.04621229,  6.70994455],
       [-1.10195347,  6.80258711],
       [-1.17630686,  6.88108103],
       [-1.26579578,  6.94175602],
       [-1.36623583,  6.981775  ],
       [-1.47293055,  6.99926671],
       [-1.580891  ,  6.99341326],
       [-1.68506908,  6.96448836],
       [-1.78059353,  6.9138445 ],
       [-1.86299775,  6.84384973],
       [-1.92842859,  6.75777693],
       [-1.97382659,  6.65965077],
       [-1.99706898,  6.55405951],
       [-1.99706898,  6.44594049],
       [-1.97382659,  6.34034923],
       [-1.92842859,  6.24222307],
       [-1.86299775,  6.15615027],
       [-1.78059353,  6.0861555 ],
       [-1.68506908,  6.03551164],
       [-1.580891  ,  6.00658674],
       [-1.47293055,  6.00073329],
       [-1.36623583,  6.018225  ],
       [-1.26579578,  6.05824398],
       [-1.17630686,  6.11891897],
       [-1.10195347,  6.19741289],
       [-1.04621229,  6.29005545],
       [-1.01168972,  6.39251478],
       [-1.        ,  6.5       ]]), array([[2.        , 6.5       ],
       [1.98831028, 6.60748522],
       [1.95378771, 6.70994455],
       [1.89804653, 6.80258711],
       [1.82369314, 6.88108103],
       [1.73420422, 6.94175602],
       [1.63376417, 6.981775  ],
       [1.52706945, 6.99926671],
       [1.419109  , 6.99341326],
       [1.31493092, 6.96448836],
       [1.21940647, 6.9138445 ],
       [1.13700225, 6.84384973],
       [1.07157141, 6.75777693],
       [1.02617341, 6.65965077],
       [1.00293102, 6.55405951],
       [1.00293102, 6.44594049],
       [1.02617341, 6.34034923],
       [1.07157141, 6.24222307],
       [1.13700225, 6.15615027],
       [1.21940647, 6.0861555 ],
       [1.31493092, 6.03551164],
       [1.419109  , 6.00658674],
       [1.52706945, 6.00073329],
       [1.63376417, 6.018225  ],
       [1.73420422, 6.05824398],
       [1.82369314, 6.11891897],
       [1.89804653, 6.19741289],
       [1.95378771, 6.29005545],
       [1.98831028, 6.39251478],
       [2.        , 6.5       ]])]]",39,(connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform circle (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (transform_matrix 1 0 (+ 2 0.5) 0)) 2 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 5 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))) (transform (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),(connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (transform_matrix_scale_angle_x_y 1 0 (+ 2 0.5) 0)) 2 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (* (- 5 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['base_tier_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial']","['base_tiers', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial']","['all_base_strokes', 'row_of_dials', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', 'repeat_x', 'repeat_y', 'c', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']","['0.0', '1.0', '1.5']","['1', '5.0', '2.0', '1.5', '(/ pi 2)', '2.0']",[],"['base_tier_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', '0.0', '1.0', '1.5']","['base_tiers', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', '1', '5.0', '2.0', '1.5', '(/ pi 2)', '2.0']","['all_base_strokes', 'row_of_dials', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', 'repeat_x', 'repeat_y', 'c', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '1', '5.0', '2.0', '1.5', '(/ pi 2)', '2.0']","['(T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-041.png
dials_context_programs_context_small_abstractions_012,dials_context_programs_train,(C (C (C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 3 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (T (C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (T (C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['C', 'C', 'C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'c', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '3', 'M', '1', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '*', '-', '3', '1', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', 'T', 'C', 'C', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '1', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '2', 'T', 'T', 'r', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'r', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '*', '+', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '*', '2', '0.5', '0.25', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0', 'T', 'C', 'C', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '1', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '2', 'T', 'T', 'r', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'r', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '-', '0', '*', '+', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '*', '2', '0.5', '0.25', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5 ,  2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [ 8.5 , -2.25]]), array([[ 8.5 , -2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [-8.5 ,  2.25]]), array([[8.5  , 1.125],
       [9.5  , 1.125]]), array([[ 8.5  , -1.125],
       [ 9.5  , -1.125]]), array([[ 9.5  , -1.125],
       [ 9.5  ,  1.125]]), array([[ 8.5  , -1.125],
       [ 8.5  ,  1.125]]), array([[-9.5  ,  1.125],
       [-8.5  ,  1.125]]), array([[-9.5  , -1.125],
       [-8.5  , -1.125]]), array([[-8.5  , -1.125],
       [-8.5  ,  1.125]]), array([[-9.5  , -1.125],
       [-9.5  ,  1.125]]), array([[-2.00000000e+00,  0.00000000e+00],
       [-2.01168972e+00,  1.07485220e-01],
       [-2.04621229e+00,  2.09944551e-01],
       [-2.10195347e+00,  3.02587108e-01],
       [-2.17630686e+00,  3.81081028e-01],
       [-2.26579578e+00,  4.41756022e-01],
       [-2.36623583e+00,  4.81774996e-01],
       [-2.47293055e+00,  4.99266707e-01],
       [-2.58089100e+00,  4.93413261e-01],
       [-2.68506908e+00,  4.64488360e-01],
       [-2.78059353e+00,  4.13844499e-01],
       [-2.86299775e+00,  3.43849729e-01],
       [-2.92842859e+00,  2.57776929e-01],
       [-2.97382659e+00,  1.59650765e-01],
       [-2.99706898e+00,  5.40595092e-02],
       [-2.99706898e+00, -5.40595092e-02],
       [-2.97382659e+00, -1.59650765e-01],
       [-2.92842859e+00, -2.57776929e-01],
       [-2.86299775e+00, -3.43849729e-01],
       [-2.78059353e+00, -4.13844499e-01],
       [-2.68506908e+00, -4.64488360e-01],
       [-2.58089100e+00, -4.93413261e-01],
       [-2.47293055e+00, -4.99266707e-01],
       [-2.36623583e+00, -4.81774996e-01],
       [-2.26579578e+00, -4.41756022e-01],
       [-2.17630686e+00, -3.81081028e-01],
       [-2.10195347e+00, -3.02587108e-01],
       [-2.04621229e+00, -2.09944551e-01],
       [-2.01168972e+00, -1.07485220e-01],
       [-2.00000000e+00, -1.22464680e-16]]), array([[-1.75000000e+00,  0.00000000e+00],
       [-1.76753458e+00,  1.61227830e-01],
       [-1.81931844e+00,  3.14916826e-01],
       [-1.90293020e+00,  4.53880661e-01],
       [-2.01446029e+00,  5.71621541e-01],
       [-2.14869367e+00,  6.62634033e-01],
       [-2.29935375e+00,  7.22662494e-01],
       [-2.45939582e+00,  7.48900060e-01],
       [-2.62133650e+00,  7.40119892e-01],
       [-2.77760362e+00,  6.96732540e-01],
       [-2.92089030e+00,  6.20766749e-01],
       [-3.04449662e+00,  5.15774594e-01],
       [-3.14264288e+00,  3.86665393e-01],
       [-3.21073988e+00,  2.39476148e-01],
       [-3.24560347e+00,  8.10892638e-02],
       [-3.24560347e+00, -8.10892638e-02],
       [-3.21073988e+00, -2.39476148e-01],
       [-3.14264288e+00, -3.86665393e-01],
       [-3.04449662e+00, -5.15774594e-01],
       [-2.92089030e+00, -6.20766749e-01],
       [-2.77760362e+00, -6.96732540e-01],
       [-2.62133650e+00, -7.40119892e-01],
       [-2.45939582e+00, -7.48900060e-01],
       [-2.29935375e+00, -7.22662494e-01],
       [-2.14869367e+00, -6.62634033e-01],
       [-2.01446029e+00, -5.71621541e-01],
       [-1.90293020e+00, -4.53880661e-01],
       [-1.81931844e+00, -3.14916826e-01],
       [-1.76753458e+00, -1.61227830e-01],
       [-1.75000000e+00, -1.83697020e-16]]), array([[-2.5,  0. ],
       [-2.5,  1. ]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[ 7.50000000e-01,  0.00000000e+00],
       [ 7.32465417e-01,  1.61227830e-01],
       [ 6.80681565e-01,  3.14916826e-01],
       [ 5.97069799e-01,  4.53880661e-01],
       [ 4.85539714e-01,  5.71621541e-01],
       [ 3.51306331e-01,  6.62634033e-01],
       [ 2.00646254e-01,  7.22662494e-01],
       [ 4.06041814e-02,  7.48900060e-01],
       [-1.21336497e-01,  7.40119892e-01],
       [-2.77603617e-01,  6.96732540e-01],
       [-4.20890299e-01,  6.20766749e-01],
       [-5.44496619e-01,  5.15774594e-01],
       [-6.42642882e-01,  3.86665393e-01],
       [-7.10739878e-01,  2.39476148e-01],
       [-7.45603468e-01,  8.10892638e-02],
       [-7.45603468e-01, -8.10892638e-02],
       [-7.10739878e-01, -2.39476148e-01],
       [-6.42642882e-01, -3.86665393e-01],
       [-5.44496619e-01, -5.15774594e-01],
       [-4.20890299e-01, -6.20766749e-01],
       [-2.77603617e-01, -6.96732540e-01],
       [-1.21336497e-01, -7.40119892e-01],
       [ 4.06041814e-02, -7.48900060e-01],
       [ 2.00646254e-01, -7.22662494e-01],
       [ 3.51306331e-01, -6.62634033e-01],
       [ 4.85539714e-01, -5.71621541e-01],
       [ 5.97069799e-01, -4.53880661e-01],
       [ 6.80681565e-01, -3.14916826e-01],
       [ 7.32465417e-01, -1.61227830e-01],
       [ 7.50000000e-01, -1.83697020e-16]]), array([[0., 0.],
       [0., 1.]]), array([[ 3.00000000e+00,  0.00000000e+00],
       [ 2.98831028e+00,  1.07485220e-01],
       [ 2.95378771e+00,  2.09944551e-01],
       [ 2.89804653e+00,  3.02587108e-01],
       [ 2.82369314e+00,  3.81081028e-01],
       [ 2.73420422e+00,  4.41756022e-01],
       [ 2.63376417e+00,  4.81774996e-01],
       [ 2.52706945e+00,  4.99266707e-01],
       [ 2.41910900e+00,  4.93413261e-01],
       [ 2.31493092e+00,  4.64488360e-01],
       [ 2.21940647e+00,  4.13844499e-01],
       [ 2.13700225e+00,  3.43849729e-01],
       [ 2.07157141e+00,  2.57776929e-01],
       [ 2.02617341e+00,  1.59650765e-01],
       [ 2.00293102e+00,  5.40595092e-02],
       [ 2.00293102e+00, -5.40595092e-02],
       [ 2.02617341e+00, -1.59650765e-01],
       [ 2.07157141e+00, -2.57776929e-01],
       [ 2.13700225e+00, -3.43849729e-01],
       [ 2.21940647e+00, -4.13844499e-01],
       [ 2.31493092e+00, -4.64488360e-01],
       [ 2.41910900e+00, -4.93413261e-01],
       [ 2.52706945e+00, -4.99266707e-01],
       [ 2.63376417e+00, -4.81774996e-01],
       [ 2.73420422e+00, -4.41756022e-01],
       [ 2.82369314e+00, -3.81081028e-01],
       [ 2.89804653e+00, -3.02587108e-01],
       [ 2.95378771e+00, -2.09944551e-01],
       [ 2.98831028e+00, -1.07485220e-01],
       [ 3.00000000e+00, -1.22464680e-16]]), array([[ 3.25000000e+00,  0.00000000e+00],
       [ 3.23246542e+00,  1.61227830e-01],
       [ 3.18068156e+00,  3.14916826e-01],
       [ 3.09706980e+00,  4.53880661e-01],
       [ 2.98553971e+00,  5.71621541e-01],
       [ 2.85130633e+00,  6.62634033e-01],
       [ 2.70064625e+00,  7.22662494e-01],
       [ 2.54060418e+00,  7.48900060e-01],
       [ 2.37866350e+00,  7.40119892e-01],
       [ 2.22239638e+00,  6.96732540e-01],
       [ 2.07910970e+00,  6.20766749e-01],
       [ 1.95550338e+00,  5.15774594e-01],
       [ 1.85735712e+00,  3.86665393e-01],
       [ 1.78926012e+00,  2.39476148e-01],
       [ 1.75439653e+00,  8.10892638e-02],
       [ 1.75439653e+00, -8.10892638e-02],
       [ 1.78926012e+00, -2.39476148e-01],
       [ 1.85735712e+00, -3.86665393e-01],
       [ 1.95550338e+00, -5.15774594e-01],
       [ 2.07910970e+00, -6.20766749e-01],
       [ 2.22239638e+00, -6.96732540e-01],
       [ 2.37866350e+00, -7.40119892e-01],
       [ 2.54060418e+00, -7.48900060e-01],
       [ 2.70064625e+00, -7.22662494e-01],
       [ 2.85130633e+00, -6.62634033e-01],
       [ 2.98553971e+00, -5.71621541e-01],
       [ 3.09706980e+00, -4.53880661e-01],
       [ 3.18068156e+00, -3.14916826e-01],
       [ 3.23246542e+00, -1.61227830e-01],
       [ 3.25000000e+00, -1.83697020e-16]]), array([[2.5, 0. ],
       [2.5, 1. ]]), array([[4.75, 2.25],
       [4.75, 5.25]]), array([[3.75, 5.25],
       [5.75, 5.25]]), array([[3.75, 4.25],
       [5.75, 4.25]]), array([[3.75, 3.25],
       [5.75, 3.25]]), array([[2.75, 4.75],
       [3.75, 4.75],
       [3.75, 5.75],
       [2.75, 5.75],
       [2.75, 4.75]]), array([[5.75, 4.75],
       [6.75, 4.75],
       [6.75, 5.75],
       [5.75, 5.75],
       [5.75, 4.75]]), array([[-4.75,  2.25],
       [-4.75,  5.25]]), array([[-5.75,  5.25],
       [-3.75,  5.25]]), array([[-5.75,  4.25],
       [-3.75,  4.25]]), array([[-5.75,  3.25],
       [-3.75,  3.25]]), array([[-6.75,  4.75],
       [-5.75,  4.75],
       [-5.75,  5.75],
       [-6.75,  5.75],
       [-6.75,  4.75]]), array([[-3.75,  4.75],
       [-2.75,  4.75],
       [-2.75,  5.75],
       [-3.75,  5.75],
       [-3.75,  4.75]])]]",33,(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform circle (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 3 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (transform (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (transform (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (transform_matrix_scale_angle_x_y 1 0 (+ 2 0.5) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (* (- 3 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 2)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 2)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', 'antenna_lines', 'antenna_finial']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T r (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T r (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'c', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T r (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T r (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))', '(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']","['0.0', '1.0', '1.5']","['1', '3.0', '1.0', '1.5', '(/ pi 2)', '3.0', '3.0']",[],"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', '0.0', '1.0', '1.5']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', 'antenna_lines', 'antenna_finial', '1', '3.0', '1.0', '1.5', '(/ pi 2)', '3.0', '3.0']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T r (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T r (M 1 0 (+ 0.5 1) (* 0.5 1)))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'c', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T r (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T r (M 1 0 (+ 0.5 1) (* 0.5 1)))', '1', '3.0', '1.0', '1.5', '(/ pi 2)', '3.0', '3.0']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))', '(C (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-042.png
dials_context_programs_context_small_abstractions_013,dials_context_programs_train,(C (C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (M 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))))))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 3 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),"['C', 'C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '1', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '1', 'M', '1', '0', '0', '+', '*', '0.5', '0', '*', '0.5', '+', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '1', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'repeat', 'c', '1', 'M', '+', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '3', 'M', '1', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '*', '-', '3', '1', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5']","[[array([[-8.5 ,  2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [ 8.5 , -2.25]]), array([[ 8.5 , -2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [-8.5 ,  2.25]]), array([[-7.5,  4.5],
       [ 7.5,  4.5]]), array([[-7.5 ,  2.25],
       [ 7.5 ,  2.25]]), array([[7.5 , 2.25],
       [7.5 , 4.5 ]]), array([[-7.5 ,  2.25],
       [-7.5 ,  4.5 ]]), array([[8.5  , 1.125],
       [9.5  , 1.125]]), array([[ 8.5  , -1.125],
       [ 9.5  , -1.125]]), array([[ 9.5  , -1.125],
       [ 9.5  ,  1.125]]), array([[ 8.5  , -1.125],
       [ 8.5  ,  1.125]]), array([[-9.5  ,  1.125],
       [-8.5  ,  1.125]]), array([[-9.5  , -1.125],
       [-8.5  , -1.125]]), array([[-8.5  , -1.125],
       [-8.5  ,  1.125]]), array([[-9.5  , -1.125],
       [-9.5  ,  1.125]]), array([[-2.00000000e+00,  0.00000000e+00],
       [-2.01168972e+00,  1.07485220e-01],
       [-2.04621229e+00,  2.09944551e-01],
       [-2.10195347e+00,  3.02587108e-01],
       [-2.17630686e+00,  3.81081028e-01],
       [-2.26579578e+00,  4.41756022e-01],
       [-2.36623583e+00,  4.81774996e-01],
       [-2.47293055e+00,  4.99266707e-01],
       [-2.58089100e+00,  4.93413261e-01],
       [-2.68506908e+00,  4.64488360e-01],
       [-2.78059353e+00,  4.13844499e-01],
       [-2.86299775e+00,  3.43849729e-01],
       [-2.92842859e+00,  2.57776929e-01],
       [-2.97382659e+00,  1.59650765e-01],
       [-2.99706898e+00,  5.40595092e-02],
       [-2.99706898e+00, -5.40595092e-02],
       [-2.97382659e+00, -1.59650765e-01],
       [-2.92842859e+00, -2.57776929e-01],
       [-2.86299775e+00, -3.43849729e-01],
       [-2.78059353e+00, -4.13844499e-01],
       [-2.68506908e+00, -4.64488360e-01],
       [-2.58089100e+00, -4.93413261e-01],
       [-2.47293055e+00, -4.99266707e-01],
       [-2.36623583e+00, -4.81774996e-01],
       [-2.26579578e+00, -4.41756022e-01],
       [-2.17630686e+00, -3.81081028e-01],
       [-2.10195347e+00, -3.02587108e-01],
       [-2.04621229e+00, -2.09944551e-01],
       [-2.01168972e+00, -1.07485220e-01],
       [-2.00000000e+00, -1.22464680e-16]]), array([[-2.5,  0. ],
       [-2.5,  1. ]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[0., 0.],
       [0., 1.]]), array([[ 3.00000000e+00,  0.00000000e+00],
       [ 2.98831028e+00,  1.07485220e-01],
       [ 2.95378771e+00,  2.09944551e-01],
       [ 2.89804653e+00,  3.02587108e-01],
       [ 2.82369314e+00,  3.81081028e-01],
       [ 2.73420422e+00,  4.41756022e-01],
       [ 2.63376417e+00,  4.81774996e-01],
       [ 2.52706945e+00,  4.99266707e-01],
       [ 2.41910900e+00,  4.93413261e-01],
       [ 2.31493092e+00,  4.64488360e-01],
       [ 2.21940647e+00,  4.13844499e-01],
       [ 2.13700225e+00,  3.43849729e-01],
       [ 2.07157141e+00,  2.57776929e-01],
       [ 2.02617341e+00,  1.59650765e-01],
       [ 2.00293102e+00,  5.40595092e-02],
       [ 2.00293102e+00, -5.40595092e-02],
       [ 2.02617341e+00, -1.59650765e-01],
       [ 2.07157141e+00, -2.57776929e-01],
       [ 2.13700225e+00, -3.43849729e-01],
       [ 2.21940647e+00, -4.13844499e-01],
       [ 2.31493092e+00, -4.64488360e-01],
       [ 2.41910900e+00, -4.93413261e-01],
       [ 2.52706945e+00, -4.99266707e-01],
       [ 2.63376417e+00, -4.81774996e-01],
       [ 2.73420422e+00, -4.41756022e-01],
       [ 2.82369314e+00, -3.81081028e-01],
       [ 2.89804653e+00, -3.02587108e-01],
       [ 2.95378771e+00, -2.09944551e-01],
       [ 2.98831028e+00, -1.07485220e-01],
       [ 3.00000000e+00, -1.22464680e-16]]), array([[2.5, 0. ],
       [2.5, 1. ]])]]",22,(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (transform_matrix 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))))))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (repeat_transform circle 1 (transform_matrix (+ 1 0.5) 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 3 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),(connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))))))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (repeat_transform_n_times base_circle 1 (transform_matrix_scale_angle_x_y (+ 1 0.5) 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (transform_matrix_scale_angle_x_y 1 0 (+ 2 0.5) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (* (- 3 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),"['base_tier_shape', 'base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_hand']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand']","['all_base_strokes', 'row_of_dials']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'c', '(T l (M 1 0 (- 0 0.5) 0))']","['(C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (M 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))))))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))']","['0.0', '3.375', '1.5']","['2', '3.0', '1.0', '1.5', '1.0', '(/ pi 2)']",[],"['base_tier_shape', 'base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_hand', '0.0', '3.375', '1.5']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', '2', '3.0', '1.0', '1.5', '1.0', '(/ pi 2)']","['all_base_strokes', 'row_of_dials']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '0.0', '3.375', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'c', '(T l (M 1 0 (- 0 0.5) 0))', '2', '3.0', '1.0', '1.5', '1.0', '(/ pi 2)']","['(C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (M 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))))))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-043.png
dials_context_programs_context_small_abstractions_014,dials_context_programs_train,(C (C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (M 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))))))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 3 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))) (M 1 0 (* (max (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5)))) 0.25) (+ 2 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0)))))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))) (M 1 0 (- 0 (* (max (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5)))) 0.25)) (+ 2 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0)))))),"['C', 'C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '1', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '1', 'M', '1', '0', '0', '+', '*', '0.5', '0', '*', '0.5', '+', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '1', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '3', 'M', '1', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '*', '-', '3', '1', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '1', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '2', 'M', '1', '0', '*', 'max', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '1', '*', '4', '0.5', '0.25', '+', '2', '+', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '1', '+', '*', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '1', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '2', 'M', '1', '0', '-', '0', '*', 'max', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '1', '*', '4', '0.5', '0.25', '+', '2', '+', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '1', '+', '*', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5 ,  2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [ 8.5 , -2.25]]), array([[ 8.5 , -2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [-8.5 ,  2.25]]), array([[-7.5,  4.5],
       [ 7.5,  4.5]]), array([[-7.5 ,  2.25],
       [ 7.5 ,  2.25]]), array([[7.5 , 2.25],
       [7.5 , 4.5 ]]), array([[-7.5 ,  2.25],
       [-7.5 ,  4.5 ]]), array([[-2.00000000e+00,  0.00000000e+00],
       [-2.01168972e+00,  1.07485220e-01],
       [-2.04621229e+00,  2.09944551e-01],
       [-2.10195347e+00,  3.02587108e-01],
       [-2.17630686e+00,  3.81081028e-01],
       [-2.26579578e+00,  4.41756022e-01],
       [-2.36623583e+00,  4.81774996e-01],
       [-2.47293055e+00,  4.99266707e-01],
       [-2.58089100e+00,  4.93413261e-01],
       [-2.68506908e+00,  4.64488360e-01],
       [-2.78059353e+00,  4.13844499e-01],
       [-2.86299775e+00,  3.43849729e-01],
       [-2.92842859e+00,  2.57776929e-01],
       [-2.97382659e+00,  1.59650765e-01],
       [-2.99706898e+00,  5.40595092e-02],
       [-2.99706898e+00, -5.40595092e-02],
       [-2.97382659e+00, -1.59650765e-01],
       [-2.92842859e+00, -2.57776929e-01],
       [-2.86299775e+00, -3.43849729e-01],
       [-2.78059353e+00, -4.13844499e-01],
       [-2.68506908e+00, -4.64488360e-01],
       [-2.58089100e+00, -4.93413261e-01],
       [-2.47293055e+00, -4.99266707e-01],
       [-2.36623583e+00, -4.81774996e-01],
       [-2.26579578e+00, -4.41756022e-01],
       [-2.17630686e+00, -3.81081028e-01],
       [-2.10195347e+00, -3.02587108e-01],
       [-2.04621229e+00, -2.09944551e-01],
       [-2.01168972e+00, -1.07485220e-01],
       [-2.00000000e+00, -1.22464680e-16]]), array([[-3.25, -0.75],
       [-1.75, -0.75],
       [-1.75,  0.75],
       [-3.25,  0.75],
       [-3.25, -0.75]]), array([[-2.5,  0. ],
       [-2.5,  1. ]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[-0.75, -0.75],
       [ 0.75, -0.75],
       [ 0.75,  0.75],
       [-0.75,  0.75],
       [-0.75, -0.75]]), array([[0., 0.],
       [0., 1.]]), array([[ 3.00000000e+00,  0.00000000e+00],
       [ 2.98831028e+00,  1.07485220e-01],
       [ 2.95378771e+00,  2.09944551e-01],
       [ 2.89804653e+00,  3.02587108e-01],
       [ 2.82369314e+00,  3.81081028e-01],
       [ 2.73420422e+00,  4.41756022e-01],
       [ 2.63376417e+00,  4.81774996e-01],
       [ 2.52706945e+00,  4.99266707e-01],
       [ 2.41910900e+00,  4.93413261e-01],
       [ 2.31493092e+00,  4.64488360e-01],
       [ 2.21940647e+00,  4.13844499e-01],
       [ 2.13700225e+00,  3.43849729e-01],
       [ 2.07157141e+00,  2.57776929e-01],
       [ 2.02617341e+00,  1.59650765e-01],
       [ 2.00293102e+00,  5.40595092e-02],
       [ 2.00293102e+00, -5.40595092e-02],
       [ 2.02617341e+00, -1.59650765e-01],
       [ 2.07157141e+00, -2.57776929e-01],
       [ 2.13700225e+00, -3.43849729e-01],
       [ 2.21940647e+00, -4.13844499e-01],
       [ 2.31493092e+00, -4.64488360e-01],
       [ 2.41910900e+00, -4.93413261e-01],
       [ 2.52706945e+00, -4.99266707e-01],
       [ 2.63376417e+00, -4.81774996e-01],
       [ 2.73420422e+00, -4.41756022e-01],
       [ 2.82369314e+00, -3.81081028e-01],
       [ 2.89804653e+00, -3.02587108e-01],
       [ 2.95378771e+00, -2.09944551e-01],
       [ 2.98831028e+00, -1.07485220e-01],
       [ 3.00000000e+00, -1.22464680e-16]]), array([[ 1.75, -0.75],
       [ 3.25, -0.75],
       [ 3.25,  0.75],
       [ 1.75,  0.75],
       [ 1.75, -0.75]]), array([[2.5, 0. ],
       [2.5, 1. ]]), array([[4.25, 4.5 ],
       [4.25, 7.5 ]]), array([[3.25, 7.5 ],
       [5.25, 7.5 ]]), array([[3.25, 6.5 ],
       [5.25, 6.5 ]]), array([[3.25, 5.5 ],
       [5.25, 5.5 ]]), array([[-4.25,  4.5 ],
       [-4.25,  7.5 ]]), array([[-5.25,  7.5 ],
       [-3.25,  7.5 ]]), array([[-5.25,  6.5 ],
       [-3.25,  6.5 ]]), array([[-5.25,  5.5 ],
       [-3.25,  5.5 ]])]]",25,(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (transform_matrix 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))))))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 3 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform_matrix 1 0 (* (max (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5)))) 0.25) (+ 2 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0)))))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform_matrix 1 0 (- 0 (* (max (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5)))) 0.25)) (+ 2 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0)))))),(connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))))))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (transform_matrix_scale_angle_x_y 1 0 (+ 2 0.5) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (* (- 3 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform_matrix_scale_angle_x_y 1 0 (* (max (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5)))) 0.25) (+ 2 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0)))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* (max (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5)))) 0.25)) (+ 2 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0)))))),"['base_tier_shape', 'base_tier_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_horizontal_line']","['base_tiers', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_lines']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))']","['(C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (M 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))))))))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2))))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2))))']","['0.0', '3.375', '1.0', '1.5']","['2', '3.0', '1.0', '1.5', '(/ pi 2)', '3.0', '3.0']",[],"['base_tier_shape', 'base_tier_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_horizontal_line', '0.0', '3.375', '1.0', '1.5']","['base_tiers', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_lines', '2', '3.0', '1.0', '1.5', '(/ pi 2)', '3.0', '3.0']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '0.0', '3.375', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '2', '3.0', '1.0', '1.5', '(/ pi 2)', '3.0', '3.0']","['(C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (M 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))))))))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 3 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2))))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-044.png
dials_context_programs_context_small_abstractions_015,dials_context_programs_train,(C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (+ 0 (* 0.5 (* 4 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (T (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (M 1 0 (* (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (T (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (M 1 0 (- 0 (* (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'c', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '4', 'M', '1', '0', '-', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '+', '0', '*', '0.5', '*', '4', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', 'T', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '1', 'M', '1', '0', '*', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '0.25', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0', 'T', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '1', 'M', '1', '0', '-', '0', '*', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '0.25', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5 ,  6.25],
       [ 8.5 ,  6.25]]), array([[-8.5 , -6.25],
       [ 8.5 , -6.25]]), array([[ 8.5 , -6.25],
       [ 8.5 ,  6.25]]), array([[-8.5 , -6.25],
       [-8.5 ,  6.25]]), array([[ 5.50000000e+00,  0.00000000e+00],
       [ 5.48831028e+00,  1.07485220e-01],
       [ 5.45378771e+00,  2.09944551e-01],
       [ 5.39804653e+00,  3.02587108e-01],
       [ 5.32369314e+00,  3.81081028e-01],
       [ 5.23420422e+00,  4.41756022e-01],
       [ 5.13376417e+00,  4.81774996e-01],
       [ 5.02706945e+00,  4.99266707e-01],
       [ 4.91910900e+00,  4.93413261e-01],
       [ 4.81493092e+00,  4.64488360e-01],
       [ 4.71940647e+00,  4.13844499e-01],
       [ 4.63700225e+00,  3.43849729e-01],
       [ 4.57157141e+00,  2.57776929e-01],
       [ 4.52617341e+00,  1.59650765e-01],
       [ 4.50293102e+00,  5.40595092e-02],
       [ 4.50293102e+00, -5.40595092e-02],
       [ 4.52617341e+00, -1.59650765e-01],
       [ 4.57157141e+00, -2.57776929e-01],
       [ 4.63700225e+00, -3.43849729e-01],
       [ 4.71940647e+00, -4.13844499e-01],
       [ 4.81493092e+00, -4.64488360e-01],
       [ 4.91910900e+00, -4.93413261e-01],
       [ 5.02706945e+00, -4.99266707e-01],
       [ 5.13376417e+00, -4.81774996e-01],
       [ 5.23420422e+00, -4.41756022e-01],
       [ 5.32369314e+00, -3.81081028e-01],
       [ 5.39804653e+00, -3.02587108e-01],
       [ 5.45378771e+00, -2.09944551e-01],
       [ 5.48831028e+00, -1.07485220e-01],
       [ 5.50000000e+00, -1.22464680e-16]]), array([[ 5.75000000e+00,  0.00000000e+00],
       [ 5.73246542e+00,  1.61227830e-01],
       [ 5.68068156e+00,  3.14916826e-01],
       [ 5.59706980e+00,  4.53880661e-01],
       [ 5.48553971e+00,  5.71621541e-01],
       [ 5.35130633e+00,  6.62634033e-01],
       [ 5.20064625e+00,  7.22662494e-01],
       [ 5.04060418e+00,  7.48900060e-01],
       [ 4.87866350e+00,  7.40119892e-01],
       [ 4.72239638e+00,  6.96732540e-01],
       [ 4.57910970e+00,  6.20766749e-01],
       [ 4.45550338e+00,  5.15774594e-01],
       [ 4.35735712e+00,  3.86665393e-01],
       [ 4.28926012e+00,  2.39476148e-01],
       [ 4.25439653e+00,  8.10892638e-02],
       [ 4.25439653e+00, -8.10892638e-02],
       [ 4.28926012e+00, -2.39476148e-01],
       [ 4.35735712e+00, -3.86665393e-01],
       [ 4.45550338e+00, -5.15774594e-01],
       [ 4.57910970e+00, -6.20766749e-01],
       [ 4.72239638e+00, -6.96732540e-01],
       [ 4.87866350e+00, -7.40119892e-01],
       [ 5.04060418e+00, -7.48900060e-01],
       [ 5.20064625e+00, -7.22662494e-01],
       [ 5.35130633e+00, -6.62634033e-01],
       [ 5.48553971e+00, -5.71621541e-01],
       [ 5.59706980e+00, -4.53880661e-01],
       [ 5.68068156e+00, -3.14916826e-01],
       [ 5.73246542e+00, -1.61227830e-01],
       [ 5.75000000e+00, -1.83697020e-16]]), array([[5., 0.],
       [5., 1.]]), array([[ 3.00000000e+00,  0.00000000e+00],
       [ 2.98831028e+00,  1.07485220e-01],
       [ 2.95378771e+00,  2.09944551e-01],
       [ 2.89804653e+00,  3.02587108e-01],
       [ 2.82369314e+00,  3.81081028e-01],
       [ 2.73420422e+00,  4.41756022e-01],
       [ 2.63376417e+00,  4.81774996e-01],
       [ 2.52706945e+00,  4.99266707e-01],
       [ 2.41910900e+00,  4.93413261e-01],
       [ 2.31493092e+00,  4.64488360e-01],
       [ 2.21940647e+00,  4.13844499e-01],
       [ 2.13700225e+00,  3.43849729e-01],
       [ 2.07157141e+00,  2.57776929e-01],
       [ 2.02617341e+00,  1.59650765e-01],
       [ 2.00293102e+00,  5.40595092e-02],
       [ 2.00293102e+00, -5.40595092e-02],
       [ 2.02617341e+00, -1.59650765e-01],
       [ 2.07157141e+00, -2.57776929e-01],
       [ 2.13700225e+00, -3.43849729e-01],
       [ 2.21940647e+00, -4.13844499e-01],
       [ 2.31493092e+00, -4.64488360e-01],
       [ 2.41910900e+00, -4.93413261e-01],
       [ 2.52706945e+00, -4.99266707e-01],
       [ 2.63376417e+00, -4.81774996e-01],
       [ 2.73420422e+00, -4.41756022e-01],
       [ 2.82369314e+00, -3.81081028e-01],
       [ 2.89804653e+00, -3.02587108e-01],
       [ 2.95378771e+00, -2.09944551e-01],
       [ 2.98831028e+00, -1.07485220e-01],
       [ 3.00000000e+00, -1.22464680e-16]]), array([[ 3.25000000e+00,  0.00000000e+00],
       [ 3.23246542e+00,  1.61227830e-01],
       [ 3.18068156e+00,  3.14916826e-01],
       [ 3.09706980e+00,  4.53880661e-01],
       [ 2.98553971e+00,  5.71621541e-01],
       [ 2.85130633e+00,  6.62634033e-01],
       [ 2.70064625e+00,  7.22662494e-01],
       [ 2.54060418e+00,  7.48900060e-01],
       [ 2.37866350e+00,  7.40119892e-01],
       [ 2.22239638e+00,  6.96732540e-01],
       [ 2.07910970e+00,  6.20766749e-01],
       [ 1.95550338e+00,  5.15774594e-01],
       [ 1.85735712e+00,  3.86665393e-01],
       [ 1.78926012e+00,  2.39476148e-01],
       [ 1.75439653e+00,  8.10892638e-02],
       [ 1.75439653e+00, -8.10892638e-02],
       [ 1.78926012e+00, -2.39476148e-01],
       [ 1.85735712e+00, -3.86665393e-01],
       [ 1.95550338e+00, -5.15774594e-01],
       [ 2.07910970e+00, -6.20766749e-01],
       [ 2.22239638e+00, -6.96732540e-01],
       [ 2.37866350e+00, -7.40119892e-01],
       [ 2.54060418e+00, -7.48900060e-01],
       [ 2.70064625e+00, -7.22662494e-01],
       [ 2.85130633e+00, -6.62634033e-01],
       [ 2.98553971e+00, -5.71621541e-01],
       [ 3.09706980e+00, -4.53880661e-01],
       [ 3.18068156e+00, -3.14916826e-01],
       [ 3.23246542e+00, -1.61227830e-01],
       [ 3.25000000e+00, -1.83697020e-16]]), array([[2.5, 0. ],
       [2.5, 1. ]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[ 7.50000000e-01,  0.00000000e+00],
       [ 7.32465417e-01,  1.61227830e-01],
       [ 6.80681565e-01,  3.14916826e-01],
       [ 5.97069799e-01,  4.53880661e-01],
       [ 4.85539714e-01,  5.71621541e-01],
       [ 3.51306331e-01,  6.62634033e-01],
       [ 2.00646254e-01,  7.22662494e-01],
       [ 4.06041814e-02,  7.48900060e-01],
       [-1.21336497e-01,  7.40119892e-01],
       [-2.77603617e-01,  6.96732540e-01],
       [-4.20890299e-01,  6.20766749e-01],
       [-5.44496619e-01,  5.15774594e-01],
       [-6.42642882e-01,  3.86665393e-01],
       [-7.10739878e-01,  2.39476148e-01],
       [-7.45603468e-01,  8.10892638e-02],
       [-7.45603468e-01, -8.10892638e-02],
       [-7.10739878e-01, -2.39476148e-01],
       [-6.42642882e-01, -3.86665393e-01],
       [-5.44496619e-01, -5.15774594e-01],
       [-4.20890299e-01, -6.20766749e-01],
       [-2.77603617e-01, -6.96732540e-01],
       [-1.21336497e-01, -7.40119892e-01],
       [ 4.06041814e-02, -7.48900060e-01],
       [ 2.00646254e-01, -7.22662494e-01],
       [ 3.51306331e-01, -6.62634033e-01],
       [ 4.85539714e-01, -5.71621541e-01],
       [ 5.97069799e-01, -4.53880661e-01],
       [ 6.80681565e-01, -3.14916826e-01],
       [ 7.32465417e-01, -1.61227830e-01],
       [ 7.50000000e-01, -1.83697020e-16]]), array([[0., 0.],
       [0., 1.]]), array([[-2.00000000e+00,  0.00000000e+00],
       [-2.01168972e+00,  1.07485220e-01],
       [-2.04621229e+00,  2.09944551e-01],
       [-2.10195347e+00,  3.02587108e-01],
       [-2.17630686e+00,  3.81081028e-01],
       [-2.26579578e+00,  4.41756022e-01],
       [-2.36623583e+00,  4.81774996e-01],
       [-2.47293055e+00,  4.99266707e-01],
       [-2.58089100e+00,  4.93413261e-01],
       [-2.68506908e+00,  4.64488360e-01],
       [-2.78059353e+00,  4.13844499e-01],
       [-2.86299775e+00,  3.43849729e-01],
       [-2.92842859e+00,  2.57776929e-01],
       [-2.97382659e+00,  1.59650765e-01],
       [-2.99706898e+00,  5.40595092e-02],
       [-2.99706898e+00, -5.40595092e-02],
       [-2.97382659e+00, -1.59650765e-01],
       [-2.92842859e+00, -2.57776929e-01],
       [-2.86299775e+00, -3.43849729e-01],
       [-2.78059353e+00, -4.13844499e-01],
       [-2.68506908e+00, -4.64488360e-01],
       [-2.58089100e+00, -4.93413261e-01],
       [-2.47293055e+00, -4.99266707e-01],
       [-2.36623583e+00, -4.81774996e-01],
       [-2.26579578e+00, -4.41756022e-01],
       [-2.17630686e+00, -3.81081028e-01],
       [-2.10195347e+00, -3.02587108e-01],
       [-2.04621229e+00, -2.09944551e-01],
       [-2.01168972e+00, -1.07485220e-01],
       [-2.00000000e+00, -1.22464680e-16]]), array([[-1.75000000e+00,  0.00000000e+00],
       [-1.76753458e+00,  1.61227830e-01],
       [-1.81931844e+00,  3.14916826e-01],
       [-1.90293020e+00,  4.53880661e-01],
       [-2.01446029e+00,  5.71621541e-01],
       [-2.14869367e+00,  6.62634033e-01],
       [-2.29935375e+00,  7.22662494e-01],
       [-2.45939582e+00,  7.48900060e-01],
       [-2.62133650e+00,  7.40119892e-01],
       [-2.77760362e+00,  6.96732540e-01],
       [-2.92089030e+00,  6.20766749e-01],
       [-3.04449662e+00,  5.15774594e-01],
       [-3.14264288e+00,  3.86665393e-01],
       [-3.21073988e+00,  2.39476148e-01],
       [-3.24560347e+00,  8.10892638e-02],
       [-3.24560347e+00, -8.10892638e-02],
       [-3.21073988e+00, -2.39476148e-01],
       [-3.14264288e+00, -3.86665393e-01],
       [-3.04449662e+00, -5.15774594e-01],
       [-2.92089030e+00, -6.20766749e-01],
       [-2.77760362e+00, -6.96732540e-01],
       [-2.62133650e+00, -7.40119892e-01],
       [-2.45939582e+00, -7.48900060e-01],
       [-2.29935375e+00, -7.22662494e-01],
       [-2.14869367e+00, -6.62634033e-01],
       [-2.01446029e+00, -5.71621541e-01],
       [-1.90293020e+00, -4.53880661e-01],
       [-1.81931844e+00, -3.14916826e-01],
       [-1.76753458e+00, -1.61227830e-01],
       [-1.75000000e+00, -1.83697020e-16]]), array([[-2.5,  0. ],
       [-2.5,  1. ]]), array([[4.25, 6.25],
       [4.25, 9.25]]), array([[3.25, 9.25],
       [5.25, 9.25]]), array([[3.25, 8.25],
       [5.25, 8.25]]), array([[-4.25,  6.25],
       [-4.25,  9.25]]), array([[-5.25,  9.25],
       [-3.25,  9.25]]), array([[-5.25,  8.25],
       [-3.25,  8.25]])]]",22,(connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform circle (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (transform_matrix 1 0 (- 0 (+ 2 0.5)) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (+ 0 (* 0.5 (* 4 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (transform (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform_matrix 1 0 (* (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (transform (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform_matrix 1 0 (- 0 (* (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),(connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 2 0.5)) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (+ 0 (* 0.5 (* 4 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform_matrix_scale_angle_x_y 1 0 (* (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['base_tier_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_horizontal_line']","['base_tiers', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_lines']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', 'repeat_x', 'repeat_y', 'c', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))']","['(T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1))))', '(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1))))']","['0.0', '1.0', '1.5']","['1', '4.0', '1.0', '1.5', '(/ pi 2)', '2.0', '2.0']",[],"['base_tier_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_horizontal_line', '0.0', '1.0', '1.5']","['base_tiers', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_lines', '1', '4.0', '1.0', '1.5', '(/ pi 2)', '2.0', '2.0']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', 'repeat_x', 'repeat_y', 'c', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '1', '4.0', '1.0', '1.5', '(/ pi 2)', '2.0', '2.0']","['(T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1))))', '(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-045.png
dials_context_programs_context_small_abstractions_016,dials_context_programs_train,(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (+ 0 (* 0.5 (* 4 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (T (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'c', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '4', 'M', '1', '0', '-', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '+', '0', '*', '0.5', '*', '4', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', 'T', 'C', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '1', 'T', 'T', 'r', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'r', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '0', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5 ,  6.25],
       [ 8.5 ,  6.25]]), array([[-8.5 , -6.25],
       [ 8.5 , -6.25]]), array([[ 8.5 , -6.25],
       [ 8.5 ,  6.25]]), array([[-8.5 , -6.25],
       [-8.5 ,  6.25]]), array([[ 5.50000000e+00,  0.00000000e+00],
       [ 5.48831028e+00,  1.07485220e-01],
       [ 5.45378771e+00,  2.09944551e-01],
       [ 5.39804653e+00,  3.02587108e-01],
       [ 5.32369314e+00,  3.81081028e-01],
       [ 5.23420422e+00,  4.41756022e-01],
       [ 5.13376417e+00,  4.81774996e-01],
       [ 5.02706945e+00,  4.99266707e-01],
       [ 4.91910900e+00,  4.93413261e-01],
       [ 4.81493092e+00,  4.64488360e-01],
       [ 4.71940647e+00,  4.13844499e-01],
       [ 4.63700225e+00,  3.43849729e-01],
       [ 4.57157141e+00,  2.57776929e-01],
       [ 4.52617341e+00,  1.59650765e-01],
       [ 4.50293102e+00,  5.40595092e-02],
       [ 4.50293102e+00, -5.40595092e-02],
       [ 4.52617341e+00, -1.59650765e-01],
       [ 4.57157141e+00, -2.57776929e-01],
       [ 4.63700225e+00, -3.43849729e-01],
       [ 4.71940647e+00, -4.13844499e-01],
       [ 4.81493092e+00, -4.64488360e-01],
       [ 4.91910900e+00, -4.93413261e-01],
       [ 5.02706945e+00, -4.99266707e-01],
       [ 5.13376417e+00, -4.81774996e-01],
       [ 5.23420422e+00, -4.41756022e-01],
       [ 5.32369314e+00, -3.81081028e-01],
       [ 5.39804653e+00, -3.02587108e-01],
       [ 5.45378771e+00, -2.09944551e-01],
       [ 5.48831028e+00, -1.07485220e-01],
       [ 5.50000000e+00, -1.22464680e-16]]), array([[ 5.75000000e+00,  0.00000000e+00],
       [ 5.73246542e+00,  1.61227830e-01],
       [ 5.68068156e+00,  3.14916826e-01],
       [ 5.59706980e+00,  4.53880661e-01],
       [ 5.48553971e+00,  5.71621541e-01],
       [ 5.35130633e+00,  6.62634033e-01],
       [ 5.20064625e+00,  7.22662494e-01],
       [ 5.04060418e+00,  7.48900060e-01],
       [ 4.87866350e+00,  7.40119892e-01],
       [ 4.72239638e+00,  6.96732540e-01],
       [ 4.57910970e+00,  6.20766749e-01],
       [ 4.45550338e+00,  5.15774594e-01],
       [ 4.35735712e+00,  3.86665393e-01],
       [ 4.28926012e+00,  2.39476148e-01],
       [ 4.25439653e+00,  8.10892638e-02],
       [ 4.25439653e+00, -8.10892638e-02],
       [ 4.28926012e+00, -2.39476148e-01],
       [ 4.35735712e+00, -3.86665393e-01],
       [ 4.45550338e+00, -5.15774594e-01],
       [ 4.57910970e+00, -6.20766749e-01],
       [ 4.72239638e+00, -6.96732540e-01],
       [ 4.87866350e+00, -7.40119892e-01],
       [ 5.04060418e+00, -7.48900060e-01],
       [ 5.20064625e+00, -7.22662494e-01],
       [ 5.35130633e+00, -6.62634033e-01],
       [ 5.48553971e+00, -5.71621541e-01],
       [ 5.59706980e+00, -4.53880661e-01],
       [ 5.68068156e+00, -3.14916826e-01],
       [ 5.73246542e+00, -1.61227830e-01],
       [ 5.75000000e+00, -1.83697020e-16]]), array([[5., 0.],
       [5., 1.]]), array([[ 3.00000000e+00,  0.00000000e+00],
       [ 2.98831028e+00,  1.07485220e-01],
       [ 2.95378771e+00,  2.09944551e-01],
       [ 2.89804653e+00,  3.02587108e-01],
       [ 2.82369314e+00,  3.81081028e-01],
       [ 2.73420422e+00,  4.41756022e-01],
       [ 2.63376417e+00,  4.81774996e-01],
       [ 2.52706945e+00,  4.99266707e-01],
       [ 2.41910900e+00,  4.93413261e-01],
       [ 2.31493092e+00,  4.64488360e-01],
       [ 2.21940647e+00,  4.13844499e-01],
       [ 2.13700225e+00,  3.43849729e-01],
       [ 2.07157141e+00,  2.57776929e-01],
       [ 2.02617341e+00,  1.59650765e-01],
       [ 2.00293102e+00,  5.40595092e-02],
       [ 2.00293102e+00, -5.40595092e-02],
       [ 2.02617341e+00, -1.59650765e-01],
       [ 2.07157141e+00, -2.57776929e-01],
       [ 2.13700225e+00, -3.43849729e-01],
       [ 2.21940647e+00, -4.13844499e-01],
       [ 2.31493092e+00, -4.64488360e-01],
       [ 2.41910900e+00, -4.93413261e-01],
       [ 2.52706945e+00, -4.99266707e-01],
       [ 2.63376417e+00, -4.81774996e-01],
       [ 2.73420422e+00, -4.41756022e-01],
       [ 2.82369314e+00, -3.81081028e-01],
       [ 2.89804653e+00, -3.02587108e-01],
       [ 2.95378771e+00, -2.09944551e-01],
       [ 2.98831028e+00, -1.07485220e-01],
       [ 3.00000000e+00, -1.22464680e-16]]), array([[ 3.25000000e+00,  0.00000000e+00],
       [ 3.23246542e+00,  1.61227830e-01],
       [ 3.18068156e+00,  3.14916826e-01],
       [ 3.09706980e+00,  4.53880661e-01],
       [ 2.98553971e+00,  5.71621541e-01],
       [ 2.85130633e+00,  6.62634033e-01],
       [ 2.70064625e+00,  7.22662494e-01],
       [ 2.54060418e+00,  7.48900060e-01],
       [ 2.37866350e+00,  7.40119892e-01],
       [ 2.22239638e+00,  6.96732540e-01],
       [ 2.07910970e+00,  6.20766749e-01],
       [ 1.95550338e+00,  5.15774594e-01],
       [ 1.85735712e+00,  3.86665393e-01],
       [ 1.78926012e+00,  2.39476148e-01],
       [ 1.75439653e+00,  8.10892638e-02],
       [ 1.75439653e+00, -8.10892638e-02],
       [ 1.78926012e+00, -2.39476148e-01],
       [ 1.85735712e+00, -3.86665393e-01],
       [ 1.95550338e+00, -5.15774594e-01],
       [ 2.07910970e+00, -6.20766749e-01],
       [ 2.22239638e+00, -6.96732540e-01],
       [ 2.37866350e+00, -7.40119892e-01],
       [ 2.54060418e+00, -7.48900060e-01],
       [ 2.70064625e+00, -7.22662494e-01],
       [ 2.85130633e+00, -6.62634033e-01],
       [ 2.98553971e+00, -5.71621541e-01],
       [ 3.09706980e+00, -4.53880661e-01],
       [ 3.18068156e+00, -3.14916826e-01],
       [ 3.23246542e+00, -1.61227830e-01],
       [ 3.25000000e+00, -1.83697020e-16]]), array([[2.5, 0. ],
       [2.5, 1. ]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[ 7.50000000e-01,  0.00000000e+00],
       [ 7.32465417e-01,  1.61227830e-01],
       [ 6.80681565e-01,  3.14916826e-01],
       [ 5.97069799e-01,  4.53880661e-01],
       [ 4.85539714e-01,  5.71621541e-01],
       [ 3.51306331e-01,  6.62634033e-01],
       [ 2.00646254e-01,  7.22662494e-01],
       [ 4.06041814e-02,  7.48900060e-01],
       [-1.21336497e-01,  7.40119892e-01],
       [-2.77603617e-01,  6.96732540e-01],
       [-4.20890299e-01,  6.20766749e-01],
       [-5.44496619e-01,  5.15774594e-01],
       [-6.42642882e-01,  3.86665393e-01],
       [-7.10739878e-01,  2.39476148e-01],
       [-7.45603468e-01,  8.10892638e-02],
       [-7.45603468e-01, -8.10892638e-02],
       [-7.10739878e-01, -2.39476148e-01],
       [-6.42642882e-01, -3.86665393e-01],
       [-5.44496619e-01, -5.15774594e-01],
       [-4.20890299e-01, -6.20766749e-01],
       [-2.77603617e-01, -6.96732540e-01],
       [-1.21336497e-01, -7.40119892e-01],
       [ 4.06041814e-02, -7.48900060e-01],
       [ 2.00646254e-01, -7.22662494e-01],
       [ 3.51306331e-01, -6.62634033e-01],
       [ 4.85539714e-01, -5.71621541e-01],
       [ 5.97069799e-01, -4.53880661e-01],
       [ 6.80681565e-01, -3.14916826e-01],
       [ 7.32465417e-01, -1.61227830e-01],
       [ 7.50000000e-01, -1.83697020e-16]]), array([[0., 0.],
       [0., 1.]]), array([[-2.00000000e+00,  0.00000000e+00],
       [-2.01168972e+00,  1.07485220e-01],
       [-2.04621229e+00,  2.09944551e-01],
       [-2.10195347e+00,  3.02587108e-01],
       [-2.17630686e+00,  3.81081028e-01],
       [-2.26579578e+00,  4.41756022e-01],
       [-2.36623583e+00,  4.81774996e-01],
       [-2.47293055e+00,  4.99266707e-01],
       [-2.58089100e+00,  4.93413261e-01],
       [-2.68506908e+00,  4.64488360e-01],
       [-2.78059353e+00,  4.13844499e-01],
       [-2.86299775e+00,  3.43849729e-01],
       [-2.92842859e+00,  2.57776929e-01],
       [-2.97382659e+00,  1.59650765e-01],
       [-2.99706898e+00,  5.40595092e-02],
       [-2.99706898e+00, -5.40595092e-02],
       [-2.97382659e+00, -1.59650765e-01],
       [-2.92842859e+00, -2.57776929e-01],
       [-2.86299775e+00, -3.43849729e-01],
       [-2.78059353e+00, -4.13844499e-01],
       [-2.68506908e+00, -4.64488360e-01],
       [-2.58089100e+00, -4.93413261e-01],
       [-2.47293055e+00, -4.99266707e-01],
       [-2.36623583e+00, -4.81774996e-01],
       [-2.26579578e+00, -4.41756022e-01],
       [-2.17630686e+00, -3.81081028e-01],
       [-2.10195347e+00, -3.02587108e-01],
       [-2.04621229e+00, -2.09944551e-01],
       [-2.01168972e+00, -1.07485220e-01],
       [-2.00000000e+00, -1.22464680e-16]]), array([[-1.75000000e+00,  0.00000000e+00],
       [-1.76753458e+00,  1.61227830e-01],
       [-1.81931844e+00,  3.14916826e-01],
       [-1.90293020e+00,  4.53880661e-01],
       [-2.01446029e+00,  5.71621541e-01],
       [-2.14869367e+00,  6.62634033e-01],
       [-2.29935375e+00,  7.22662494e-01],
       [-2.45939582e+00,  7.48900060e-01],
       [-2.62133650e+00,  7.40119892e-01],
       [-2.77760362e+00,  6.96732540e-01],
       [-2.92089030e+00,  6.20766749e-01],
       [-3.04449662e+00,  5.15774594e-01],
       [-3.14264288e+00,  3.86665393e-01],
       [-3.21073988e+00,  2.39476148e-01],
       [-3.24560347e+00,  8.10892638e-02],
       [-3.24560347e+00, -8.10892638e-02],
       [-3.21073988e+00, -2.39476148e-01],
       [-3.14264288e+00, -3.86665393e-01],
       [-3.04449662e+00, -5.15774594e-01],
       [-2.92089030e+00, -6.20766749e-01],
       [-2.77760362e+00, -6.96732540e-01],
       [-2.62133650e+00, -7.40119892e-01],
       [-2.45939582e+00, -7.48900060e-01],
       [-2.29935375e+00, -7.22662494e-01],
       [-2.14869367e+00, -6.62634033e-01],
       [-2.01446029e+00, -5.71621541e-01],
       [-1.90293020e+00, -4.53880661e-01],
       [-1.81931844e+00, -3.14916826e-01],
       [-1.76753458e+00, -1.61227830e-01],
       [-1.75000000e+00, -1.83697020e-16]]), array([[-2.5,  0. ],
       [-2.5,  1. ]]), array([[0.0000000e+00, 6.2500000e+00],
       [1.8369702e-16, 9.2500000e+00]]), array([[-1.  ,  9.25],
       [ 1.  ,  9.25]]), array([[-1.  ,  8.25],
       [ 1.  ,  8.25]]), array([[-2.  ,  8.75],
       [-1.  ,  8.75],
       [-1.  ,  9.75],
       [-2.  ,  9.75],
       [-2.  ,  8.75]]), array([[1.  , 8.75],
       [2.  , 8.75],
       [2.  , 9.75],
       [1.  , 9.75],
       [1.  , 8.75]])]]",21,(connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform circle (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (transform_matrix 1 0 (- 0 (+ 2 0.5)) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (+ 0 (* 0.5 (* 4 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (transform (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),(connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 2 0.5)) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (+ 0 (* 0.5 (* 4 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['base_tier_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial']","['base_tiers', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial']","['all_base_strokes', 'row_of_dials', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T r (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', 'repeat_x', 'repeat_y', 'c', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T r (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']","['0.0', '1.0', '1.5']","['1', '4.0', '1.0', '1.5', '(/ pi 2)', '2.0']",[],"['base_tier_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', '0.0', '1.0', '1.5']","['base_tiers', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', '1', '4.0', '1.0', '1.5', '(/ pi 2)', '2.0']","['all_base_strokes', 'row_of_dials', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T r (M 1 0 (+ 0.5 1) (* 0.5 1)))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', 'repeat_x', 'repeat_y', 'c', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T r (M 1 0 (+ 0.5 1) (* 0.5 1)))', '1', '4.0', '1.0', '1.5', '(/ pi 2)', '2.0']","['(T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T c (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-046.png
dials_context_programs_context_small_abstractions_017,dials_context_programs_train,(C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (M 1 0 (- 0 (+ 2 0.5)) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (+ 0 (* 0.5 (* 4 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))),"['C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '2', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '4', 'M', '1', '0', '-', '0', '+', '2', '0.5', '0', '2', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '+', '0', '*', '0.5', '*', '4', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '2', '1', '+', '2', '0.5']","[[array([[-8.5,  3.5],
       [ 8.5,  3.5]]), array([[-8.5, -3.5],
       [ 8.5, -3.5]]), array([[ 8.5, -3.5],
       [ 8.5,  3.5]]), array([[-8.5, -3.5],
       [-8.5,  3.5]]), array([[ 5.5       , -1.25      ],
       [ 5.48831028, -1.14251478],
       [ 5.45378771, -1.04005545],
       [ 5.39804653, -0.94741289],
       [ 5.32369314, -0.86891897],
       [ 5.23420422, -0.80824398],
       [ 5.13376417, -0.768225  ],
       [ 5.02706945, -0.75073329],
       [ 4.919109  , -0.75658674],
       [ 4.81493092, -0.78551164],
       [ 4.71940647, -0.8361555 ],
       [ 4.63700225, -0.90615027],
       [ 4.57157141, -0.99222307],
       [ 4.52617341, -1.09034923],
       [ 4.50293102, -1.19594049],
       [ 4.50293102, -1.30405951],
       [ 4.52617341, -1.40965077],
       [ 4.57157141, -1.50777693],
       [ 4.63700225, -1.59384973],
       [ 4.71940647, -1.6638445 ],
       [ 4.81493092, -1.71448836],
       [ 4.919109  , -1.74341326],
       [ 5.02706945, -1.74926671],
       [ 5.13376417, -1.731775  ],
       [ 5.23420422, -1.69175602],
       [ 5.32369314, -1.63108103],
       [ 5.39804653, -1.55258711],
       [ 5.45378771, -1.45994455],
       [ 5.48831028, -1.35748522],
       [ 5.5       , -1.25      ]]), array([[ 4.25, -2.  ],
       [ 5.75, -2.  ],
       [ 5.75, -0.5 ],
       [ 4.25, -0.5 ],
       [ 4.25, -2.  ]]), array([[ 5.  , -1.25],
       [ 5.  , -0.25]]), array([[ 3.        , -1.25      ],
       [ 2.98831028, -1.14251478],
       [ 2.95378771, -1.04005545],
       [ 2.89804653, -0.94741289],
       [ 2.82369314, -0.86891897],
       [ 2.73420422, -0.80824398],
       [ 2.63376417, -0.768225  ],
       [ 2.52706945, -0.75073329],
       [ 2.419109  , -0.75658674],
       [ 2.31493092, -0.78551164],
       [ 2.21940647, -0.8361555 ],
       [ 2.13700225, -0.90615027],
       [ 2.07157141, -0.99222307],
       [ 2.02617341, -1.09034923],
       [ 2.00293102, -1.19594049],
       [ 2.00293102, -1.30405951],
       [ 2.02617341, -1.40965077],
       [ 2.07157141, -1.50777693],
       [ 2.13700225, -1.59384973],
       [ 2.21940647, -1.6638445 ],
       [ 2.31493092, -1.71448836],
       [ 2.419109  , -1.74341326],
       [ 2.52706945, -1.74926671],
       [ 2.63376417, -1.731775  ],
       [ 2.73420422, -1.69175602],
       [ 2.82369314, -1.63108103],
       [ 2.89804653, -1.55258711],
       [ 2.95378771, -1.45994455],
       [ 2.98831028, -1.35748522],
       [ 3.        , -1.25      ]]), array([[ 1.75, -2.  ],
       [ 3.25, -2.  ],
       [ 3.25, -0.5 ],
       [ 1.75, -0.5 ],
       [ 1.75, -2.  ]]), array([[ 2.5 , -1.25],
       [ 2.5 , -0.25]]), array([[ 0.5       , -1.25      ],
       [ 0.48831028, -1.14251478],
       [ 0.45378771, -1.04005545],
       [ 0.39804653, -0.94741289],
       [ 0.32369314, -0.86891897],
       [ 0.23420422, -0.80824398],
       [ 0.13376417, -0.768225  ],
       [ 0.02706945, -0.75073329],
       [-0.080891  , -0.75658674],
       [-0.18506908, -0.78551164],
       [-0.28059353, -0.8361555 ],
       [-0.36299775, -0.90615027],
       [-0.42842859, -0.99222307],
       [-0.47382659, -1.09034923],
       [-0.49706898, -1.19594049],
       [-0.49706898, -1.30405951],
       [-0.47382659, -1.40965077],
       [-0.42842859, -1.50777693],
       [-0.36299775, -1.59384973],
       [-0.28059353, -1.6638445 ],
       [-0.18506908, -1.71448836],
       [-0.080891  , -1.74341326],
       [ 0.02706945, -1.74926671],
       [ 0.13376417, -1.731775  ],
       [ 0.23420422, -1.69175602],
       [ 0.32369314, -1.63108103],
       [ 0.39804653, -1.55258711],
       [ 0.45378771, -1.45994455],
       [ 0.48831028, -1.35748522],
       [ 0.5       , -1.25      ]]), array([[-0.75, -2.  ],
       [ 0.75, -2.  ],
       [ 0.75, -0.5 ],
       [-0.75, -0.5 ],
       [-0.75, -2.  ]]), array([[ 0.  , -1.25],
       [ 0.  , -0.25]]), array([[-2.        , -1.25      ],
       [-2.01168972, -1.14251478],
       [-2.04621229, -1.04005545],
       [-2.10195347, -0.94741289],
       [-2.17630686, -0.86891897],
       [-2.26579578, -0.80824398],
       [-2.36623583, -0.768225  ],
       [-2.47293055, -0.75073329],
       [-2.580891  , -0.75658674],
       [-2.68506908, -0.78551164],
       [-2.78059353, -0.8361555 ],
       [-2.86299775, -0.90615027],
       [-2.92842859, -0.99222307],
       [-2.97382659, -1.09034923],
       [-2.99706898, -1.19594049],
       [-2.99706898, -1.30405951],
       [-2.97382659, -1.40965077],
       [-2.92842859, -1.50777693],
       [-2.86299775, -1.59384973],
       [-2.78059353, -1.6638445 ],
       [-2.68506908, -1.71448836],
       [-2.580891  , -1.74341326],
       [-2.47293055, -1.74926671],
       [-2.36623583, -1.731775  ],
       [-2.26579578, -1.69175602],
       [-2.17630686, -1.63108103],
       [-2.10195347, -1.55258711],
       [-2.04621229, -1.45994455],
       [-2.01168972, -1.35748522],
       [-2.        , -1.25      ]]), array([[-3.25, -2.  ],
       [-1.75, -2.  ],
       [-1.75, -0.5 ],
       [-3.25, -0.5 ],
       [-3.25, -2.  ]]), array([[-2.5 , -1.25],
       [-2.5 , -0.25]]), array([[5.5       , 1.25      ],
       [5.48831028, 1.35748522],
       [5.45378771, 1.45994455],
       [5.39804653, 1.55258711],
       [5.32369314, 1.63108103],
       [5.23420422, 1.69175602],
       [5.13376417, 1.731775  ],
       [5.02706945, 1.74926671],
       [4.919109  , 1.74341326],
       [4.81493092, 1.71448836],
       [4.71940647, 1.6638445 ],
       [4.63700225, 1.59384973],
       [4.57157141, 1.50777693],
       [4.52617341, 1.40965077],
       [4.50293102, 1.30405951],
       [4.50293102, 1.19594049],
       [4.52617341, 1.09034923],
       [4.57157141, 0.99222307],
       [4.63700225, 0.90615027],
       [4.71940647, 0.8361555 ],
       [4.81493092, 0.78551164],
       [4.919109  , 0.75658674],
       [5.02706945, 0.75073329],
       [5.13376417, 0.768225  ],
       [5.23420422, 0.80824398],
       [5.32369314, 0.86891897],
       [5.39804653, 0.94741289],
       [5.45378771, 1.04005545],
       [5.48831028, 1.14251478],
       [5.5       , 1.25      ]]), array([[4.25, 0.5 ],
       [5.75, 0.5 ],
       [5.75, 2.  ],
       [4.25, 2.  ],
       [4.25, 0.5 ]]), array([[5.  , 1.25],
       [5.  , 2.25]]), array([[3.        , 1.25      ],
       [2.98831028, 1.35748522],
       [2.95378771, 1.45994455],
       [2.89804653, 1.55258711],
       [2.82369314, 1.63108103],
       [2.73420422, 1.69175602],
       [2.63376417, 1.731775  ],
       [2.52706945, 1.74926671],
       [2.419109  , 1.74341326],
       [2.31493092, 1.71448836],
       [2.21940647, 1.6638445 ],
       [2.13700225, 1.59384973],
       [2.07157141, 1.50777693],
       [2.02617341, 1.40965077],
       [2.00293102, 1.30405951],
       [2.00293102, 1.19594049],
       [2.02617341, 1.09034923],
       [2.07157141, 0.99222307],
       [2.13700225, 0.90615027],
       [2.21940647, 0.8361555 ],
       [2.31493092, 0.78551164],
       [2.419109  , 0.75658674],
       [2.52706945, 0.75073329],
       [2.63376417, 0.768225  ],
       [2.73420422, 0.80824398],
       [2.82369314, 0.86891897],
       [2.89804653, 0.94741289],
       [2.95378771, 1.04005545],
       [2.98831028, 1.14251478],
       [3.        , 1.25      ]]), array([[1.75, 0.5 ],
       [3.25, 0.5 ],
       [3.25, 2.  ],
       [1.75, 2.  ],
       [1.75, 0.5 ]]), array([[2.5 , 1.25],
       [2.5 , 2.25]]), array([[ 0.5       ,  1.25      ],
       [ 0.48831028,  1.35748522],
       [ 0.45378771,  1.45994455],
       [ 0.39804653,  1.55258711],
       [ 0.32369314,  1.63108103],
       [ 0.23420422,  1.69175602],
       [ 0.13376417,  1.731775  ],
       [ 0.02706945,  1.74926671],
       [-0.080891  ,  1.74341326],
       [-0.18506908,  1.71448836],
       [-0.28059353,  1.6638445 ],
       [-0.36299775,  1.59384973],
       [-0.42842859,  1.50777693],
       [-0.47382659,  1.40965077],
       [-0.49706898,  1.30405951],
       [-0.49706898,  1.19594049],
       [-0.47382659,  1.09034923],
       [-0.42842859,  0.99222307],
       [-0.36299775,  0.90615027],
       [-0.28059353,  0.8361555 ],
       [-0.18506908,  0.78551164],
       [-0.080891  ,  0.75658674],
       [ 0.02706945,  0.75073329],
       [ 0.13376417,  0.768225  ],
       [ 0.23420422,  0.80824398],
       [ 0.32369314,  0.86891897],
       [ 0.39804653,  0.94741289],
       [ 0.45378771,  1.04005545],
       [ 0.48831028,  1.14251478],
       [ 0.5       ,  1.25      ]]), array([[-0.75,  0.5 ],
       [ 0.75,  0.5 ],
       [ 0.75,  2.  ],
       [-0.75,  2.  ],
       [-0.75,  0.5 ]]), array([[0.  , 1.25],
       [0.  , 2.25]]), array([[-2.        ,  1.25      ],
       [-2.01168972,  1.35748522],
       [-2.04621229,  1.45994455],
       [-2.10195347,  1.55258711],
       [-2.17630686,  1.63108103],
       [-2.26579578,  1.69175602],
       [-2.36623583,  1.731775  ],
       [-2.47293055,  1.74926671],
       [-2.580891  ,  1.74341326],
       [-2.68506908,  1.71448836],
       [-2.78059353,  1.6638445 ],
       [-2.86299775,  1.59384973],
       [-2.92842859,  1.50777693],
       [-2.97382659,  1.40965077],
       [-2.99706898,  1.30405951],
       [-2.99706898,  1.19594049],
       [-2.97382659,  1.09034923],
       [-2.92842859,  0.99222307],
       [-2.86299775,  0.90615027],
       [-2.78059353,  0.8361555 ],
       [-2.68506908,  0.78551164],
       [-2.580891  ,  0.75658674],
       [-2.47293055,  0.75073329],
       [-2.36623583,  0.768225  ],
       [-2.26579578,  0.80824398],
       [-2.17630686,  0.86891897],
       [-2.10195347,  0.94741289],
       [-2.04621229,  1.04005545],
       [-2.01168972,  1.14251478],
       [-2.        ,  1.25      ]]), array([[-3.25,  0.5 ],
       [-1.75,  0.5 ],
       [-1.75,  2.  ],
       [-3.25,  2.  ],
       [-3.25,  0.5 ]]), array([[-2.5 ,  1.25],
       [-2.5 ,  2.25]])]]",28,(connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (transform_matrix 1 0 (- 0 (+ 2 0.5)) 0)) 2 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (+ 0 (* 0.5 (* 4 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))),(connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 2 0.5)) 0)) 2 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (+ 0 (* 0.5 (* 4 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))),"['base_tier_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand']","['base_tiers', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand']","['all_base_strokes', 'row_of_dials']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))']","['(T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (M 1 0 (- 0 (+ 2 0.5)) 0)) 2 (M 1 0 0 (+ 2 0.5)))']","['0.0', '1.0', '1.5']","['1', '4.0', '2.0', '1.5', '(/ pi 2)']",[],"['base_tier_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', '0.0', '1.0', '1.5']","['base_tiers', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', '1', '4.0', '2.0', '1.5', '(/ pi 2)']","['all_base_strokes', 'row_of_dials']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '1', '4.0', '2.0', '1.5', '(/ pi 2)']","['(T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (M 1 0 (- 0 (+ 2 0.5)) 0)) 2 (M 1 0 0 (+ 2 0.5)))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-047.png
dials_context_programs_context_small_abstractions_018,dials_context_programs_train,(C (C (C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['C', 'C', 'C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '2', 'M', '1', '0', '-', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '+', '0', '*', '0.5', '*', '2', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'r', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'r', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '*', '+', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '*', '2', '0.5', '0.25', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'r', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'r', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '-', '0', '*', '+', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '*', '2', '0.5', '0.25', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5 ,  2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [ 8.5 , -2.25]]), array([[ 8.5 , -2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [-8.5 ,  2.25]]), array([[8.5  , 1.125],
       [9.5  , 1.125]]), array([[ 8.5  , -1.125],
       [ 9.5  , -1.125]]), array([[ 9.5  , -1.125],
       [ 9.5  ,  1.125]]), array([[ 8.5  , -1.125],
       [ 8.5  ,  1.125]]), array([[-9.5  ,  1.125],
       [-8.5  ,  1.125]]), array([[-9.5  , -1.125],
       [-8.5  , -1.125]]), array([[-8.5  , -1.125],
       [-8.5  ,  1.125]]), array([[-9.5  , -1.125],
       [-9.5  ,  1.125]]), array([[ 3.00000000e+00,  0.00000000e+00],
       [ 2.98831028e+00,  1.07485220e-01],
       [ 2.95378771e+00,  2.09944551e-01],
       [ 2.89804653e+00,  3.02587108e-01],
       [ 2.82369314e+00,  3.81081028e-01],
       [ 2.73420422e+00,  4.41756022e-01],
       [ 2.63376417e+00,  4.81774996e-01],
       [ 2.52706945e+00,  4.99266707e-01],
       [ 2.41910900e+00,  4.93413261e-01],
       [ 2.31493092e+00,  4.64488360e-01],
       [ 2.21940647e+00,  4.13844499e-01],
       [ 2.13700225e+00,  3.43849729e-01],
       [ 2.07157141e+00,  2.57776929e-01],
       [ 2.02617341e+00,  1.59650765e-01],
       [ 2.00293102e+00,  5.40595092e-02],
       [ 2.00293102e+00, -5.40595092e-02],
       [ 2.02617341e+00, -1.59650765e-01],
       [ 2.07157141e+00, -2.57776929e-01],
       [ 2.13700225e+00, -3.43849729e-01],
       [ 2.21940647e+00, -4.13844499e-01],
       [ 2.31493092e+00, -4.64488360e-01],
       [ 2.41910900e+00, -4.93413261e-01],
       [ 2.52706945e+00, -4.99266707e-01],
       [ 2.63376417e+00, -4.81774996e-01],
       [ 2.73420422e+00, -4.41756022e-01],
       [ 2.82369314e+00, -3.81081028e-01],
       [ 2.89804653e+00, -3.02587108e-01],
       [ 2.95378771e+00, -2.09944551e-01],
       [ 2.98831028e+00, -1.07485220e-01],
       [ 3.00000000e+00, -1.22464680e-16]]), array([[ 1.75, -0.75],
       [ 3.25, -0.75],
       [ 3.25,  0.75],
       [ 1.75,  0.75],
       [ 1.75, -0.75]]), array([[2.5, 0. ],
       [2.5, 1. ]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[-0.75, -0.75],
       [ 0.75, -0.75],
       [ 0.75,  0.75],
       [-0.75,  0.75],
       [-0.75, -0.75]]), array([[0., 0.],
       [0., 1.]]), array([[4.75, 2.25],
       [4.75, 5.25]]), array([[3.75, 5.25],
       [5.75, 5.25]]), array([[2.75, 4.75],
       [3.75, 4.75],
       [3.75, 5.75],
       [2.75, 5.75],
       [2.75, 4.75]]), array([[5.75, 4.75],
       [6.75, 4.75],
       [6.75, 5.75],
       [5.75, 5.75],
       [5.75, 4.75]]), array([[-4.75,  2.25],
       [-4.75,  5.25]]), array([[-5.75,  5.25],
       [-3.75,  5.25]]), array([[-6.75,  4.75],
       [-5.75,  4.75],
       [-5.75,  5.75],
       [-6.75,  5.75],
       [-6.75,  4.75]]), array([[-3.75,  4.75],
       [-2.75,  4.75],
       [-2.75,  5.75],
       [-3.75,  5.75],
       [-3.75,  4.75]])]]",26,(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (transform_matrix 1 0 (- 0 (+ 2 0.5)) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 2 0.5)) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', 'antenna_lines', 'antenna_finial']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T r (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T r (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T r (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T r (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']","['0.0', '1.0', '1.5']","['1', '2.0', '1.0', '1.5', '(/ pi 2)', '1.0', '1.0']",[],"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', '0.0', '1.0', '1.5']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', 'antenna_lines', 'antenna_finial', '1', '2.0', '1.0', '1.5', '(/ pi 2)', '1.0', '1.0']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T r (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T r (M 1 0 (+ 0.5 1) (* 0.5 1)))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T r (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T r (M 1 0 (+ 0.5 1) (* 0.5 1)))', '1', '2.0', '1.0', '1.5', '(/ pi 2)', '1.0', '1.0']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-048.png
dials_context_programs_context_small_abstractions_019,dials_context_programs_train,(C (C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (M 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))))))) (T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (T (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 (* (max (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5)))) 0.25) (+ 2 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0)))))) (T (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 (- 0 (* (max (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5)))) 0.25)) (+ 2 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0)))))),"['C', 'C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '1', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '1', 'M', '1', '0', '0', '+', '*', '0.5', '0', '*', '0.5', '+', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '1', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'repeat', 'c', '1', 'M', '+', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '2', 'M', '1', '0', '-', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '+', '0', '*', '0.5', '*', '2', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', 'T', 'C', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '1', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '*', 'max', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '1', '*', '4', '0.5', '0.25', '+', '2', '+', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '1', '+', '*', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0', 'T', 'C', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '1', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '-', '0', '*', 'max', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '1', '*', '4', '0.5', '0.25', '+', '2', '+', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '1', '+', '*', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5 ,  2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [ 8.5 , -2.25]]), array([[ 8.5 , -2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [-8.5 ,  2.25]]), array([[-7.5,  4.5],
       [ 7.5,  4.5]]), array([[-7.5 ,  2.25],
       [ 7.5 ,  2.25]]), array([[7.5 , 2.25],
       [7.5 , 4.5 ]]), array([[-7.5 ,  2.25],
       [-7.5 ,  4.5 ]]), array([[ 3.00000000e+00,  0.00000000e+00],
       [ 2.98831028e+00,  1.07485220e-01],
       [ 2.95378771e+00,  2.09944551e-01],
       [ 2.89804653e+00,  3.02587108e-01],
       [ 2.82369314e+00,  3.81081028e-01],
       [ 2.73420422e+00,  4.41756022e-01],
       [ 2.63376417e+00,  4.81774996e-01],
       [ 2.52706945e+00,  4.99266707e-01],
       [ 2.41910900e+00,  4.93413261e-01],
       [ 2.31493092e+00,  4.64488360e-01],
       [ 2.21940647e+00,  4.13844499e-01],
       [ 2.13700225e+00,  3.43849729e-01],
       [ 2.07157141e+00,  2.57776929e-01],
       [ 2.02617341e+00,  1.59650765e-01],
       [ 2.00293102e+00,  5.40595092e-02],
       [ 2.00293102e+00, -5.40595092e-02],
       [ 2.02617341e+00, -1.59650765e-01],
       [ 2.07157141e+00, -2.57776929e-01],
       [ 2.13700225e+00, -3.43849729e-01],
       [ 2.21940647e+00, -4.13844499e-01],
       [ 2.31493092e+00, -4.64488360e-01],
       [ 2.41910900e+00, -4.93413261e-01],
       [ 2.52706945e+00, -4.99266707e-01],
       [ 2.63376417e+00, -4.81774996e-01],
       [ 2.73420422e+00, -4.41756022e-01],
       [ 2.82369314e+00, -3.81081028e-01],
       [ 2.89804653e+00, -3.02587108e-01],
       [ 2.95378771e+00, -2.09944551e-01],
       [ 2.98831028e+00, -1.07485220e-01],
       [ 3.00000000e+00, -1.22464680e-16]]), array([[2.5, 0. ],
       [2.5, 1. ]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[0., 0.],
       [0., 1.]]), array([[4.25, 4.5 ],
       [4.25, 7.5 ]]), array([[3.25, 7.5 ],
       [5.25, 7.5 ]]), array([[3.25, 6.5 ],
       [5.25, 6.5 ]]), array([[3.25      , 7.5       ],
       [3.23831028, 7.60748522],
       [3.20378771, 7.70994455],
       [3.14804653, 7.80258711],
       [3.07369314, 7.88108103],
       [2.98420422, 7.94175602],
       [2.88376417, 7.981775  ],
       [2.77706945, 7.99926671],
       [2.669109  , 7.99341326],
       [2.56493092, 7.96448836],
       [2.46940647, 7.9138445 ],
       [2.38700225, 7.84384973],
       [2.32157141, 7.75777693],
       [2.27617341, 7.65965077],
       [2.25293102, 7.55405951],
       [2.25293102, 7.44594049],
       [2.27617341, 7.34034923],
       [2.32157141, 7.24222307],
       [2.38700225, 7.15615027],
       [2.46940647, 7.0861555 ],
       [2.56493092, 7.03551164],
       [2.669109  , 7.00658674],
       [2.77706945, 7.00073329],
       [2.88376417, 7.018225  ],
       [2.98420422, 7.05824398],
       [3.07369314, 7.11891897],
       [3.14804653, 7.19741289],
       [3.20378771, 7.29005545],
       [3.23831028, 7.39251478],
       [3.25      , 7.5       ]]), array([[6.25      , 7.5       ],
       [6.23831028, 7.60748522],
       [6.20378771, 7.70994455],
       [6.14804653, 7.80258711],
       [6.07369314, 7.88108103],
       [5.98420422, 7.94175602],
       [5.88376417, 7.981775  ],
       [5.77706945, 7.99926671],
       [5.669109  , 7.99341326],
       [5.56493092, 7.96448836],
       [5.46940647, 7.9138445 ],
       [5.38700225, 7.84384973],
       [5.32157141, 7.75777693],
       [5.27617341, 7.65965077],
       [5.25293102, 7.55405951],
       [5.25293102, 7.44594049],
       [5.27617341, 7.34034923],
       [5.32157141, 7.24222307],
       [5.38700225, 7.15615027],
       [5.46940647, 7.0861555 ],
       [5.56493092, 7.03551164],
       [5.669109  , 7.00658674],
       [5.77706945, 7.00073329],
       [5.88376417, 7.018225  ],
       [5.98420422, 7.05824398],
       [6.07369314, 7.11891897],
       [6.14804653, 7.19741289],
       [6.20378771, 7.29005545],
       [6.23831028, 7.39251478],
       [6.25      , 7.5       ]]), array([[-4.25,  4.5 ],
       [-4.25,  7.5 ]]), array([[-5.25,  7.5 ],
       [-3.25,  7.5 ]]), array([[-5.25,  6.5 ],
       [-3.25,  6.5 ]]), array([[-5.25      ,  7.5       ],
       [-5.26168972,  7.60748522],
       [-5.29621229,  7.70994455],
       [-5.35195347,  7.80258711],
       [-5.42630686,  7.88108103],
       [-5.51579578,  7.94175602],
       [-5.61623583,  7.981775  ],
       [-5.72293055,  7.99926671],
       [-5.830891  ,  7.99341326],
       [-5.93506908,  7.96448836],
       [-6.03059353,  7.9138445 ],
       [-6.11299775,  7.84384973],
       [-6.17842859,  7.75777693],
       [-6.22382659,  7.65965077],
       [-6.24706898,  7.55405951],
       [-6.24706898,  7.44594049],
       [-6.22382659,  7.34034923],
       [-6.17842859,  7.24222307],
       [-6.11299775,  7.15615027],
       [-6.03059353,  7.0861555 ],
       [-5.93506908,  7.03551164],
       [-5.830891  ,  7.00658674],
       [-5.72293055,  7.00073329],
       [-5.61623583,  7.018225  ],
       [-5.51579578,  7.05824398],
       [-5.42630686,  7.11891897],
       [-5.35195347,  7.19741289],
       [-5.29621229,  7.29005545],
       [-5.26168972,  7.39251478],
       [-5.25      ,  7.5       ]]), array([[-2.25      ,  7.5       ],
       [-2.26168972,  7.60748522],
       [-2.29621229,  7.70994455],
       [-2.35195347,  7.80258711],
       [-2.42630686,  7.88108103],
       [-2.51579578,  7.94175602],
       [-2.61623583,  7.981775  ],
       [-2.72293055,  7.99926671],
       [-2.830891  ,  7.99341326],
       [-2.93506908,  7.96448836],
       [-3.03059353,  7.9138445 ],
       [-3.11299775,  7.84384973],
       [-3.17842859,  7.75777693],
       [-3.22382659,  7.65965077],
       [-3.24706898,  7.55405951],
       [-3.24706898,  7.44594049],
       [-3.22382659,  7.34034923],
       [-3.17842859,  7.24222307],
       [-3.11299775,  7.15615027],
       [-3.03059353,  7.0861555 ],
       [-2.93506908,  7.03551164],
       [-2.830891  ,  7.00658674],
       [-2.72293055,  7.00073329],
       [-2.61623583,  7.018225  ],
       [-2.51579578,  7.05824398],
       [-2.42630686,  7.11891897],
       [-2.35195347,  7.19741289],
       [-2.29621229,  7.29005545],
       [-2.26168972,  7.39251478],
       [-2.25      ,  7.5       ]])]]",22,(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (transform_matrix 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))))))) (transform (repeat_transform (repeat_transform (connect_strokes (repeat_transform circle 1 (transform_matrix (+ 1 0.5) 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (transform_matrix 1 0 (- 0 (+ 2 0.5)) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (transform (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 (* (max (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5)))) 0.25) (+ 2 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0)))))) (transform (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 (- 0 (* (max (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5)))) 0.25)) (+ 2 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0)))))),(connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))))))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (repeat_transform_n_times base_circle 1 (transform_matrix_scale_angle_x_y (+ 1 0.5) 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 2 0.5)) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 (* (max (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5)))) 0.25) (+ 2 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0)))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* (max (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5)))) 0.25)) (+ 2 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0)))))),"['base_tier_shape', 'base_tier_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial']","['base_tiers', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', 'antenna_lines', 'antenna_finial']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)))', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)))', 'repeat_x', 'repeat_y', 'c', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (M 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))))))))', '(repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))', '(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']","['0.0', '3.375', '1.5']","['2', '2.0', '1.0', '1.5', '1.0', '(/ pi 2)', '2.0', '2.0']",[],"['base_tier_shape', 'base_tier_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', '0.0', '3.375', '1.5']","['base_tiers', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', 'antenna_lines', 'antenna_finial', '2', '2.0', '1.0', '1.5', '1.0', '(/ pi 2)', '2.0', '2.0']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)))', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '0.0', '3.375', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)))', 'repeat_x', 'repeat_y', 'c', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '2', '2.0', '1.0', '1.5', '1.0', '(/ pi 2)', '2.0', '2.0']","['(C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (M 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))))))))', '(repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))', '(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-049.png
dials_context_programs_context_small_abstractions_020,dials_context_programs_train,(C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (M 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))))))) (T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))) (M 1 0 0 (+ 2 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0)))))),"['C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '1', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '1', 'M', '1', '0', '0', '+', '*', '0.5', '0', '*', '0.5', '+', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '1', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'repeat', 'c', '1', 'M', '+', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '2', 'M', '1', '0', '-', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '+', '0', '*', '0.5', '*', '2', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '1', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '2', 'M', '1', '0', '0', '+', '2', '+', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '1', '+', '*', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5 ,  2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [ 8.5 , -2.25]]), array([[ 8.5 , -2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [-8.5 ,  2.25]]), array([[-7.5,  4.5],
       [ 7.5,  4.5]]), array([[-7.5 ,  2.25],
       [ 7.5 ,  2.25]]), array([[7.5 , 2.25],
       [7.5 , 4.5 ]]), array([[-7.5 ,  2.25],
       [-7.5 ,  4.5 ]]), array([[ 3.00000000e+00,  0.00000000e+00],
       [ 2.98831028e+00,  1.07485220e-01],
       [ 2.95378771e+00,  2.09944551e-01],
       [ 2.89804653e+00,  3.02587108e-01],
       [ 2.82369314e+00,  3.81081028e-01],
       [ 2.73420422e+00,  4.41756022e-01],
       [ 2.63376417e+00,  4.81774996e-01],
       [ 2.52706945e+00,  4.99266707e-01],
       [ 2.41910900e+00,  4.93413261e-01],
       [ 2.31493092e+00,  4.64488360e-01],
       [ 2.21940647e+00,  4.13844499e-01],
       [ 2.13700225e+00,  3.43849729e-01],
       [ 2.07157141e+00,  2.57776929e-01],
       [ 2.02617341e+00,  1.59650765e-01],
       [ 2.00293102e+00,  5.40595092e-02],
       [ 2.00293102e+00, -5.40595092e-02],
       [ 2.02617341e+00, -1.59650765e-01],
       [ 2.07157141e+00, -2.57776929e-01],
       [ 2.13700225e+00, -3.43849729e-01],
       [ 2.21940647e+00, -4.13844499e-01],
       [ 2.31493092e+00, -4.64488360e-01],
       [ 2.41910900e+00, -4.93413261e-01],
       [ 2.52706945e+00, -4.99266707e-01],
       [ 2.63376417e+00, -4.81774996e-01],
       [ 2.73420422e+00, -4.41756022e-01],
       [ 2.82369314e+00, -3.81081028e-01],
       [ 2.89804653e+00, -3.02587108e-01],
       [ 2.95378771e+00, -2.09944551e-01],
       [ 2.98831028e+00, -1.07485220e-01],
       [ 3.00000000e+00, -1.22464680e-16]]), array([[2.5, 0. ],
       [2.5, 1. ]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[0., 0.],
       [0., 1.]]), array([[0.0000000e+00, 4.5000000e+00],
       [1.8369702e-16, 7.5000000e+00]]), array([[-1. ,  7.5],
       [ 1. ,  7.5]]), array([[-1. ,  6.5],
       [ 1. ,  6.5]]), array([[-1. ,  5.5],
       [ 1. ,  5.5]])]]",16,(connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (transform_matrix 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))))))) (transform (repeat_transform (repeat_transform (connect_strokes (repeat_transform circle 1 (transform_matrix (+ 1 0.5) 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (transform_matrix 1 0 (- 0 (+ 2 0.5)) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform_matrix 1 0 0 (+ 2 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0)))))),(connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))))))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (repeat_transform_n_times base_circle 1 (transform_matrix_scale_angle_x_y (+ 1 0.5) 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 2 0.5)) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0)))))),"['base_tier_shape', 'base_tier_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_horizontal_line']","['base_tiers', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines']","['all_base_strokes', 'row_of_dials', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)))', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)))', 'repeat_x', 'repeat_y', 'c', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))']","['(C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (M 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))))))))', '(repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2))))']","['0.0', '3.375', '1.5']","['2', '2.0', '1.0', '1.5', '1.0', '(/ pi 2)', '3.0']",[],"['base_tier_shape', 'base_tier_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_horizontal_line', '0.0', '3.375', '1.5']","['base_tiers', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', '2', '2.0', '1.0', '1.5', '1.0', '(/ pi 2)', '3.0']","['all_base_strokes', 'row_of_dials', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)))', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '0.0', '3.375', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)))', 'repeat_x', 'repeat_y', 'c', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '2', '2.0', '1.0', '1.5', '1.0', '(/ pi 2)', '3.0']","['(C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (M 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))))))))', '(repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-050.png
dials_context_programs_context_small_abstractions_021,dials_context_programs_train,(C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (M 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))))))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (T (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (M 1 0 0 (+ 2 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0)))))),"['C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '1', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '1', 'M', '1', '0', '0', '+', '*', '0.5', '0', '*', '0.5', '+', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '1', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '2', 'M', '1', '0', '-', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '+', '0', '*', '0.5', '*', '2', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', 'T', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'M', '1', '0', '0', '+', '2', '+', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '1', '+', '*', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5 ,  2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [ 8.5 , -2.25]]), array([[ 8.5 , -2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [-8.5 ,  2.25]]), array([[-7.5,  4.5],
       [ 7.5,  4.5]]), array([[-7.5 ,  2.25],
       [ 7.5 ,  2.25]]), array([[7.5 , 2.25],
       [7.5 , 4.5 ]]), array([[-7.5 ,  2.25],
       [-7.5 ,  4.5 ]]), array([[ 3.00000000e+00,  0.00000000e+00],
       [ 2.98831028e+00,  1.07485220e-01],
       [ 2.95378771e+00,  2.09944551e-01],
       [ 2.89804653e+00,  3.02587108e-01],
       [ 2.82369314e+00,  3.81081028e-01],
       [ 2.73420422e+00,  4.41756022e-01],
       [ 2.63376417e+00,  4.81774996e-01],
       [ 2.52706945e+00,  4.99266707e-01],
       [ 2.41910900e+00,  4.93413261e-01],
       [ 2.31493092e+00,  4.64488360e-01],
       [ 2.21940647e+00,  4.13844499e-01],
       [ 2.13700225e+00,  3.43849729e-01],
       [ 2.07157141e+00,  2.57776929e-01],
       [ 2.02617341e+00,  1.59650765e-01],
       [ 2.00293102e+00,  5.40595092e-02],
       [ 2.00293102e+00, -5.40595092e-02],
       [ 2.02617341e+00, -1.59650765e-01],
       [ 2.07157141e+00, -2.57776929e-01],
       [ 2.13700225e+00, -3.43849729e-01],
       [ 2.21940647e+00, -4.13844499e-01],
       [ 2.31493092e+00, -4.64488360e-01],
       [ 2.41910900e+00, -4.93413261e-01],
       [ 2.52706945e+00, -4.99266707e-01],
       [ 2.63376417e+00, -4.81774996e-01],
       [ 2.73420422e+00, -4.41756022e-01],
       [ 2.82369314e+00, -3.81081028e-01],
       [ 2.89804653e+00, -3.02587108e-01],
       [ 2.95378771e+00, -2.09944551e-01],
       [ 2.98831028e+00, -1.07485220e-01],
       [ 3.00000000e+00, -1.22464680e-16]]), array([[ 1.75, -0.75],
       [ 3.25, -0.75],
       [ 3.25,  0.75],
       [ 1.75,  0.75],
       [ 1.75, -0.75]]), array([[2.5, 0. ],
       [2.5, 1. ]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[-0.75, -0.75],
       [ 0.75, -0.75],
       [ 0.75,  0.75],
       [-0.75,  0.75],
       [-0.75, -0.75]]), array([[0., 0.],
       [0., 1.]]), array([[0.0000000e+00, 4.5000000e+00],
       [1.8369702e-16, 7.5000000e+00]]), array([[-1. ,  7.5],
       [ 1. ,  7.5]])]]",16,(connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (transform_matrix 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))))))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (transform_matrix 1 0 (- 0 (+ 2 0.5)) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (transform (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform_matrix 1 0 0 (+ 2 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0)))))),(connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))))))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 2 0.5)) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (apply_transform_matrix_to_stroke (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0)))))),"['base_tier_shape', 'base_tier_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line']","['base_tiers', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines']","['all_base_strokes', 'row_of_dials', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))']","['(C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (M 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))))))))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0))))']","['0.0', '3.375', '1.0', '1.5']","['2', '2.0', '1.0', '1.5', '(/ pi 2)', '1.0']",[],"['base_tier_shape', 'base_tier_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', '0.0', '3.375', '1.0', '1.5']","['base_tiers', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', '2', '2.0', '1.0', '1.5', '(/ pi 2)', '1.0']","['all_base_strokes', 'row_of_dials', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '0.0', '3.375', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '2', '2.0', '1.0', '1.5', '(/ pi 2)', '1.0']","['(C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (M 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))))))))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-051.png
dials_context_programs_context_small_abstractions_022,dials_context_programs_train,(C (C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (M 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))))))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 (* (max (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5)))) 0.25) (+ 2 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0)))))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 (- 0 (* (max (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5)))) 0.25)) (+ 2 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0)))))),"['C', 'C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '1', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '1', 'M', '1', '0', '0', '+', '*', '0.5', '0', '*', '0.5', '+', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '1', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '2', 'M', '1', '0', '-', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '+', '0', '*', '0.5', '*', '2', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '*', 'max', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '1', '*', '4', '0.5', '0.25', '+', '2', '+', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '1', '+', '*', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '-', '0', '*', 'max', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '1', '*', '4', '0.5', '0.25', '+', '2', '+', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '1', '+', '*', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5 ,  2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [ 8.5 , -2.25]]), array([[ 8.5 , -2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [-8.5 ,  2.25]]), array([[-7.5,  4.5],
       [ 7.5,  4.5]]), array([[-7.5 ,  2.25],
       [ 7.5 ,  2.25]]), array([[7.5 , 2.25],
       [7.5 , 4.5 ]]), array([[-7.5 ,  2.25],
       [-7.5 ,  4.5 ]]), array([[ 3.00000000e+00,  0.00000000e+00],
       [ 2.98831028e+00,  1.07485220e-01],
       [ 2.95378771e+00,  2.09944551e-01],
       [ 2.89804653e+00,  3.02587108e-01],
       [ 2.82369314e+00,  3.81081028e-01],
       [ 2.73420422e+00,  4.41756022e-01],
       [ 2.63376417e+00,  4.81774996e-01],
       [ 2.52706945e+00,  4.99266707e-01],
       [ 2.41910900e+00,  4.93413261e-01],
       [ 2.31493092e+00,  4.64488360e-01],
       [ 2.21940647e+00,  4.13844499e-01],
       [ 2.13700225e+00,  3.43849729e-01],
       [ 2.07157141e+00,  2.57776929e-01],
       [ 2.02617341e+00,  1.59650765e-01],
       [ 2.00293102e+00,  5.40595092e-02],
       [ 2.00293102e+00, -5.40595092e-02],
       [ 2.02617341e+00, -1.59650765e-01],
       [ 2.07157141e+00, -2.57776929e-01],
       [ 2.13700225e+00, -3.43849729e-01],
       [ 2.21940647e+00, -4.13844499e-01],
       [ 2.31493092e+00, -4.64488360e-01],
       [ 2.41910900e+00, -4.93413261e-01],
       [ 2.52706945e+00, -4.99266707e-01],
       [ 2.63376417e+00, -4.81774996e-01],
       [ 2.73420422e+00, -4.41756022e-01],
       [ 2.82369314e+00, -3.81081028e-01],
       [ 2.89804653e+00, -3.02587108e-01],
       [ 2.95378771e+00, -2.09944551e-01],
       [ 2.98831028e+00, -1.07485220e-01],
       [ 3.00000000e+00, -1.22464680e-16]]), array([[ 1.75, -0.75],
       [ 3.25, -0.75],
       [ 3.25,  0.75],
       [ 1.75,  0.75],
       [ 1.75, -0.75]]), array([[2.5, 0. ],
       [2.5, 1. ]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[-0.75, -0.75],
       [ 0.75, -0.75],
       [ 0.75,  0.75],
       [-0.75,  0.75],
       [-0.75, -0.75]]), array([[0., 0.],
       [0., 1.]]), array([[4.25, 4.5 ],
       [4.25, 7.5 ]]), array([[3.25, 7.5 ],
       [5.25, 7.5 ]]), array([[3.25      , 7.5       ],
       [3.23831028, 7.60748522],
       [3.20378771, 7.70994455],
       [3.14804653, 7.80258711],
       [3.07369314, 7.88108103],
       [2.98420422, 7.94175602],
       [2.88376417, 7.981775  ],
       [2.77706945, 7.99926671],
       [2.669109  , 7.99341326],
       [2.56493092, 7.96448836],
       [2.46940647, 7.9138445 ],
       [2.38700225, 7.84384973],
       [2.32157141, 7.75777693],
       [2.27617341, 7.65965077],
       [2.25293102, 7.55405951],
       [2.25293102, 7.44594049],
       [2.27617341, 7.34034923],
       [2.32157141, 7.24222307],
       [2.38700225, 7.15615027],
       [2.46940647, 7.0861555 ],
       [2.56493092, 7.03551164],
       [2.669109  , 7.00658674],
       [2.77706945, 7.00073329],
       [2.88376417, 7.018225  ],
       [2.98420422, 7.05824398],
       [3.07369314, 7.11891897],
       [3.14804653, 7.19741289],
       [3.20378771, 7.29005545],
       [3.23831028, 7.39251478],
       [3.25      , 7.5       ]]), array([[6.25      , 7.5       ],
       [6.23831028, 7.60748522],
       [6.20378771, 7.70994455],
       [6.14804653, 7.80258711],
       [6.07369314, 7.88108103],
       [5.98420422, 7.94175602],
       [5.88376417, 7.981775  ],
       [5.77706945, 7.99926671],
       [5.669109  , 7.99341326],
       [5.56493092, 7.96448836],
       [5.46940647, 7.9138445 ],
       [5.38700225, 7.84384973],
       [5.32157141, 7.75777693],
       [5.27617341, 7.65965077],
       [5.25293102, 7.55405951],
       [5.25293102, 7.44594049],
       [5.27617341, 7.34034923],
       [5.32157141, 7.24222307],
       [5.38700225, 7.15615027],
       [5.46940647, 7.0861555 ],
       [5.56493092, 7.03551164],
       [5.669109  , 7.00658674],
       [5.77706945, 7.00073329],
       [5.88376417, 7.018225  ],
       [5.98420422, 7.05824398],
       [6.07369314, 7.11891897],
       [6.14804653, 7.19741289],
       [6.20378771, 7.29005545],
       [6.23831028, 7.39251478],
       [6.25      , 7.5       ]]), array([[-4.25,  4.5 ],
       [-4.25,  7.5 ]]), array([[-5.25,  7.5 ],
       [-3.25,  7.5 ]]), array([[-5.25      ,  7.5       ],
       [-5.26168972,  7.60748522],
       [-5.29621229,  7.70994455],
       [-5.35195347,  7.80258711],
       [-5.42630686,  7.88108103],
       [-5.51579578,  7.94175602],
       [-5.61623583,  7.981775  ],
       [-5.72293055,  7.99926671],
       [-5.830891  ,  7.99341326],
       [-5.93506908,  7.96448836],
       [-6.03059353,  7.9138445 ],
       [-6.11299775,  7.84384973],
       [-6.17842859,  7.75777693],
       [-6.22382659,  7.65965077],
       [-6.24706898,  7.55405951],
       [-6.24706898,  7.44594049],
       [-6.22382659,  7.34034923],
       [-6.17842859,  7.24222307],
       [-6.11299775,  7.15615027],
       [-6.03059353,  7.0861555 ],
       [-5.93506908,  7.03551164],
       [-5.830891  ,  7.00658674],
       [-5.72293055,  7.00073329],
       [-5.61623583,  7.018225  ],
       [-5.51579578,  7.05824398],
       [-5.42630686,  7.11891897],
       [-5.35195347,  7.19741289],
       [-5.29621229,  7.29005545],
       [-5.26168972,  7.39251478],
       [-5.25      ,  7.5       ]]), array([[-2.25      ,  7.5       ],
       [-2.26168972,  7.60748522],
       [-2.29621229,  7.70994455],
       [-2.35195347,  7.80258711],
       [-2.42630686,  7.88108103],
       [-2.51579578,  7.94175602],
       [-2.61623583,  7.981775  ],
       [-2.72293055,  7.99926671],
       [-2.830891  ,  7.99341326],
       [-2.93506908,  7.96448836],
       [-3.03059353,  7.9138445 ],
       [-3.11299775,  7.84384973],
       [-3.17842859,  7.75777693],
       [-3.22382659,  7.65965077],
       [-3.24706898,  7.55405951],
       [-3.24706898,  7.44594049],
       [-3.22382659,  7.34034923],
       [-3.17842859,  7.24222307],
       [-3.11299775,  7.15615027],
       [-3.03059353,  7.0861555 ],
       [-2.93506908,  7.03551164],
       [-2.830891  ,  7.00658674],
       [-2.72293055,  7.00073329],
       [-2.61623583,  7.018225  ],
       [-2.51579578,  7.05824398],
       [-2.42630686,  7.11891897],
       [-2.35195347,  7.19741289],
       [-2.29621229,  7.29005545],
       [-2.26168972,  7.39251478],
       [-2.25      ,  7.5       ]])]]",22,(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (transform_matrix 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))))))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (transform_matrix 1 0 (- 0 (+ 2 0.5)) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 (* (max (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5)))) 0.25) (+ 2 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0)))))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 (- 0 (* (max (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5)))) 0.25)) (+ 2 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0)))))),(connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))))))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 2 0.5)) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 (* (max (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5)))) 0.25) (+ 2 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0)))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* (max (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5)))) 0.25)) (+ 2 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0)))))),"['base_tier_shape', 'base_tier_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial']","['base_tiers', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', 'antenna_lines', 'antenna_finial']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (M 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))))))))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']","['0.0', '3.375', '1.0', '1.5']","['2', '2.0', '1.0', '1.5', '(/ pi 2)', '1.0', '1.0']",[],"['base_tier_shape', 'base_tier_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', '0.0', '3.375', '1.0', '1.5']","['base_tiers', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', 'antenna_lines', 'antenna_finial', '2', '2.0', '1.0', '1.5', '(/ pi 2)', '1.0', '1.0']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '0.0', '3.375', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '2', '2.0', '1.0', '1.5', '(/ pi 2)', '1.0', '1.0']","['(C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (M 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))))))))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-052.png
dials_context_programs_context_small_abstractions_023,dials_context_programs_train,(C (C (C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))) (T (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (T (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['C', 'C', 'C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '2', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '2', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '2', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'repeat', 'c', '1', 'M', '+', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '2', 'M', '1', '0', '-', '0', '+', '2', '0.5', '0', '2', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '+', '0', '*', '0.5', '*', '2', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '2', '1', '+', '2', '0.5', 'T', 'C', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '1', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '*', '+', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '*', '2', '0.5', '0.25', '+', '2', '+', '*', '0.5', '*', '+', '*', '2', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0', 'T', 'C', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '1', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '-', '0', '*', '+', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '*', '2', '0.5', '0.25', '+', '2', '+', '*', '0.5', '*', '+', '*', '2', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5,  3.5],
       [ 8.5,  3.5]]), array([[-8.5, -3.5],
       [ 8.5, -3.5]]), array([[ 8.5, -3.5],
       [ 8.5,  3.5]]), array([[-8.5, -3.5],
       [-8.5,  3.5]]), array([[8.5 , 1.75],
       [9.5 , 1.75]]), array([[ 8.5 , -1.75],
       [ 9.5 , -1.75]]), array([[ 9.5 , -1.75],
       [ 9.5 ,  1.75]]), array([[ 8.5 , -1.75],
       [ 8.5 ,  1.75]]), array([[-9.5 ,  1.75],
       [-8.5 ,  1.75]]), array([[-9.5 , -1.75],
       [-8.5 , -1.75]]), array([[-8.5 , -1.75],
       [-8.5 ,  1.75]]), array([[-9.5 , -1.75],
       [-9.5 ,  1.75]]), array([[ 3.        , -1.25      ],
       [ 2.98831028, -1.14251478],
       [ 2.95378771, -1.04005545],
       [ 2.89804653, -0.94741289],
       [ 2.82369314, -0.86891897],
       [ 2.73420422, -0.80824398],
       [ 2.63376417, -0.768225  ],
       [ 2.52706945, -0.75073329],
       [ 2.419109  , -0.75658674],
       [ 2.31493092, -0.78551164],
       [ 2.21940647, -0.8361555 ],
       [ 2.13700225, -0.90615027],
       [ 2.07157141, -0.99222307],
       [ 2.02617341, -1.09034923],
       [ 2.00293102, -1.19594049],
       [ 2.00293102, -1.30405951],
       [ 2.02617341, -1.40965077],
       [ 2.07157141, -1.50777693],
       [ 2.13700225, -1.59384973],
       [ 2.21940647, -1.6638445 ],
       [ 2.31493092, -1.71448836],
       [ 2.419109  , -1.74341326],
       [ 2.52706945, -1.74926671],
       [ 2.63376417, -1.731775  ],
       [ 2.73420422, -1.69175602],
       [ 2.82369314, -1.63108103],
       [ 2.89804653, -1.55258711],
       [ 2.95378771, -1.45994455],
       [ 2.98831028, -1.35748522],
       [ 3.        , -1.25      ]]), array([[ 2.5 , -1.25],
       [ 2.5 , -0.25]]), array([[ 0.5       , -1.25      ],
       [ 0.48831028, -1.14251478],
       [ 0.45378771, -1.04005545],
       [ 0.39804653, -0.94741289],
       [ 0.32369314, -0.86891897],
       [ 0.23420422, -0.80824398],
       [ 0.13376417, -0.768225  ],
       [ 0.02706945, -0.75073329],
       [-0.080891  , -0.75658674],
       [-0.18506908, -0.78551164],
       [-0.28059353, -0.8361555 ],
       [-0.36299775, -0.90615027],
       [-0.42842859, -0.99222307],
       [-0.47382659, -1.09034923],
       [-0.49706898, -1.19594049],
       [-0.49706898, -1.30405951],
       [-0.47382659, -1.40965077],
       [-0.42842859, -1.50777693],
       [-0.36299775, -1.59384973],
       [-0.28059353, -1.6638445 ],
       [-0.18506908, -1.71448836],
       [-0.080891  , -1.74341326],
       [ 0.02706945, -1.74926671],
       [ 0.13376417, -1.731775  ],
       [ 0.23420422, -1.69175602],
       [ 0.32369314, -1.63108103],
       [ 0.39804653, -1.55258711],
       [ 0.45378771, -1.45994455],
       [ 0.48831028, -1.35748522],
       [ 0.5       , -1.25      ]]), array([[ 0.  , -1.25],
       [ 0.  , -0.25]]), array([[3.        , 1.25      ],
       [2.98831028, 1.35748522],
       [2.95378771, 1.45994455],
       [2.89804653, 1.55258711],
       [2.82369314, 1.63108103],
       [2.73420422, 1.69175602],
       [2.63376417, 1.731775  ],
       [2.52706945, 1.74926671],
       [2.419109  , 1.74341326],
       [2.31493092, 1.71448836],
       [2.21940647, 1.6638445 ],
       [2.13700225, 1.59384973],
       [2.07157141, 1.50777693],
       [2.02617341, 1.40965077],
       [2.00293102, 1.30405951],
       [2.00293102, 1.19594049],
       [2.02617341, 1.09034923],
       [2.07157141, 0.99222307],
       [2.13700225, 0.90615027],
       [2.21940647, 0.8361555 ],
       [2.31493092, 0.78551164],
       [2.419109  , 0.75658674],
       [2.52706945, 0.75073329],
       [2.63376417, 0.768225  ],
       [2.73420422, 0.80824398],
       [2.82369314, 0.86891897],
       [2.89804653, 0.94741289],
       [2.95378771, 1.04005545],
       [2.98831028, 1.14251478],
       [3.        , 1.25      ]]), array([[2.5 , 1.25],
       [2.5 , 2.25]]), array([[ 0.5       ,  1.25      ],
       [ 0.48831028,  1.35748522],
       [ 0.45378771,  1.45994455],
       [ 0.39804653,  1.55258711],
       [ 0.32369314,  1.63108103],
       [ 0.23420422,  1.69175602],
       [ 0.13376417,  1.731775  ],
       [ 0.02706945,  1.74926671],
       [-0.080891  ,  1.74341326],
       [-0.18506908,  1.71448836],
       [-0.28059353,  1.6638445 ],
       [-0.36299775,  1.59384973],
       [-0.42842859,  1.50777693],
       [-0.47382659,  1.40965077],
       [-0.49706898,  1.30405951],
       [-0.49706898,  1.19594049],
       [-0.47382659,  1.09034923],
       [-0.42842859,  0.99222307],
       [-0.36299775,  0.90615027],
       [-0.28059353,  0.8361555 ],
       [-0.18506908,  0.78551164],
       [-0.080891  ,  0.75658674],
       [ 0.02706945,  0.75073329],
       [ 0.13376417,  0.768225  ],
       [ 0.23420422,  0.80824398],
       [ 0.32369314,  0.86891897],
       [ 0.39804653,  0.94741289],
       [ 0.45378771,  1.04005545],
       [ 0.48831028,  1.14251478],
       [ 0.5       ,  1.25      ]]), array([[0.  , 1.25],
       [0.  , 2.25]]), array([[4.75, 3.5 ],
       [4.75, 6.5 ]]), array([[3.75, 6.5 ],
       [5.75, 6.5 ]]), array([[3.75, 5.5 ],
       [5.75, 5.5 ]]), array([[3.75      , 6.5       ],
       [3.73831028, 6.60748522],
       [3.70378771, 6.70994455],
       [3.64804653, 6.80258711],
       [3.57369314, 6.88108103],
       [3.48420422, 6.94175602],
       [3.38376417, 6.981775  ],
       [3.27706945, 6.99926671],
       [3.169109  , 6.99341326],
       [3.06493092, 6.96448836],
       [2.96940647, 6.9138445 ],
       [2.88700225, 6.84384973],
       [2.82157141, 6.75777693],
       [2.77617341, 6.65965077],
       [2.75293102, 6.55405951],
       [2.75293102, 6.44594049],
       [2.77617341, 6.34034923],
       [2.82157141, 6.24222307],
       [2.88700225, 6.15615027],
       [2.96940647, 6.0861555 ],
       [3.06493092, 6.03551164],
       [3.169109  , 6.00658674],
       [3.27706945, 6.00073329],
       [3.38376417, 6.018225  ],
       [3.48420422, 6.05824398],
       [3.57369314, 6.11891897],
       [3.64804653, 6.19741289],
       [3.70378771, 6.29005545],
       [3.73831028, 6.39251478],
       [3.75      , 6.5       ]]), array([[6.75      , 6.5       ],
       [6.73831028, 6.60748522],
       [6.70378771, 6.70994455],
       [6.64804653, 6.80258711],
       [6.57369314, 6.88108103],
       [6.48420422, 6.94175602],
       [6.38376417, 6.981775  ],
       [6.27706945, 6.99926671],
       [6.169109  , 6.99341326],
       [6.06493092, 6.96448836],
       [5.96940647, 6.9138445 ],
       [5.88700225, 6.84384973],
       [5.82157141, 6.75777693],
       [5.77617341, 6.65965077],
       [5.75293102, 6.55405951],
       [5.75293102, 6.44594049],
       [5.77617341, 6.34034923],
       [5.82157141, 6.24222307],
       [5.88700225, 6.15615027],
       [5.96940647, 6.0861555 ],
       [6.06493092, 6.03551164],
       [6.169109  , 6.00658674],
       [6.27706945, 6.00073329],
       [6.38376417, 6.018225  ],
       [6.48420422, 6.05824398],
       [6.57369314, 6.11891897],
       [6.64804653, 6.19741289],
       [6.70378771, 6.29005545],
       [6.73831028, 6.39251478],
       [6.75      , 6.5       ]]), array([[-4.75,  3.5 ],
       [-4.75,  6.5 ]]), array([[-5.75,  6.5 ],
       [-3.75,  6.5 ]]), array([[-5.75,  5.5 ],
       [-3.75,  5.5 ]]), array([[-5.75      ,  6.5       ],
       [-5.76168972,  6.60748522],
       [-5.79621229,  6.70994455],
       [-5.85195347,  6.80258711],
       [-5.92630686,  6.88108103],
       [-6.01579578,  6.94175602],
       [-6.11623583,  6.981775  ],
       [-6.22293055,  6.99926671],
       [-6.330891  ,  6.99341326],
       [-6.43506908,  6.96448836],
       [-6.53059353,  6.9138445 ],
       [-6.61299775,  6.84384973],
       [-6.67842859,  6.75777693],
       [-6.72382659,  6.65965077],
       [-6.74706898,  6.55405951],
       [-6.74706898,  6.44594049],
       [-6.72382659,  6.34034923],
       [-6.67842859,  6.24222307],
       [-6.61299775,  6.15615027],
       [-6.53059353,  6.0861555 ],
       [-6.43506908,  6.03551164],
       [-6.330891  ,  6.00658674],
       [-6.22293055,  6.00073329],
       [-6.11623583,  6.018225  ],
       [-6.01579578,  6.05824398],
       [-5.92630686,  6.11891897],
       [-5.85195347,  6.19741289],
       [-5.79621229,  6.29005545],
       [-5.76168972,  6.39251478],
       [-5.75      ,  6.5       ]]), array([[-2.75      ,  6.5       ],
       [-2.76168972,  6.60748522],
       [-2.79621229,  6.70994455],
       [-2.85195347,  6.80258711],
       [-2.92630686,  6.88108103],
       [-3.01579578,  6.94175602],
       [-3.11623583,  6.981775  ],
       [-3.22293055,  6.99926671],
       [-3.330891  ,  6.99341326],
       [-3.43506908,  6.96448836],
       [-3.53059353,  6.9138445 ],
       [-3.61299775,  6.84384973],
       [-3.67842859,  6.75777693],
       [-3.72382659,  6.65965077],
       [-3.74706898,  6.55405951],
       [-3.74706898,  6.44594049],
       [-3.72382659,  6.34034923],
       [-3.67842859,  6.24222307],
       [-3.61299775,  6.15615027],
       [-3.53059353,  6.0861555 ],
       [-3.43506908,  6.03551164],
       [-3.330891  ,  6.00658674],
       [-3.22293055,  6.00073329],
       [-3.11623583,  6.018225  ],
       [-3.01579578,  6.05824398],
       [-2.92630686,  6.11891897],
       [-2.85195347,  6.19741289],
       [-2.79621229,  6.29005545],
       [-2.76168972,  6.39251478],
       [-2.75      ,  6.5       ]])]]",30,(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (repeat_transform circle 1 (transform_matrix (+ 1 0.5) 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (transform_matrix 1 0 (- 0 (+ 2 0.5)) 0)) 2 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))) (transform (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (transform (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (repeat_transform_n_times base_circle 1 (transform_matrix_scale_angle_x_y (+ 1 0.5) 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 2 0.5)) 0)) 2 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', 'antenna_lines', 'antenna_finial']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'c', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 2 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))', '(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']","['0.0', '1.5']","['1', '2.0', '2.0', '1.5', '1.0', '(/ pi 2)', '2.0', '2.0']",[],"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', '0.0', '1.5']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', 'antenna_lines', 'antenna_finial', '1', '2.0', '2.0', '1.5', '1.0', '(/ pi 2)', '2.0', '2.0']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '0.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'c', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '1', '2.0', '2.0', '1.5', '1.0', '(/ pi 2)', '2.0', '2.0']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 2 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))', '(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-053.png
dials_context_programs_context_small_abstractions_024,dials_context_programs_train,(C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))),"['C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '2', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '2', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '2', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '2', 'M', '1', '0', '-', '0', '+', '2', '0.5', '0', '2', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '+', '0', '*', '0.5', '*', '2', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '2', '1', '+', '2', '0.5']","[[array([[-8.5,  3.5],
       [ 8.5,  3.5]]), array([[-8.5, -3.5],
       [ 8.5, -3.5]]), array([[ 8.5, -3.5],
       [ 8.5,  3.5]]), array([[-8.5, -3.5],
       [-8.5,  3.5]]), array([[8.5 , 1.75],
       [9.5 , 1.75]]), array([[ 8.5 , -1.75],
       [ 9.5 , -1.75]]), array([[ 9.5 , -1.75],
       [ 9.5 ,  1.75]]), array([[ 8.5 , -1.75],
       [ 8.5 ,  1.75]]), array([[-9.5 ,  1.75],
       [-8.5 ,  1.75]]), array([[-9.5 , -1.75],
       [-8.5 , -1.75]]), array([[-8.5 , -1.75],
       [-8.5 ,  1.75]]), array([[-9.5 , -1.75],
       [-9.5 ,  1.75]]), array([[ 3.        , -1.25      ],
       [ 2.98831028, -1.14251478],
       [ 2.95378771, -1.04005545],
       [ 2.89804653, -0.94741289],
       [ 2.82369314, -0.86891897],
       [ 2.73420422, -0.80824398],
       [ 2.63376417, -0.768225  ],
       [ 2.52706945, -0.75073329],
       [ 2.419109  , -0.75658674],
       [ 2.31493092, -0.78551164],
       [ 2.21940647, -0.8361555 ],
       [ 2.13700225, -0.90615027],
       [ 2.07157141, -0.99222307],
       [ 2.02617341, -1.09034923],
       [ 2.00293102, -1.19594049],
       [ 2.00293102, -1.30405951],
       [ 2.02617341, -1.40965077],
       [ 2.07157141, -1.50777693],
       [ 2.13700225, -1.59384973],
       [ 2.21940647, -1.6638445 ],
       [ 2.31493092, -1.71448836],
       [ 2.419109  , -1.74341326],
       [ 2.52706945, -1.74926671],
       [ 2.63376417, -1.731775  ],
       [ 2.73420422, -1.69175602],
       [ 2.82369314, -1.63108103],
       [ 2.89804653, -1.55258711],
       [ 2.95378771, -1.45994455],
       [ 2.98831028, -1.35748522],
       [ 3.        , -1.25      ]]), array([[ 1.75, -2.  ],
       [ 3.25, -2.  ],
       [ 3.25, -0.5 ],
       [ 1.75, -0.5 ],
       [ 1.75, -2.  ]]), array([[ 2.5 , -1.25],
       [ 2.5 , -0.25]]), array([[ 0.5       , -1.25      ],
       [ 0.48831028, -1.14251478],
       [ 0.45378771, -1.04005545],
       [ 0.39804653, -0.94741289],
       [ 0.32369314, -0.86891897],
       [ 0.23420422, -0.80824398],
       [ 0.13376417, -0.768225  ],
       [ 0.02706945, -0.75073329],
       [-0.080891  , -0.75658674],
       [-0.18506908, -0.78551164],
       [-0.28059353, -0.8361555 ],
       [-0.36299775, -0.90615027],
       [-0.42842859, -0.99222307],
       [-0.47382659, -1.09034923],
       [-0.49706898, -1.19594049],
       [-0.49706898, -1.30405951],
       [-0.47382659, -1.40965077],
       [-0.42842859, -1.50777693],
       [-0.36299775, -1.59384973],
       [-0.28059353, -1.6638445 ],
       [-0.18506908, -1.71448836],
       [-0.080891  , -1.74341326],
       [ 0.02706945, -1.74926671],
       [ 0.13376417, -1.731775  ],
       [ 0.23420422, -1.69175602],
       [ 0.32369314, -1.63108103],
       [ 0.39804653, -1.55258711],
       [ 0.45378771, -1.45994455],
       [ 0.48831028, -1.35748522],
       [ 0.5       , -1.25      ]]), array([[-0.75, -2.  ],
       [ 0.75, -2.  ],
       [ 0.75, -0.5 ],
       [-0.75, -0.5 ],
       [-0.75, -2.  ]]), array([[ 0.  , -1.25],
       [ 0.  , -0.25]]), array([[3.        , 1.25      ],
       [2.98831028, 1.35748522],
       [2.95378771, 1.45994455],
       [2.89804653, 1.55258711],
       [2.82369314, 1.63108103],
       [2.73420422, 1.69175602],
       [2.63376417, 1.731775  ],
       [2.52706945, 1.74926671],
       [2.419109  , 1.74341326],
       [2.31493092, 1.71448836],
       [2.21940647, 1.6638445 ],
       [2.13700225, 1.59384973],
       [2.07157141, 1.50777693],
       [2.02617341, 1.40965077],
       [2.00293102, 1.30405951],
       [2.00293102, 1.19594049],
       [2.02617341, 1.09034923],
       [2.07157141, 0.99222307],
       [2.13700225, 0.90615027],
       [2.21940647, 0.8361555 ],
       [2.31493092, 0.78551164],
       [2.419109  , 0.75658674],
       [2.52706945, 0.75073329],
       [2.63376417, 0.768225  ],
       [2.73420422, 0.80824398],
       [2.82369314, 0.86891897],
       [2.89804653, 0.94741289],
       [2.95378771, 1.04005545],
       [2.98831028, 1.14251478],
       [3.        , 1.25      ]]), array([[1.75, 0.5 ],
       [3.25, 0.5 ],
       [3.25, 2.  ],
       [1.75, 2.  ],
       [1.75, 0.5 ]]), array([[2.5 , 1.25],
       [2.5 , 2.25]]), array([[ 0.5       ,  1.25      ],
       [ 0.48831028,  1.35748522],
       [ 0.45378771,  1.45994455],
       [ 0.39804653,  1.55258711],
       [ 0.32369314,  1.63108103],
       [ 0.23420422,  1.69175602],
       [ 0.13376417,  1.731775  ],
       [ 0.02706945,  1.74926671],
       [-0.080891  ,  1.74341326],
       [-0.18506908,  1.71448836],
       [-0.28059353,  1.6638445 ],
       [-0.36299775,  1.59384973],
       [-0.42842859,  1.50777693],
       [-0.47382659,  1.40965077],
       [-0.49706898,  1.30405951],
       [-0.49706898,  1.19594049],
       [-0.47382659,  1.09034923],
       [-0.42842859,  0.99222307],
       [-0.36299775,  0.90615027],
       [-0.28059353,  0.8361555 ],
       [-0.18506908,  0.78551164],
       [-0.080891  ,  0.75658674],
       [ 0.02706945,  0.75073329],
       [ 0.13376417,  0.768225  ],
       [ 0.23420422,  0.80824398],
       [ 0.32369314,  0.86891897],
       [ 0.39804653,  0.94741289],
       [ 0.45378771,  1.04005545],
       [ 0.48831028,  1.14251478],
       [ 0.5       ,  1.25      ]]), array([[-0.75,  0.5 ],
       [ 0.75,  0.5 ],
       [ 0.75,  2.  ],
       [-0.75,  2.  ],
       [-0.75,  0.5 ]]), array([[0.  , 1.25],
       [0.  , 2.25]])]]",24,(connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (transform_matrix 1 0 (- 0 (+ 2 0.5)) 0)) 2 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))),(connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 2 0.5)) 0)) 2 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))),"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand']","['all_base_strokes', 'row_of_dials']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 2 (M 1 0 0 (+ 2 0.5)))']","['0.0', '1.0', '1.5']","['1', '2.0', '2.0', '1.5', '(/ pi 2)']",[],"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', '0.0', '1.0', '1.5']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', '1', '2.0', '2.0', '1.5', '(/ pi 2)']","['all_base_strokes', 'row_of_dials']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '1', '2.0', '2.0', '1.5', '(/ pi 2)']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 2 (M 1 0 0 (+ 2 0.5)))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-054.png
dials_context_programs_context_small_abstractions_025,dials_context_programs_train,(C (C (C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['C', 'C', 'C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '2', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '2', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '2', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '2', 'M', '1', '0', '-', '0', '+', '2', '0.5', '0', '2', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '+', '0', '*', '0.5', '*', '2', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '2', '1', '+', '2', '0.5', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '*', '+', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '*', '2', '0.5', '0.25', '+', '2', '+', '*', '0.5', '*', '+', '*', '2', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '-', '0', '*', '+', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '*', '2', '0.5', '0.25', '+', '2', '+', '*', '0.5', '*', '+', '*', '2', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5,  3.5],
       [ 8.5,  3.5]]), array([[-8.5, -3.5],
       [ 8.5, -3.5]]), array([[ 8.5, -3.5],
       [ 8.5,  3.5]]), array([[-8.5, -3.5],
       [-8.5,  3.5]]), array([[8.5 , 1.75],
       [9.5 , 1.75]]), array([[ 8.5 , -1.75],
       [ 9.5 , -1.75]]), array([[ 9.5 , -1.75],
       [ 9.5 ,  1.75]]), array([[ 8.5 , -1.75],
       [ 8.5 ,  1.75]]), array([[-9.5 ,  1.75],
       [-8.5 ,  1.75]]), array([[-9.5 , -1.75],
       [-8.5 , -1.75]]), array([[-8.5 , -1.75],
       [-8.5 ,  1.75]]), array([[-9.5 , -1.75],
       [-9.5 ,  1.75]]), array([[ 3.        , -1.25      ],
       [ 2.98831028, -1.14251478],
       [ 2.95378771, -1.04005545],
       [ 2.89804653, -0.94741289],
       [ 2.82369314, -0.86891897],
       [ 2.73420422, -0.80824398],
       [ 2.63376417, -0.768225  ],
       [ 2.52706945, -0.75073329],
       [ 2.419109  , -0.75658674],
       [ 2.31493092, -0.78551164],
       [ 2.21940647, -0.8361555 ],
       [ 2.13700225, -0.90615027],
       [ 2.07157141, -0.99222307],
       [ 2.02617341, -1.09034923],
       [ 2.00293102, -1.19594049],
       [ 2.00293102, -1.30405951],
       [ 2.02617341, -1.40965077],
       [ 2.07157141, -1.50777693],
       [ 2.13700225, -1.59384973],
       [ 2.21940647, -1.6638445 ],
       [ 2.31493092, -1.71448836],
       [ 2.419109  , -1.74341326],
       [ 2.52706945, -1.74926671],
       [ 2.63376417, -1.731775  ],
       [ 2.73420422, -1.69175602],
       [ 2.82369314, -1.63108103],
       [ 2.89804653, -1.55258711],
       [ 2.95378771, -1.45994455],
       [ 2.98831028, -1.35748522],
       [ 3.        , -1.25      ]]), array([[ 1.75, -2.  ],
       [ 3.25, -2.  ],
       [ 3.25, -0.5 ],
       [ 1.75, -0.5 ],
       [ 1.75, -2.  ]]), array([[ 2.5 , -1.25],
       [ 2.5 , -0.25]]), array([[ 0.5       , -1.25      ],
       [ 0.48831028, -1.14251478],
       [ 0.45378771, -1.04005545],
       [ 0.39804653, -0.94741289],
       [ 0.32369314, -0.86891897],
       [ 0.23420422, -0.80824398],
       [ 0.13376417, -0.768225  ],
       [ 0.02706945, -0.75073329],
       [-0.080891  , -0.75658674],
       [-0.18506908, -0.78551164],
       [-0.28059353, -0.8361555 ],
       [-0.36299775, -0.90615027],
       [-0.42842859, -0.99222307],
       [-0.47382659, -1.09034923],
       [-0.49706898, -1.19594049],
       [-0.49706898, -1.30405951],
       [-0.47382659, -1.40965077],
       [-0.42842859, -1.50777693],
       [-0.36299775, -1.59384973],
       [-0.28059353, -1.6638445 ],
       [-0.18506908, -1.71448836],
       [-0.080891  , -1.74341326],
       [ 0.02706945, -1.74926671],
       [ 0.13376417, -1.731775  ],
       [ 0.23420422, -1.69175602],
       [ 0.32369314, -1.63108103],
       [ 0.39804653, -1.55258711],
       [ 0.45378771, -1.45994455],
       [ 0.48831028, -1.35748522],
       [ 0.5       , -1.25      ]]), array([[-0.75, -2.  ],
       [ 0.75, -2.  ],
       [ 0.75, -0.5 ],
       [-0.75, -0.5 ],
       [-0.75, -2.  ]]), array([[ 0.  , -1.25],
       [ 0.  , -0.25]]), array([[3.        , 1.25      ],
       [2.98831028, 1.35748522],
       [2.95378771, 1.45994455],
       [2.89804653, 1.55258711],
       [2.82369314, 1.63108103],
       [2.73420422, 1.69175602],
       [2.63376417, 1.731775  ],
       [2.52706945, 1.74926671],
       [2.419109  , 1.74341326],
       [2.31493092, 1.71448836],
       [2.21940647, 1.6638445 ],
       [2.13700225, 1.59384973],
       [2.07157141, 1.50777693],
       [2.02617341, 1.40965077],
       [2.00293102, 1.30405951],
       [2.00293102, 1.19594049],
       [2.02617341, 1.09034923],
       [2.07157141, 0.99222307],
       [2.13700225, 0.90615027],
       [2.21940647, 0.8361555 ],
       [2.31493092, 0.78551164],
       [2.419109  , 0.75658674],
       [2.52706945, 0.75073329],
       [2.63376417, 0.768225  ],
       [2.73420422, 0.80824398],
       [2.82369314, 0.86891897],
       [2.89804653, 0.94741289],
       [2.95378771, 1.04005545],
       [2.98831028, 1.14251478],
       [3.        , 1.25      ]]), array([[1.75, 0.5 ],
       [3.25, 0.5 ],
       [3.25, 2.  ],
       [1.75, 2.  ],
       [1.75, 0.5 ]]), array([[2.5 , 1.25],
       [2.5 , 2.25]]), array([[ 0.5       ,  1.25      ],
       [ 0.48831028,  1.35748522],
       [ 0.45378771,  1.45994455],
       [ 0.39804653,  1.55258711],
       [ 0.32369314,  1.63108103],
       [ 0.23420422,  1.69175602],
       [ 0.13376417,  1.731775  ],
       [ 0.02706945,  1.74926671],
       [-0.080891  ,  1.74341326],
       [-0.18506908,  1.71448836],
       [-0.28059353,  1.6638445 ],
       [-0.36299775,  1.59384973],
       [-0.42842859,  1.50777693],
       [-0.47382659,  1.40965077],
       [-0.49706898,  1.30405951],
       [-0.49706898,  1.19594049],
       [-0.47382659,  1.09034923],
       [-0.42842859,  0.99222307],
       [-0.36299775,  0.90615027],
       [-0.28059353,  0.8361555 ],
       [-0.18506908,  0.78551164],
       [-0.080891  ,  0.75658674],
       [ 0.02706945,  0.75073329],
       [ 0.13376417,  0.768225  ],
       [ 0.23420422,  0.80824398],
       [ 0.32369314,  0.86891897],
       [ 0.39804653,  0.94741289],
       [ 0.45378771,  1.04005545],
       [ 0.48831028,  1.14251478],
       [ 0.5       ,  1.25      ]]), array([[-0.75,  0.5 ],
       [ 0.75,  0.5 ],
       [ 0.75,  2.  ],
       [-0.75,  2.  ],
       [-0.75,  0.5 ]]), array([[0.  , 1.25],
       [0.  , 2.25]]), array([[4.75, 3.5 ],
       [4.75, 6.5 ]]), array([[3.75, 6.5 ],
       [5.75, 6.5 ]]), array([[3.75      , 6.5       ],
       [3.73831028, 6.60748522],
       [3.70378771, 6.70994455],
       [3.64804653, 6.80258711],
       [3.57369314, 6.88108103],
       [3.48420422, 6.94175602],
       [3.38376417, 6.981775  ],
       [3.27706945, 6.99926671],
       [3.169109  , 6.99341326],
       [3.06493092, 6.96448836],
       [2.96940647, 6.9138445 ],
       [2.88700225, 6.84384973],
       [2.82157141, 6.75777693],
       [2.77617341, 6.65965077],
       [2.75293102, 6.55405951],
       [2.75293102, 6.44594049],
       [2.77617341, 6.34034923],
       [2.82157141, 6.24222307],
       [2.88700225, 6.15615027],
       [2.96940647, 6.0861555 ],
       [3.06493092, 6.03551164],
       [3.169109  , 6.00658674],
       [3.27706945, 6.00073329],
       [3.38376417, 6.018225  ],
       [3.48420422, 6.05824398],
       [3.57369314, 6.11891897],
       [3.64804653, 6.19741289],
       [3.70378771, 6.29005545],
       [3.73831028, 6.39251478],
       [3.75      , 6.5       ]]), array([[6.75      , 6.5       ],
       [6.73831028, 6.60748522],
       [6.70378771, 6.70994455],
       [6.64804653, 6.80258711],
       [6.57369314, 6.88108103],
       [6.48420422, 6.94175602],
       [6.38376417, 6.981775  ],
       [6.27706945, 6.99926671],
       [6.169109  , 6.99341326],
       [6.06493092, 6.96448836],
       [5.96940647, 6.9138445 ],
       [5.88700225, 6.84384973],
       [5.82157141, 6.75777693],
       [5.77617341, 6.65965077],
       [5.75293102, 6.55405951],
       [5.75293102, 6.44594049],
       [5.77617341, 6.34034923],
       [5.82157141, 6.24222307],
       [5.88700225, 6.15615027],
       [5.96940647, 6.0861555 ],
       [6.06493092, 6.03551164],
       [6.169109  , 6.00658674],
       [6.27706945, 6.00073329],
       [6.38376417, 6.018225  ],
       [6.48420422, 6.05824398],
       [6.57369314, 6.11891897],
       [6.64804653, 6.19741289],
       [6.70378771, 6.29005545],
       [6.73831028, 6.39251478],
       [6.75      , 6.5       ]]), array([[-4.75,  3.5 ],
       [-4.75,  6.5 ]]), array([[-5.75,  6.5 ],
       [-3.75,  6.5 ]]), array([[-5.75      ,  6.5       ],
       [-5.76168972,  6.60748522],
       [-5.79621229,  6.70994455],
       [-5.85195347,  6.80258711],
       [-5.92630686,  6.88108103],
       [-6.01579578,  6.94175602],
       [-6.11623583,  6.981775  ],
       [-6.22293055,  6.99926671],
       [-6.330891  ,  6.99341326],
       [-6.43506908,  6.96448836],
       [-6.53059353,  6.9138445 ],
       [-6.61299775,  6.84384973],
       [-6.67842859,  6.75777693],
       [-6.72382659,  6.65965077],
       [-6.74706898,  6.55405951],
       [-6.74706898,  6.44594049],
       [-6.72382659,  6.34034923],
       [-6.67842859,  6.24222307],
       [-6.61299775,  6.15615027],
       [-6.53059353,  6.0861555 ],
       [-6.43506908,  6.03551164],
       [-6.330891  ,  6.00658674],
       [-6.22293055,  6.00073329],
       [-6.11623583,  6.018225  ],
       [-6.01579578,  6.05824398],
       [-5.92630686,  6.11891897],
       [-5.85195347,  6.19741289],
       [-5.79621229,  6.29005545],
       [-5.76168972,  6.39251478],
       [-5.75      ,  6.5       ]]), array([[-2.75      ,  6.5       ],
       [-2.76168972,  6.60748522],
       [-2.79621229,  6.70994455],
       [-2.85195347,  6.80258711],
       [-2.92630686,  6.88108103],
       [-3.01579578,  6.94175602],
       [-3.11623583,  6.981775  ],
       [-3.22293055,  6.99926671],
       [-3.330891  ,  6.99341326],
       [-3.43506908,  6.96448836],
       [-3.53059353,  6.9138445 ],
       [-3.61299775,  6.84384973],
       [-3.67842859,  6.75777693],
       [-3.72382659,  6.65965077],
       [-3.74706898,  6.55405951],
       [-3.74706898,  6.44594049],
       [-3.72382659,  6.34034923],
       [-3.67842859,  6.24222307],
       [-3.61299775,  6.15615027],
       [-3.53059353,  6.0861555 ],
       [-3.43506908,  6.03551164],
       [-3.330891  ,  6.00658674],
       [-3.22293055,  6.00073329],
       [-3.11623583,  6.018225  ],
       [-3.01579578,  6.05824398],
       [-2.92630686,  6.11891897],
       [-2.85195347,  6.19741289],
       [-2.79621229,  6.29005545],
       [-2.76168972,  6.39251478],
       [-2.75      ,  6.5       ]])]]",32,(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (transform_matrix 1 0 (- 0 (+ 2 0.5)) 0)) 2 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 2 0.5)) 0)) 2 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', 'antenna_lines', 'antenna_finial']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 2 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']","['0.0', '1.0', '1.5']","['1', '2.0', '2.0', '1.5', '(/ pi 2)', '1.0', '1.0']",[],"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', '0.0', '1.0', '1.5']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', 'antenna_lines', 'antenna_finial', '1', '2.0', '2.0', '1.5', '(/ pi 2)', '1.0', '1.0']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '1', '2.0', '2.0', '1.5', '(/ pi 2)', '1.0', '1.0']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 2 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-055.png
dials_context_programs_context_small_abstractions_026,dials_context_programs_test,(C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (M 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '1', 'M', '1', '0', '0', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5 ,  2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [ 8.5 , -2.25]]), array([[ 8.5 , -2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [-8.5 ,  2.25]]), array([[0.0000000e+00, 2.2500000e+00],
       [1.8369702e-16, 5.2500000e+00]]), array([[-1.  ,  5.25],
       [ 1.  ,  5.25]]), array([[-1.  ,  4.25],
       [ 1.  ,  4.25]])]]",7,(connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform_matrix 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),(connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['base_tier_shape', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_horizontal_line']","['base_tiers', 'antenna_lines']","['all_base_strokes', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))']","['(T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0)))', '(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1))))']",['0.0'],"['1', '2.0']",[],"['base_tier_shape', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_horizontal_line', '0.0']","['base_tiers', 'antenna_lines', '1', '2.0']","['all_base_strokes', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '0.0']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '1', '2.0']","['(T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0)))', '(C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-056.png
dials_context_programs_context_small_abstractions_027,dials_context_programs_test,(C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2)))) (M 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '1', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '2', 'M', '1', '0', '0', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5 ,  2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [ 8.5 , -2.25]]), array([[ 8.5 , -2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [-8.5 ,  2.25]]), array([[0.0000000e+00, 2.2500000e+00],
       [1.8369702e-16, 5.2500000e+00]]), array([[-1.  ,  5.25],
       [ 1.  ,  5.25]]), array([[-1.  ,  4.25],
       [ 1.  ,  4.25]]), array([[-1.  ,  3.25],
       [ 1.  ,  3.25]])]]",8,(connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform_matrix 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),(connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 2)))) (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['base_tier_shape', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_horizontal_line']","['base_tiers', 'antenna_lines']","['all_base_strokes', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))']","['(T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2))))']",['0.0'],"['1', '3.0']",[],"['base_tier_shape', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_horizontal_line', '0.0']","['base_tiers', 'antenna_lines', '1', '3.0']","['all_base_strokes', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '0.0']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '1', '3.0']","['(T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 2))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-057.png
dials_context_programs_context_small_abstractions_028,dials_context_programs_test,(C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (T (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (M 1 0 (* (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (T (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (M 1 0 (- 0 (* (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '1', 'M', '1', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', 'T', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'M', '1', '0', '*', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '0.25', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0', 'T', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'M', '1', '0', '-', '0', '*', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '0.25', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5 ,  2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [ 8.5 , -2.25]]), array([[ 8.5 , -2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [-8.5 ,  2.25]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[-0.75, -0.75],
       [ 0.75, -0.75],
       [ 0.75,  0.75],
       [-0.75,  0.75],
       [-0.75, -0.75]]), array([[0.000000e+00, 0.000000e+00],
       [6.123234e-17, 1.000000e+00]]), array([[4.25, 2.25],
       [4.25, 5.25]]), array([[3.25, 5.25],
       [5.25, 5.25]]), array([[-4.25,  2.25],
       [-4.25,  5.25]]), array([[-5.25,  5.25],
       [-3.25,  5.25]])]]",11,(connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (transform (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform_matrix 1 0 (* (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (transform (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform_matrix 1 0 (- 0 (* (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),(connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix_scale_angle_x_y 1 0 (+ 2 0.5) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (apply_transform_matrix_to_stroke (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform_matrix_scale_angle_x_y 1 0 (* (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (apply_transform_matrix_to_stroke (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['base_tier_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_vertical_line', 'antenna_horizontal_line']","['base_tiers', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_lines']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))']","['(T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0))))', '(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0))))']","['0.0', '1.0', '1.5']","['1', '1.0', '1.0', '1.5', '(/ pi 2)', '1.0', '1.0']",[],"['base_tier_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_vertical_line', 'antenna_horizontal_line', '0.0', '1.0', '1.5']","['base_tiers', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_lines', '1', '1.0', '1.0', '1.5', '(/ pi 2)', '1.0', '1.0']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '1', '1.0', '1.0', '1.5', '(/ pi 2)', '1.0', '1.0']","['(T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0))))', '(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-058.png
dials_context_programs_context_small_abstractions_029,dials_context_programs_test,(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (T (C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '1', 'M', '1', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', 'T', 'C', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '1', 'T', 'T', 'r', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'r', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '0', '+', '2', '+', '*', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5 ,  2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [ 8.5 , -2.25]]), array([[ 8.5 , -2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [-8.5 ,  2.25]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[-0.75, -0.75],
       [ 0.75, -0.75],
       [ 0.75,  0.75],
       [-0.75,  0.75],
       [-0.75, -0.75]]), array([[0.000000e+00, 0.000000e+00],
       [6.123234e-17, 1.000000e+00]]), array([[0.0000000e+00, 2.2500000e+00],
       [1.8369702e-16, 5.2500000e+00]]), array([[-1.  ,  5.25],
       [ 1.  ,  5.25]]), array([[-1.  ,  4.25],
       [ 1.  ,  4.25]]), array([[-2.  ,  4.75],
       [-1.  ,  4.75],
       [-1.  ,  5.75],
       [-2.  ,  5.75],
       [-2.  ,  4.75]]), array([[1.  , 4.75],
       [2.  , 4.75],
       [2.  , 5.75],
       [1.  , 5.75],
       [1.  , 4.75]])]]",12,(connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix 1 0 (+ 2 0.5) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (transform (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 1)))) (transform (transform square (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform square (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),(connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (transform_matrix_scale_angle_x_y 1 0 (+ 2 0.5) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['base_tier_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial']","['base_tiers', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial']","['all_base_strokes', 'row_of_dials', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T r (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T r (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']","['0.0', '1.0', '1.5']","['1', '1.0', '1.0', '1.5', '(/ pi 2)', '2.0']",[],"['base_tier_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', '0.0', '1.0', '1.5']","['base_tiers', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', '1', '1.0', '1.0', '1.5', '(/ pi 2)', '2.0']","['all_base_strokes', 'row_of_dials', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T r (M 1 0 (+ 0.5 1) (* 0.5 1)))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T r (M 1 0 (+ 0.5 1) (* 0.5 1)))', '1', '1.0', '1.0', '1.5', '(/ pi 2)', '2.0']","['(T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 1 (M 1 0 (+ 2 0.5) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 1)))) (T (T r (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T r (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-059.png
dials_context_programs_context_small_abstractions_030,dials_context_programs_test,(C (C (C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5))) (M 1 0 (- 0 (* 0.5 (* (- 5 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))) (T (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (M 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (T (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (M 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['C', 'C', 'C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '2', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '2', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '2', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '5', 'M', '1', '0', '+', '2', '0.5', '0', '2', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '*', '-', '5', '1', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '2', '1', '+', '2', '0.5', 'T', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'M', '1', '0', '*', '+', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '*', '2', '0.5', '0.25', '+', '2', '+', '*', '0.5', '*', '+', '*', '2', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0', 'T', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'M', '1', '0', '-', '0', '*', '+', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '*', '2', '0.5', '0.25', '+', '2', '+', '*', '0.5', '*', '+', '*', '2', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5,  3.5],
       [ 8.5,  3.5]]), array([[-8.5, -3.5],
       [ 8.5, -3.5]]), array([[ 8.5, -3.5],
       [ 8.5,  3.5]]), array([[-8.5, -3.5],
       [-8.5,  3.5]]), array([[8.5 , 1.75],
       [9.5 , 1.75]]), array([[ 8.5 , -1.75],
       [ 9.5 , -1.75]]), array([[ 9.5 , -1.75],
       [ 9.5 ,  1.75]]), array([[ 8.5 , -1.75],
       [ 8.5 ,  1.75]]), array([[-9.5 ,  1.75],
       [-8.5 ,  1.75]]), array([[-9.5 , -1.75],
       [-8.5 , -1.75]]), array([[-8.5 , -1.75],
       [-8.5 ,  1.75]]), array([[-9.5 , -1.75],
       [-9.5 ,  1.75]]), array([[-4.5       , -1.25      ],
       [-4.51168972, -1.14251478],
       [-4.54621229, -1.04005545],
       [-4.60195347, -0.94741289],
       [-4.67630686, -0.86891897],
       [-4.76579578, -0.80824398],
       [-4.86623583, -0.768225  ],
       [-4.97293055, -0.75073329],
       [-5.080891  , -0.75658674],
       [-5.18506908, -0.78551164],
       [-5.28059353, -0.8361555 ],
       [-5.36299775, -0.90615027],
       [-5.42842859, -0.99222307],
       [-5.47382659, -1.09034923],
       [-5.49706898, -1.19594049],
       [-5.49706898, -1.30405951],
       [-5.47382659, -1.40965077],
       [-5.42842859, -1.50777693],
       [-5.36299775, -1.59384973],
       [-5.28059353, -1.6638445 ],
       [-5.18506908, -1.71448836],
       [-5.080891  , -1.74341326],
       [-4.97293055, -1.74926671],
       [-4.86623583, -1.731775  ],
       [-4.76579578, -1.69175602],
       [-4.67630686, -1.63108103],
       [-4.60195347, -1.55258711],
       [-4.54621229, -1.45994455],
       [-4.51168972, -1.35748522],
       [-4.5       , -1.25      ]]), array([[-5.75, -2.  ],
       [-4.25, -2.  ],
       [-4.25, -0.5 ],
       [-5.75, -0.5 ],
       [-5.75, -2.  ]]), array([[-5.  , -1.25],
       [-5.  , -0.25]]), array([[-2.        , -1.25      ],
       [-2.01168972, -1.14251478],
       [-2.04621229, -1.04005545],
       [-2.10195347, -0.94741289],
       [-2.17630686, -0.86891897],
       [-2.26579578, -0.80824398],
       [-2.36623583, -0.768225  ],
       [-2.47293055, -0.75073329],
       [-2.580891  , -0.75658674],
       [-2.68506908, -0.78551164],
       [-2.78059353, -0.8361555 ],
       [-2.86299775, -0.90615027],
       [-2.92842859, -0.99222307],
       [-2.97382659, -1.09034923],
       [-2.99706898, -1.19594049],
       [-2.99706898, -1.30405951],
       [-2.97382659, -1.40965077],
       [-2.92842859, -1.50777693],
       [-2.86299775, -1.59384973],
       [-2.78059353, -1.6638445 ],
       [-2.68506908, -1.71448836],
       [-2.580891  , -1.74341326],
       [-2.47293055, -1.74926671],
       [-2.36623583, -1.731775  ],
       [-2.26579578, -1.69175602],
       [-2.17630686, -1.63108103],
       [-2.10195347, -1.55258711],
       [-2.04621229, -1.45994455],
       [-2.01168972, -1.35748522],
       [-2.        , -1.25      ]]), array([[-3.25, -2.  ],
       [-1.75, -2.  ],
       [-1.75, -0.5 ],
       [-3.25, -0.5 ],
       [-3.25, -2.  ]]), array([[-2.5 , -1.25],
       [-2.5 , -0.25]]), array([[ 0.5       , -1.25      ],
       [ 0.48831028, -1.14251478],
       [ 0.45378771, -1.04005545],
       [ 0.39804653, -0.94741289],
       [ 0.32369314, -0.86891897],
       [ 0.23420422, -0.80824398],
       [ 0.13376417, -0.768225  ],
       [ 0.02706945, -0.75073329],
       [-0.080891  , -0.75658674],
       [-0.18506908, -0.78551164],
       [-0.28059353, -0.8361555 ],
       [-0.36299775, -0.90615027],
       [-0.42842859, -0.99222307],
       [-0.47382659, -1.09034923],
       [-0.49706898, -1.19594049],
       [-0.49706898, -1.30405951],
       [-0.47382659, -1.40965077],
       [-0.42842859, -1.50777693],
       [-0.36299775, -1.59384973],
       [-0.28059353, -1.6638445 ],
       [-0.18506908, -1.71448836],
       [-0.080891  , -1.74341326],
       [ 0.02706945, -1.74926671],
       [ 0.13376417, -1.731775  ],
       [ 0.23420422, -1.69175602],
       [ 0.32369314, -1.63108103],
       [ 0.39804653, -1.55258711],
       [ 0.45378771, -1.45994455],
       [ 0.48831028, -1.35748522],
       [ 0.5       , -1.25      ]]), array([[-0.75, -2.  ],
       [ 0.75, -2.  ],
       [ 0.75, -0.5 ],
       [-0.75, -0.5 ],
       [-0.75, -2.  ]]), array([[ 0.  , -1.25],
       [ 0.  , -0.25]]), array([[ 3.        , -1.25      ],
       [ 2.98831028, -1.14251478],
       [ 2.95378771, -1.04005545],
       [ 2.89804653, -0.94741289],
       [ 2.82369314, -0.86891897],
       [ 2.73420422, -0.80824398],
       [ 2.63376417, -0.768225  ],
       [ 2.52706945, -0.75073329],
       [ 2.419109  , -0.75658674],
       [ 2.31493092, -0.78551164],
       [ 2.21940647, -0.8361555 ],
       [ 2.13700225, -0.90615027],
       [ 2.07157141, -0.99222307],
       [ 2.02617341, -1.09034923],
       [ 2.00293102, -1.19594049],
       [ 2.00293102, -1.30405951],
       [ 2.02617341, -1.40965077],
       [ 2.07157141, -1.50777693],
       [ 2.13700225, -1.59384973],
       [ 2.21940647, -1.6638445 ],
       [ 2.31493092, -1.71448836],
       [ 2.419109  , -1.74341326],
       [ 2.52706945, -1.74926671],
       [ 2.63376417, -1.731775  ],
       [ 2.73420422, -1.69175602],
       [ 2.82369314, -1.63108103],
       [ 2.89804653, -1.55258711],
       [ 2.95378771, -1.45994455],
       [ 2.98831028, -1.35748522],
       [ 3.        , -1.25      ]]), array([[ 1.75, -2.  ],
       [ 3.25, -2.  ],
       [ 3.25, -0.5 ],
       [ 1.75, -0.5 ],
       [ 1.75, -2.  ]]), array([[ 2.5 , -1.25],
       [ 2.5 , -0.25]]), array([[ 5.5       , -1.25      ],
       [ 5.48831028, -1.14251478],
       [ 5.45378771, -1.04005545],
       [ 5.39804653, -0.94741289],
       [ 5.32369314, -0.86891897],
       [ 5.23420422, -0.80824398],
       [ 5.13376417, -0.768225  ],
       [ 5.02706945, -0.75073329],
       [ 4.919109  , -0.75658674],
       [ 4.81493092, -0.78551164],
       [ 4.71940647, -0.8361555 ],
       [ 4.63700225, -0.90615027],
       [ 4.57157141, -0.99222307],
       [ 4.52617341, -1.09034923],
       [ 4.50293102, -1.19594049],
       [ 4.50293102, -1.30405951],
       [ 4.52617341, -1.40965077],
       [ 4.57157141, -1.50777693],
       [ 4.63700225, -1.59384973],
       [ 4.71940647, -1.6638445 ],
       [ 4.81493092, -1.71448836],
       [ 4.919109  , -1.74341326],
       [ 5.02706945, -1.74926671],
       [ 5.13376417, -1.731775  ],
       [ 5.23420422, -1.69175602],
       [ 5.32369314, -1.63108103],
       [ 5.39804653, -1.55258711],
       [ 5.45378771, -1.45994455],
       [ 5.48831028, -1.35748522],
       [ 5.5       , -1.25      ]]), array([[ 4.25, -2.  ],
       [ 5.75, -2.  ],
       [ 5.75, -0.5 ],
       [ 4.25, -0.5 ],
       [ 4.25, -2.  ]]), array([[ 5.  , -1.25],
       [ 5.  , -0.25]]), array([[-4.5       ,  1.25      ],
       [-4.51168972,  1.35748522],
       [-4.54621229,  1.45994455],
       [-4.60195347,  1.55258711],
       [-4.67630686,  1.63108103],
       [-4.76579578,  1.69175602],
       [-4.86623583,  1.731775  ],
       [-4.97293055,  1.74926671],
       [-5.080891  ,  1.74341326],
       [-5.18506908,  1.71448836],
       [-5.28059353,  1.6638445 ],
       [-5.36299775,  1.59384973],
       [-5.42842859,  1.50777693],
       [-5.47382659,  1.40965077],
       [-5.49706898,  1.30405951],
       [-5.49706898,  1.19594049],
       [-5.47382659,  1.09034923],
       [-5.42842859,  0.99222307],
       [-5.36299775,  0.90615027],
       [-5.28059353,  0.8361555 ],
       [-5.18506908,  0.78551164],
       [-5.080891  ,  0.75658674],
       [-4.97293055,  0.75073329],
       [-4.86623583,  0.768225  ],
       [-4.76579578,  0.80824398],
       [-4.67630686,  0.86891897],
       [-4.60195347,  0.94741289],
       [-4.54621229,  1.04005545],
       [-4.51168972,  1.14251478],
       [-4.5       ,  1.25      ]]), array([[-5.75,  0.5 ],
       [-4.25,  0.5 ],
       [-4.25,  2.  ],
       [-5.75,  2.  ],
       [-5.75,  0.5 ]]), array([[-5.  ,  1.25],
       [-5.  ,  2.25]]), array([[-2.        ,  1.25      ],
       [-2.01168972,  1.35748522],
       [-2.04621229,  1.45994455],
       [-2.10195347,  1.55258711],
       [-2.17630686,  1.63108103],
       [-2.26579578,  1.69175602],
       [-2.36623583,  1.731775  ],
       [-2.47293055,  1.74926671],
       [-2.580891  ,  1.74341326],
       [-2.68506908,  1.71448836],
       [-2.78059353,  1.6638445 ],
       [-2.86299775,  1.59384973],
       [-2.92842859,  1.50777693],
       [-2.97382659,  1.40965077],
       [-2.99706898,  1.30405951],
       [-2.99706898,  1.19594049],
       [-2.97382659,  1.09034923],
       [-2.92842859,  0.99222307],
       [-2.86299775,  0.90615027],
       [-2.78059353,  0.8361555 ],
       [-2.68506908,  0.78551164],
       [-2.580891  ,  0.75658674],
       [-2.47293055,  0.75073329],
       [-2.36623583,  0.768225  ],
       [-2.26579578,  0.80824398],
       [-2.17630686,  0.86891897],
       [-2.10195347,  0.94741289],
       [-2.04621229,  1.04005545],
       [-2.01168972,  1.14251478],
       [-2.        ,  1.25      ]]), array([[-3.25,  0.5 ],
       [-1.75,  0.5 ],
       [-1.75,  2.  ],
       [-3.25,  2.  ],
       [-3.25,  0.5 ]]), array([[-2.5 ,  1.25],
       [-2.5 ,  2.25]]), array([[ 0.5       ,  1.25      ],
       [ 0.48831028,  1.35748522],
       [ 0.45378771,  1.45994455],
       [ 0.39804653,  1.55258711],
       [ 0.32369314,  1.63108103],
       [ 0.23420422,  1.69175602],
       [ 0.13376417,  1.731775  ],
       [ 0.02706945,  1.74926671],
       [-0.080891  ,  1.74341326],
       [-0.18506908,  1.71448836],
       [-0.28059353,  1.6638445 ],
       [-0.36299775,  1.59384973],
       [-0.42842859,  1.50777693],
       [-0.47382659,  1.40965077],
       [-0.49706898,  1.30405951],
       [-0.49706898,  1.19594049],
       [-0.47382659,  1.09034923],
       [-0.42842859,  0.99222307],
       [-0.36299775,  0.90615027],
       [-0.28059353,  0.8361555 ],
       [-0.18506908,  0.78551164],
       [-0.080891  ,  0.75658674],
       [ 0.02706945,  0.75073329],
       [ 0.13376417,  0.768225  ],
       [ 0.23420422,  0.80824398],
       [ 0.32369314,  0.86891897],
       [ 0.39804653,  0.94741289],
       [ 0.45378771,  1.04005545],
       [ 0.48831028,  1.14251478],
       [ 0.5       ,  1.25      ]]), array([[-0.75,  0.5 ],
       [ 0.75,  0.5 ],
       [ 0.75,  2.  ],
       [-0.75,  2.  ],
       [-0.75,  0.5 ]]), array([[0.  , 1.25],
       [0.  , 2.25]]), array([[3.        , 1.25      ],
       [2.98831028, 1.35748522],
       [2.95378771, 1.45994455],
       [2.89804653, 1.55258711],
       [2.82369314, 1.63108103],
       [2.73420422, 1.69175602],
       [2.63376417, 1.731775  ],
       [2.52706945, 1.74926671],
       [2.419109  , 1.74341326],
       [2.31493092, 1.71448836],
       [2.21940647, 1.6638445 ],
       [2.13700225, 1.59384973],
       [2.07157141, 1.50777693],
       [2.02617341, 1.40965077],
       [2.00293102, 1.30405951],
       [2.00293102, 1.19594049],
       [2.02617341, 1.09034923],
       [2.07157141, 0.99222307],
       [2.13700225, 0.90615027],
       [2.21940647, 0.8361555 ],
       [2.31493092, 0.78551164],
       [2.419109  , 0.75658674],
       [2.52706945, 0.75073329],
       [2.63376417, 0.768225  ],
       [2.73420422, 0.80824398],
       [2.82369314, 0.86891897],
       [2.89804653, 0.94741289],
       [2.95378771, 1.04005545],
       [2.98831028, 1.14251478],
       [3.        , 1.25      ]]), array([[1.75, 0.5 ],
       [3.25, 0.5 ],
       [3.25, 2.  ],
       [1.75, 2.  ],
       [1.75, 0.5 ]]), array([[2.5 , 1.25],
       [2.5 , 2.25]]), array([[5.5       , 1.25      ],
       [5.48831028, 1.35748522],
       [5.45378771, 1.45994455],
       [5.39804653, 1.55258711],
       [5.32369314, 1.63108103],
       [5.23420422, 1.69175602],
       [5.13376417, 1.731775  ],
       [5.02706945, 1.74926671],
       [4.919109  , 1.74341326],
       [4.81493092, 1.71448836],
       [4.71940647, 1.6638445 ],
       [4.63700225, 1.59384973],
       [4.57157141, 1.50777693],
       [4.52617341, 1.40965077],
       [4.50293102, 1.30405951],
       [4.50293102, 1.19594049],
       [4.52617341, 1.09034923],
       [4.57157141, 0.99222307],
       [4.63700225, 0.90615027],
       [4.71940647, 0.8361555 ],
       [4.81493092, 0.78551164],
       [4.919109  , 0.75658674],
       [5.02706945, 0.75073329],
       [5.13376417, 0.768225  ],
       [5.23420422, 0.80824398],
       [5.32369314, 0.86891897],
       [5.39804653, 0.94741289],
       [5.45378771, 1.04005545],
       [5.48831028, 1.14251478],
       [5.5       , 1.25      ]]), array([[4.25, 0.5 ],
       [5.75, 0.5 ],
       [5.75, 2.  ],
       [4.25, 2.  ],
       [4.25, 0.5 ]]), array([[5.  , 1.25],
       [5.  , 2.25]]), array([[4.75, 3.5 ],
       [4.75, 6.5 ]]), array([[3.75, 6.5 ],
       [5.75, 6.5 ]]), array([[-4.75,  3.5 ],
       [-4.75,  6.5 ]]), array([[-5.75,  6.5 ],
       [-3.75,  6.5 ]])]]",46,(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (transform_matrix 1 0 (+ 2 0.5) 0)) 2 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (- 0 (* 0.5 (* (- 5 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))) (transform (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform_matrix 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (transform (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform_matrix 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),(connect_strokes (connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (transform_matrix_scale_angle_x_y 1 0 (+ 2 0.5) 0)) 2 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (* (- 5 1) (+ 2 0.5)))) (- 0 (* 0.5 (* (- 2 1) (+ 2 0.5))))))) (apply_transform_matrix_to_stroke (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform_matrix_scale_angle_x_y 1 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25) (+ 2 (+ (* 0.5 (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))) (apply_transform_matrix_to_stroke (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* (+ (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (* 2 (* 2 0.5))) 0.25)) (+ 2 (+ (* 0.5 (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0))))),"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_vertical_line', 'antenna_horizontal_line']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_lines']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5)))', '(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0))))', '(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0))))']","['0.0', '1.0', '1.5']","['1', '5.0', '2.0', '1.5', '(/ pi 2)', '1.0', '1.0']",[],"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_vertical_line', 'antenna_horizontal_line', '0.0', '1.0', '1.5']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_lines', '1', '5.0', '2.0', '1.5', '(/ pi 2)', '1.0', '1.0']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '1', '5.0', '2.0', '1.5', '(/ pi 2)', '1.0', '1.0']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 2 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 5 (M 1 0 (+ 2 0.5) 0)) 2 (M 1 0 0 (+ 2 0.5)))', '(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0))))', '(C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-060.png
dials_context_programs_context_small_abstractions_031,dials_context_programs_test,(C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (T (repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (+ 0 (* 0.5 (* 4 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),"['C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'r_s', '*', '2', '0.5', '*', '*', '+', '*', '1', '+', '10', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0.5', 'M', '1', '0', '-', '0', '*', '0.5', '+', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '2', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'C', 'T', 'c', 'M', '+', '1', '*', '0', '0.5', '0', '0', '0', 'T', 'r', 'M', '+', '1', '*', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '4', 'M', '1', '0', '-', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '+', '0', '*', '0.5', '*', '4', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5']","[[array([[-8.5 ,  6.25],
       [ 8.5 ,  6.25]]), array([[-8.5 , -6.25],
       [ 8.5 , -6.25]]), array([[ 8.5 , -6.25],
       [ 8.5 ,  6.25]]), array([[-8.5 , -6.25],
       [-8.5 ,  6.25]]), array([[8.5  , 3.125],
       [9.5  , 3.125]]), array([[ 8.5  , -3.125],
       [ 9.5  , -3.125]]), array([[ 9.5  , -3.125],
       [ 9.5  ,  3.125]]), array([[ 8.5  , -3.125],
       [ 8.5  ,  3.125]]), array([[-9.5  ,  3.125],
       [-8.5  ,  3.125]]), array([[-9.5  , -3.125],
       [-8.5  , -3.125]]), array([[-8.5  , -3.125],
       [-8.5  ,  3.125]]), array([[-9.5  , -3.125],
       [-9.5  ,  3.125]]), array([[ 5.50000000e+00,  0.00000000e+00],
       [ 5.48831028e+00,  1.07485220e-01],
       [ 5.45378771e+00,  2.09944551e-01],
       [ 5.39804653e+00,  3.02587108e-01],
       [ 5.32369314e+00,  3.81081028e-01],
       [ 5.23420422e+00,  4.41756022e-01],
       [ 5.13376417e+00,  4.81774996e-01],
       [ 5.02706945e+00,  4.99266707e-01],
       [ 4.91910900e+00,  4.93413261e-01],
       [ 4.81493092e+00,  4.64488360e-01],
       [ 4.71940647e+00,  4.13844499e-01],
       [ 4.63700225e+00,  3.43849729e-01],
       [ 4.57157141e+00,  2.57776929e-01],
       [ 4.52617341e+00,  1.59650765e-01],
       [ 4.50293102e+00,  5.40595092e-02],
       [ 4.50293102e+00, -5.40595092e-02],
       [ 4.52617341e+00, -1.59650765e-01],
       [ 4.57157141e+00, -2.57776929e-01],
       [ 4.63700225e+00, -3.43849729e-01],
       [ 4.71940647e+00, -4.13844499e-01],
       [ 4.81493092e+00, -4.64488360e-01],
       [ 4.91910900e+00, -4.93413261e-01],
       [ 5.02706945e+00, -4.99266707e-01],
       [ 5.13376417e+00, -4.81774996e-01],
       [ 5.23420422e+00, -4.41756022e-01],
       [ 5.32369314e+00, -3.81081028e-01],
       [ 5.39804653e+00, -3.02587108e-01],
       [ 5.45378771e+00, -2.09944551e-01],
       [ 5.48831028e+00, -1.07485220e-01],
       [ 5.50000000e+00, -1.22464680e-16]]), array([[ 4.25, -0.75],
       [ 5.75, -0.75],
       [ 5.75,  0.75],
       [ 4.25,  0.75],
       [ 4.25, -0.75]]), array([[5., 0.],
       [5., 1.]]), array([[ 3.00000000e+00,  0.00000000e+00],
       [ 2.98831028e+00,  1.07485220e-01],
       [ 2.95378771e+00,  2.09944551e-01],
       [ 2.89804653e+00,  3.02587108e-01],
       [ 2.82369314e+00,  3.81081028e-01],
       [ 2.73420422e+00,  4.41756022e-01],
       [ 2.63376417e+00,  4.81774996e-01],
       [ 2.52706945e+00,  4.99266707e-01],
       [ 2.41910900e+00,  4.93413261e-01],
       [ 2.31493092e+00,  4.64488360e-01],
       [ 2.21940647e+00,  4.13844499e-01],
       [ 2.13700225e+00,  3.43849729e-01],
       [ 2.07157141e+00,  2.57776929e-01],
       [ 2.02617341e+00,  1.59650765e-01],
       [ 2.00293102e+00,  5.40595092e-02],
       [ 2.00293102e+00, -5.40595092e-02],
       [ 2.02617341e+00, -1.59650765e-01],
       [ 2.07157141e+00, -2.57776929e-01],
       [ 2.13700225e+00, -3.43849729e-01],
       [ 2.21940647e+00, -4.13844499e-01],
       [ 2.31493092e+00, -4.64488360e-01],
       [ 2.41910900e+00, -4.93413261e-01],
       [ 2.52706945e+00, -4.99266707e-01],
       [ 2.63376417e+00, -4.81774996e-01],
       [ 2.73420422e+00, -4.41756022e-01],
       [ 2.82369314e+00, -3.81081028e-01],
       [ 2.89804653e+00, -3.02587108e-01],
       [ 2.95378771e+00, -2.09944551e-01],
       [ 2.98831028e+00, -1.07485220e-01],
       [ 3.00000000e+00, -1.22464680e-16]]), array([[ 1.75, -0.75],
       [ 3.25, -0.75],
       [ 3.25,  0.75],
       [ 1.75,  0.75],
       [ 1.75, -0.75]]), array([[2.5, 0. ],
       [2.5, 1. ]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[-0.75, -0.75],
       [ 0.75, -0.75],
       [ 0.75,  0.75],
       [-0.75,  0.75],
       [-0.75, -0.75]]), array([[0., 0.],
       [0., 1.]]), array([[-2.00000000e+00,  0.00000000e+00],
       [-2.01168972e+00,  1.07485220e-01],
       [-2.04621229e+00,  2.09944551e-01],
       [-2.10195347e+00,  3.02587108e-01],
       [-2.17630686e+00,  3.81081028e-01],
       [-2.26579578e+00,  4.41756022e-01],
       [-2.36623583e+00,  4.81774996e-01],
       [-2.47293055e+00,  4.99266707e-01],
       [-2.58089100e+00,  4.93413261e-01],
       [-2.68506908e+00,  4.64488360e-01],
       [-2.78059353e+00,  4.13844499e-01],
       [-2.86299775e+00,  3.43849729e-01],
       [-2.92842859e+00,  2.57776929e-01],
       [-2.97382659e+00,  1.59650765e-01],
       [-2.99706898e+00,  5.40595092e-02],
       [-2.99706898e+00, -5.40595092e-02],
       [-2.97382659e+00, -1.59650765e-01],
       [-2.92842859e+00, -2.57776929e-01],
       [-2.86299775e+00, -3.43849729e-01],
       [-2.78059353e+00, -4.13844499e-01],
       [-2.68506908e+00, -4.64488360e-01],
       [-2.58089100e+00, -4.93413261e-01],
       [-2.47293055e+00, -4.99266707e-01],
       [-2.36623583e+00, -4.81774996e-01],
       [-2.26579578e+00, -4.41756022e-01],
       [-2.17630686e+00, -3.81081028e-01],
       [-2.10195347e+00, -3.02587108e-01],
       [-2.04621229e+00, -2.09944551e-01],
       [-2.01168972e+00, -1.07485220e-01],
       [-2.00000000e+00, -1.22464680e-16]]), array([[-3.25, -0.75],
       [-1.75, -0.75],
       [-1.75,  0.75],
       [-3.25,  0.75],
       [-3.25, -0.75]]), array([[-2.5,  0. ],
       [-2.5,  1. ]])]]",24,(connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (transform (rectangle (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (transform (repeat_transform (repeat_transform (connect_strokes (connect_strokes (transform circle (transform_matrix (+ 1 (* 0 0.5)) 0 0 0)) (transform square (transform_matrix (+ 1 (* 1 0.5)) 0 0 0))) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (transform_matrix 1 0 (- 0 (+ 2 0.5)) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (+ 0 (* 0.5 (* 4 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),(connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y (+ 1 (* 0 0.5)) 0 0 0)) (apply_transform_matrix_to_stroke base_square (transform_matrix_scale_angle_x_y (+ 1 (* 1 0.5)) 0 0 0))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 2 0.5)) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (+ 0 (* 0.5 (* 4 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))),"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand']","['all_base_strokes', 'row_of_dials']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5)))']","['0.0', '1.0', '1.5']","['1', '4.0', '1.0', '1.5', '(/ pi 2)']",[],"['base_tier_shape', 'base_filial_shape', 'base_filial_shape', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_shape', 'base_dial_hand', '0.0', '1.0', '1.5']","['base_tiers', 'base_filials', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', '1', '4.0', '1.0', '1.5', '(/ pi 2)']","['all_base_strokes', 'row_of_dials']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', 'r', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '0.0', '1.0', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5))', 'repeat_x', 'repeat_y', 'r', '(T l (M 1 0 (- 0 0.5) 0))', '1', '4.0', '1.0', '1.5', '(/ pi 2)']","['(C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5))) 0))) (T (r_s (* 2 0.5) (* (* (+ (* 1 (+ 10 0.5)) (* 4 0.5)) (pow 0.5 0)) 0.5)) (M 1 0 (- 0 (* 0.5 (+ (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* 2 0.5)))) 0)))', '(repeat (repeat (C (C (T c (M (+ 1 (* 0 0.5)) 0 0 0)) (T r (M (+ 1 (* 1 0.5)) 0 0 0))) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 4 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5)))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-061.png
dials_context_programs_context_small_abstractions_032,dials_context_programs_test,(C (C (C (C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (M 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))))))) (T (repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5))) (M 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 (* (max (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5)))) 0.25) (+ 2 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0)))))) (T (C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (M 1 0 (- 0 (* (max (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5)))) 0.25)) (+ 2 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0)))))),"['C', 'C', 'C', 'C', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'M', '1', '0', '0', '+', '*', '0.5', '0', '0', 'T', 'r_s', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '1', '*', '4', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '1', 'M', '1', '0', '0', '+', '*', '0.5', '0', '*', '0.5', '+', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '1', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', 'T', 'repeat', 'repeat', 'C', 'repeat', 'c', '1', 'M', '+', '1', '0.5', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '1', '/', 'pi', '2', '0', '0', 'M', '1', '0', '*', '1', '*', '0.5', 'cos', '/', 'pi', '2', '*', '1', '*', '0.5', 'sin', '/', 'pi', '2', '2', 'M', '1', '0', '-', '0', '+', '2', '0.5', '0', '1', 'M', '1', '0', '0', '+', '2', '0.5', 'M', '1', '0', '+', '0', '*', '0.5', '*', '2', '+', '2', '0.5', '-', '0', '*', '0.5', '*', '-', '1', '1', '+', '2', '0.5', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '*', 'max', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '1', '*', '4', '0.5', '0.25', '+', '2', '+', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '1', '+', '*', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0', 'T', 'C', 'C', 'C', 'T', 'T', 'T', 'l', 'M', '3', '/', 'pi', '2', '0', '-', '0', '2', 'M', '1', '0', '0', '0', 'M', '1', '0', '0', '0', 'T', 'T', 'T', 'l', 'M', '1', '0', '-', '0', '0.5', '0', 'M', '*', '1', '2', '0', '0', '0', 'M', '1', '0', '0', '-', '*', '*', '0.5', '1', '2', '0', 'T', 'T', 'c', 'M', '1', '0', '-', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'T', 'T', 'c', 'M', '1', '0', '+', '0.5', '1', '*', '0.5', '1', 'M', '1', '0', '0', '*', '0.5', '1', 'M', '1', '0', '-', '0', '*', 'max', 'max', '0', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '0', '*', '4', '0.5', '-', '+', '*', '6', '+', '2', '0.5', '*', '4', '0.5', '*', '1', '*', '4', '0.5', '0.25', '+', '2', '+', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '1', '+', '*', '0.5', '*', '+', '*', '1', '+', '2', '0.5', '*', '4', '0.5', 'pow', '0.5', '0', '0']","[[array([[-8.5 ,  2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [ 8.5 , -2.25]]), array([[ 8.5 , -2.25],
       [ 8.5 ,  2.25]]), array([[-8.5 , -2.25],
       [-8.5 ,  2.25]]), array([[-7.5,  4.5],
       [ 7.5,  4.5]]), array([[-7.5 ,  2.25],
       [ 7.5 ,  2.25]]), array([[7.5 , 2.25],
       [7.5 , 4.5 ]]), array([[-7.5 ,  2.25],
       [-7.5 ,  4.5 ]]), array([[ 3.00000000e+00,  0.00000000e+00],
       [ 2.98831028e+00,  1.07485220e-01],
       [ 2.95378771e+00,  2.09944551e-01],
       [ 2.89804653e+00,  3.02587108e-01],
       [ 2.82369314e+00,  3.81081028e-01],
       [ 2.73420422e+00,  4.41756022e-01],
       [ 2.63376417e+00,  4.81774996e-01],
       [ 2.52706945e+00,  4.99266707e-01],
       [ 2.41910900e+00,  4.93413261e-01],
       [ 2.31493092e+00,  4.64488360e-01],
       [ 2.21940647e+00,  4.13844499e-01],
       [ 2.13700225e+00,  3.43849729e-01],
       [ 2.07157141e+00,  2.57776929e-01],
       [ 2.02617341e+00,  1.59650765e-01],
       [ 2.00293102e+00,  5.40595092e-02],
       [ 2.00293102e+00, -5.40595092e-02],
       [ 2.02617341e+00, -1.59650765e-01],
       [ 2.07157141e+00, -2.57776929e-01],
       [ 2.13700225e+00, -3.43849729e-01],
       [ 2.21940647e+00, -4.13844499e-01],
       [ 2.31493092e+00, -4.64488360e-01],
       [ 2.41910900e+00, -4.93413261e-01],
       [ 2.52706945e+00, -4.99266707e-01],
       [ 2.63376417e+00, -4.81774996e-01],
       [ 2.73420422e+00, -4.41756022e-01],
       [ 2.82369314e+00, -3.81081028e-01],
       [ 2.89804653e+00, -3.02587108e-01],
       [ 2.95378771e+00, -2.09944551e-01],
       [ 2.98831028e+00, -1.07485220e-01],
       [ 3.00000000e+00, -1.22464680e-16]]), array([[2.5, 0. ],
       [2.5, 1. ]]), array([[ 5.00000000e-01,  0.00000000e+00],
       [ 4.88310278e-01,  1.07485220e-01],
       [ 4.53787710e-01,  2.09944551e-01],
       [ 3.98046533e-01,  3.02587108e-01],
       [ 3.23693142e-01,  3.81081028e-01],
       [ 2.34204220e-01,  4.41756022e-01],
       [ 1.33764169e-01,  4.81774996e-01],
       [ 2.70694543e-02,  4.99266707e-01],
       [-8.08909983e-02,  4.93413261e-01],
       [-1.85069078e-01,  4.64488360e-01],
       [-2.80593533e-01,  4.13844499e-01],
       [-3.62997746e-01,  3.43849729e-01],
       [-4.28428588e-01,  2.57776929e-01],
       [-4.73826586e-01,  1.59650765e-01],
       [-4.97068979e-01,  5.40595092e-02],
       [-4.97068979e-01, -5.40595092e-02],
       [-4.73826586e-01, -1.59650765e-01],
       [-4.28428588e-01, -2.57776929e-01],
       [-3.62997746e-01, -3.43849729e-01],
       [-2.80593533e-01, -4.13844499e-01],
       [-1.85069078e-01, -4.64488360e-01],
       [-8.08909983e-02, -4.93413261e-01],
       [ 2.70694543e-02, -4.99266707e-01],
       [ 1.33764169e-01, -4.81774996e-01],
       [ 2.34204220e-01, -4.41756022e-01],
       [ 3.23693142e-01, -3.81081028e-01],
       [ 3.98046533e-01, -3.02587108e-01],
       [ 4.53787710e-01, -2.09944551e-01],
       [ 4.88310278e-01, -1.07485220e-01],
       [ 5.00000000e-01, -1.22464680e-16]]), array([[0., 0.],
       [0., 1.]]), array([[4.25, 4.5 ],
       [4.25, 7.5 ]]), array([[3.25, 7.5 ],
       [5.25, 7.5 ]]), array([[3.25      , 7.5       ],
       [3.23831028, 7.60748522],
       [3.20378771, 7.70994455],
       [3.14804653, 7.80258711],
       [3.07369314, 7.88108103],
       [2.98420422, 7.94175602],
       [2.88376417, 7.981775  ],
       [2.77706945, 7.99926671],
       [2.669109  , 7.99341326],
       [2.56493092, 7.96448836],
       [2.46940647, 7.9138445 ],
       [2.38700225, 7.84384973],
       [2.32157141, 7.75777693],
       [2.27617341, 7.65965077],
       [2.25293102, 7.55405951],
       [2.25293102, 7.44594049],
       [2.27617341, 7.34034923],
       [2.32157141, 7.24222307],
       [2.38700225, 7.15615027],
       [2.46940647, 7.0861555 ],
       [2.56493092, 7.03551164],
       [2.669109  , 7.00658674],
       [2.77706945, 7.00073329],
       [2.88376417, 7.018225  ],
       [2.98420422, 7.05824398],
       [3.07369314, 7.11891897],
       [3.14804653, 7.19741289],
       [3.20378771, 7.29005545],
       [3.23831028, 7.39251478],
       [3.25      , 7.5       ]]), array([[6.25      , 7.5       ],
       [6.23831028, 7.60748522],
       [6.20378771, 7.70994455],
       [6.14804653, 7.80258711],
       [6.07369314, 7.88108103],
       [5.98420422, 7.94175602],
       [5.88376417, 7.981775  ],
       [5.77706945, 7.99926671],
       [5.669109  , 7.99341326],
       [5.56493092, 7.96448836],
       [5.46940647, 7.9138445 ],
       [5.38700225, 7.84384973],
       [5.32157141, 7.75777693],
       [5.27617341, 7.65965077],
       [5.25293102, 7.55405951],
       [5.25293102, 7.44594049],
       [5.27617341, 7.34034923],
       [5.32157141, 7.24222307],
       [5.38700225, 7.15615027],
       [5.46940647, 7.0861555 ],
       [5.56493092, 7.03551164],
       [5.669109  , 7.00658674],
       [5.77706945, 7.00073329],
       [5.88376417, 7.018225  ],
       [5.98420422, 7.05824398],
       [6.07369314, 7.11891897],
       [6.14804653, 7.19741289],
       [6.20378771, 7.29005545],
       [6.23831028, 7.39251478],
       [6.25      , 7.5       ]]), array([[-4.25,  4.5 ],
       [-4.25,  7.5 ]]), array([[-5.25,  7.5 ],
       [-3.25,  7.5 ]]), array([[-5.25      ,  7.5       ],
       [-5.26168972,  7.60748522],
       [-5.29621229,  7.70994455],
       [-5.35195347,  7.80258711],
       [-5.42630686,  7.88108103],
       [-5.51579578,  7.94175602],
       [-5.61623583,  7.981775  ],
       [-5.72293055,  7.99926671],
       [-5.830891  ,  7.99341326],
       [-5.93506908,  7.96448836],
       [-6.03059353,  7.9138445 ],
       [-6.11299775,  7.84384973],
       [-6.17842859,  7.75777693],
       [-6.22382659,  7.65965077],
       [-6.24706898,  7.55405951],
       [-6.24706898,  7.44594049],
       [-6.22382659,  7.34034923],
       [-6.17842859,  7.24222307],
       [-6.11299775,  7.15615027],
       [-6.03059353,  7.0861555 ],
       [-5.93506908,  7.03551164],
       [-5.830891  ,  7.00658674],
       [-5.72293055,  7.00073329],
       [-5.61623583,  7.018225  ],
       [-5.51579578,  7.05824398],
       [-5.42630686,  7.11891897],
       [-5.35195347,  7.19741289],
       [-5.29621229,  7.29005545],
       [-5.26168972,  7.39251478],
       [-5.25      ,  7.5       ]]), array([[-2.25      ,  7.5       ],
       [-2.26168972,  7.60748522],
       [-2.29621229,  7.70994455],
       [-2.35195347,  7.80258711],
       [-2.42630686,  7.88108103],
       [-2.51579578,  7.94175602],
       [-2.61623583,  7.981775  ],
       [-2.72293055,  7.99926671],
       [-2.830891  ,  7.99341326],
       [-2.93506908,  7.96448836],
       [-3.03059353,  7.9138445 ],
       [-3.11299775,  7.84384973],
       [-3.17842859,  7.75777693],
       [-3.22382659,  7.65965077],
       [-3.24706898,  7.55405951],
       [-3.24706898,  7.44594049],
       [-3.22382659,  7.34034923],
       [-3.17842859,  7.24222307],
       [-3.11299775,  7.15615027],
       [-3.03059353,  7.0861555 ],
       [-2.93506908,  7.03551164],
       [-2.830891  ,  7.00658674],
       [-2.72293055,  7.00073329],
       [-2.61623583,  7.018225  ],
       [-2.51579578,  7.05824398],
       [-2.42630686,  7.11891897],
       [-2.35195347,  7.19741289],
       [-2.29621229,  7.29005545],
       [-2.26168972,  7.39251478],
       [-2.25      ,  7.5       ]])]]",20,(connect_strokes (connect_strokes (connect_strokes (connect_strokes (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix 1 0 0 (+ (* 0.5 0) 0))) (transform (rectangle (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (transform_matrix 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))))))) (transform (repeat_transform (repeat_transform (connect_strokes (repeat_transform circle 1 (transform_matrix (+ 1 0.5) 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix 1 (/ pi 2) 0 0)) (transform_matrix 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (transform_matrix 1 0 (- 0 (+ 2 0.5)) 0)) 1 (transform_matrix 1 0 0 (+ 2 0.5))) (transform_matrix 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 (* (max (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5)))) 0.25) (+ 2 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0)))))) (transform (connect_strokes (connect_strokes (connect_strokes (transform (transform (transform line (transform_matrix 3 (/ pi 2) 0 (- 0 2))) (transform_matrix 1 0 0 0)) (transform_matrix 1 0 0 0)) (transform (transform (transform line (transform_matrix 1 0 (- 0 0.5) 0)) (transform_matrix (* 1 2) 0 0 0)) (transform_matrix 1 0 0 (- (* (* 0.5 1) 2) 0)))) (transform (transform circle (transform_matrix 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform (transform circle (transform_matrix 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix 1 0 0 (* 0.5 1)))) (transform_matrix 1 0 (- 0 (* (max (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5)))) 0.25)) (+ 2 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0)))))),(connect_strokes (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) 0))) (apply_transform_matrix_to_stroke (scaled_rectangle_w_h (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))))))) (apply_transform_matrix_to_stroke (repeat_transform_n_times (repeat_transform_n_times (connect_strokes (repeat_transform_n_times base_circle 1 (transform_matrix_scale_angle_x_y (+ 1 0.5) 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y 1 (/ pi 2) 0 0)) (transform_matrix_scale_angle_x_y 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 2 0.5)) 0)) 1 (transform_matrix_scale_angle_x_y 1 0 0 (+ 2 0.5))) (transform_matrix_scale_angle_x_y 1 0 (+ 0 (* 0.5 (* 2 (+ 2 0.5)))) (- 0 (* 0.5 (* (- 1 1) (+ 2 0.5))))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 (* (max (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5)))) 0.25) (+ 2 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0)))))) (apply_transform_matrix_to_stroke (connect_strokes (connect_strokes (connect_strokes (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 3 (/ pi 2) 0 (- 0 2))) (transform_matrix_scale_angle_x_y 1 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 0)) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_line (transform_matrix_scale_angle_x_y 1 0 (- 0 0.5) 0)) (transform_matrix_scale_angle_x_y (* 1 2) 0 0 0)) (transform_matrix_scale_angle_x_y 1 0 0 (- (* (* 0.5 1) 2) 0)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (apply_transform_matrix_to_stroke (apply_transform_matrix_to_stroke base_circle (transform_matrix_scale_angle_x_y 1 0 (+ 0.5 1) (* 0.5 1))) (transform_matrix_scale_angle_x_y 1 0 0 (* 0.5 1)))) (transform_matrix_scale_angle_x_y 1 0 (- 0 (* (max (max 0 (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5)))) (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5)))) 0.25)) (+ 2 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (+ (* 0.5 (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) 0)))))),"['base_tier_shape', 'base_tier_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial']","['base_tiers', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', 'antenna_lines', 'antenna_finial']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)))', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)))', 'repeat_x', 'repeat_y', 'c', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))']","['(C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (M 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))))))))', '(repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']","['0.0', '3.375', '1.5']","['2', '2.0', '1.0', '1.5', '1.0', '(/ pi 2)', '1.0', '1.0']",[],"['base_tier_shape', 'base_tier_shape', 'base_dial_shape', 'base_dial_hand', 'base_dial_shape', 'base_dial_hand', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', 'antenna_vertical_line', 'antenna_horizontal_line', 'antenna_finial', 'antenna_finial', '0.0', '3.375', '1.5']","['base_tiers', 'repeat_x', 'repeat_y', 'outer_strokes', 'base_dial_hand', 'antenna_lines', 'antenna_finial', 'antenna_lines', 'antenna_finial', '2', '2.0', '1.0', '1.5', '1.0', '(/ pi 2)', '1.0', '1.0']","['all_base_strokes', 'row_of_dials', 'whole_antenna', 'whole_antenna']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0)))', '(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)))', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', 'c', '(T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T l (M 3 (/ pi 2) 0 (- 0 2)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1)))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '0.0', '3.375', '1.5']","['(r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)))', 'repeat_x', 'repeat_y', 'c', '(T l (M 1 0 (- 0 0.5) 0))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '(T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0))', '(T c (M 1 0 (+ 0.5 1) (* 0.5 1)))', '2', '2.0', '1.0', '1.5', '1.0', '(/ pi 2)', '1.0', '1.0']","['(C (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 0 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))) (M 1 0 0 (+ (* 0.5 0) 0))) (T (r_s (- (+ (* 6 (+ 2 0.5)) (* 4 0.5)) (* 1 (* 4 0.5))) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1))) (M 1 0 0 (+ (* 0.5 0) (* 0.5 (+ (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 1)) (* (+ (* 1 (+ 2 0.5)) (* 4 0.5)) (pow 0.5 0))))))))', '(repeat (repeat (C (repeat c 1 (M (+ 1 0.5) 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M 1 (/ pi 2) 0 0)) (M 1 0 (* 1 (* 0.5 (cos (/ pi 2)))) (* 1 (* 0.5 (sin (/ pi 2))))))) 2 (M 1 0 (- 0 (+ 2 0.5)) 0)) 1 (M 1 0 0 (+ 2 0.5)))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))', '(C (C (C (T (T (T l (M 3 (/ pi 2) 0 (- 0 2))) (M 1 0 0 0)) (M 1 0 0 0)) (T (T (T l (M 1 0 (- 0 0.5) 0)) (M (* 1 2) 0 0 0)) (M 1 0 0 (- (* (* 0.5 1) 2) 0)))) (T (T c (M 1 0 (- 0 (+ 0.5 1)) (* 0.5 1))) (M 1 0 0 (* 0.5 1)))) (T (T c (M 1 0 (+ 0.5 1) (* 0.5 1))) (M 1 0 0 (* 0.5 1))))']",https://lax-drawing-dials-context-all.s3.amazonaws.com/lax-drawing-dials-context-all-062.png
